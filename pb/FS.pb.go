// Code generated by protoc-gen-go. DO NOT EDIT.
// source: FS.proto

// This file contains protocol buffers that are written into the filesystem

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Reference_Range int32

const (
	Reference_TOP    Reference_Range = 0
	Reference_BOTTOM Reference_Range = 1
)

var Reference_Range_name = map[int32]string{
	0: "TOP",
	1: "BOTTOM",
}

var Reference_Range_value = map[string]int32{
	"TOP":    0,
	"BOTTOM": 1,
}

func (x Reference_Range) Enum() *Reference_Range {
	p := new(Reference_Range)
	*p = x
	return p
}

func (x Reference_Range) String() string {
	return proto.EnumName(Reference_Range_name, int32(x))
}

func (x *Reference_Range) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Reference_Range_value, data, "Reference_Range")
	if err != nil {
		return err
	}
	*x = Reference_Range(value)
	return nil
}

func (Reference_Range) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_75967c92adc040c3, []int{1, 0}
}

//*
// The ${HBASE_ROOTDIR}/hbase.version file content
type HBaseVersionFileContent struct {
	Version              *string  `protobuf:"bytes,1,req,name=version" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HBaseVersionFileContent) Reset()         { *m = HBaseVersionFileContent{} }
func (m *HBaseVersionFileContent) String() string { return proto.CompactTextString(m) }
func (*HBaseVersionFileContent) ProtoMessage()    {}
func (*HBaseVersionFileContent) Descriptor() ([]byte, []int) {
	return fileDescriptor_75967c92adc040c3, []int{0}
}

func (m *HBaseVersionFileContent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HBaseVersionFileContent.Unmarshal(m, b)
}
func (m *HBaseVersionFileContent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HBaseVersionFileContent.Marshal(b, m, deterministic)
}
func (m *HBaseVersionFileContent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HBaseVersionFileContent.Merge(m, src)
}
func (m *HBaseVersionFileContent) XXX_Size() int {
	return xxx_messageInfo_HBaseVersionFileContent.Size(m)
}
func (m *HBaseVersionFileContent) XXX_DiscardUnknown() {
	xxx_messageInfo_HBaseVersionFileContent.DiscardUnknown(m)
}

var xxx_messageInfo_HBaseVersionFileContent proto.InternalMessageInfo

func (m *HBaseVersionFileContent) GetVersion() string {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return ""
}

//*
// Reference file content used when we split an hfile under a region.
type Reference struct {
	Splitkey             []byte           `protobuf:"bytes,1,req,name=splitkey" json:"splitkey,omitempty"`
	Range                *Reference_Range `protobuf:"varint,2,req,name=range,enum=hbase.pb.Reference_Range" json:"range,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Reference) Reset()         { *m = Reference{} }
func (m *Reference) String() string { return proto.CompactTextString(m) }
func (*Reference) ProtoMessage()    {}
func (*Reference) Descriptor() ([]byte, []int) {
	return fileDescriptor_75967c92adc040c3, []int{1}
}

func (m *Reference) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reference.Unmarshal(m, b)
}
func (m *Reference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reference.Marshal(b, m, deterministic)
}
func (m *Reference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reference.Merge(m, src)
}
func (m *Reference) XXX_Size() int {
	return xxx_messageInfo_Reference.Size(m)
}
func (m *Reference) XXX_DiscardUnknown() {
	xxx_messageInfo_Reference.DiscardUnknown(m)
}

var xxx_messageInfo_Reference proto.InternalMessageInfo

func (m *Reference) GetSplitkey() []byte {
	if m != nil {
		return m.Splitkey
	}
	return nil
}

func (m *Reference) GetRange() Reference_Range {
	if m != nil && m.Range != nil {
		return *m.Range
	}
	return Reference_TOP
}

func init() {
	proto.RegisterEnum("hbase.pb.Reference_Range", Reference_Range_name, Reference_Range_value)
	proto.RegisterType((*HBaseVersionFileContent)(nil), "hbase.pb.HBaseVersionFileContent")
	proto.RegisterType((*Reference)(nil), "hbase.pb.Reference")
}

func init() { proto.RegisterFile("FS.proto", fileDescriptor_75967c92adc040c3) }

var fileDescriptor_75967c92adc040c3 = []byte{
	// 224 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x3c, 0x8f, 0x41, 0x4b, 0xc3, 0x30,
	0x14, 0xc7, 0x4d, 0x65, 0xae, 0x7b, 0x88, 0x8c, 0x5c, 0xac, 0xe2, 0x61, 0xf4, 0xb4, 0x53, 0x44,
	0xfd, 0x06, 0x11, 0xca, 0x2e, 0xd2, 0x91, 0x15, 0xef, 0xe9, 0xfa, 0x5f, 0x53, 0x1c, 0x49, 0x48,
	0xe2, 0xc0, 0x6f, 0xe3, 0x47, 0x95, 0xad, 0x6e, 0xc7, 0xdf, 0x8f, 0xdf, 0x7b, 0x8f, 0x47, 0x79,
	0xb5, 0x11, 0x3e, 0xb8, 0xe4, 0x78, 0x6e, 0x5a, 0x1d, 0x21, 0x7c, 0x5b, 0xbe, 0xd1, 0xfd, 0x4a,
	0xea, 0x88, 0x4f, 0x84, 0x38, 0x38, 0x5b, 0x0d, 0x7b, 0xbc, 0x3b, 0x9b, 0x60, 0x13, 0x2f, 0x68,
	0x7a, 0x18, 0x6d, 0xc1, 0x16, 0xd9, 0x72, 0xa6, 0xce, 0x58, 0x1e, 0x68, 0xa6, 0xb0, 0x43, 0x80,
	0xdd, 0x82, 0x3f, 0x52, 0x1e, 0xfd, 0x7e, 0x48, 0x5f, 0xf8, 0x39, 0x75, 0xb7, 0xea, 0xc2, 0xfc,
	0x99, 0x26, 0x41, 0xdb, 0x1e, 0x45, 0xb6, 0xc8, 0x96, 0x77, 0xaf, 0x0f, 0xe2, 0x7c, 0x57, 0x5c,
	0xe6, 0x85, 0x3a, 0x06, 0x6a, 0xec, 0xca, 0x27, 0x9a, 0x9c, 0x98, 0x4f, 0xe9, 0xba, 0xa9, 0xd7,
	0xf3, 0x2b, 0x4e, 0x74, 0x23, 0xeb, 0xa6, 0xa9, 0x3f, 0xe6, 0x4c, 0x4a, 0x7a, 0x71, 0xa1, 0x17,
	0xda, 0xeb, 0xad, 0x81, 0x30, 0xba, 0x73, 0xce, 0xff, 0xaf, 0x8c, 0x46, 0x77, 0xe8, 0xc6, 0xf7,
	0xda, 0xef, 0x9d, 0xe8, 0x61, 0x11, 0x74, 0x42, 0x27, 0xf3, 0x6a, 0xb3, 0x3e, 0xda, 0xb8, 0x62,
	0xbf, 0x8c, 0xfd, 0x05, 0x00, 0x00, 0xff, 0xff, 0x4e, 0x8b, 0xc7, 0xa9, 0x05, 0x01, 0x00, 0x00,
}
