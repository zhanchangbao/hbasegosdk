// Code generated by protoc-gen-go. DO NOT EDIT.
// source: Comparator.proto

// This file contains protocol buffers that are used for filters

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BitComparator_BitwiseOp int32

const (
	BitComparator_AND BitComparator_BitwiseOp = 1
	BitComparator_OR  BitComparator_BitwiseOp = 2
	BitComparator_XOR BitComparator_BitwiseOp = 3
)

var BitComparator_BitwiseOp_name = map[int32]string{
	1: "AND",
	2: "OR",
	3: "XOR",
}

var BitComparator_BitwiseOp_value = map[string]int32{
	"AND": 1,
	"OR":  2,
	"XOR": 3,
}

func (x BitComparator_BitwiseOp) Enum() *BitComparator_BitwiseOp {
	p := new(BitComparator_BitwiseOp)
	*p = x
	return p
}

func (x BitComparator_BitwiseOp) String() string {
	return proto.EnumName(BitComparator_BitwiseOp_name, int32(x))
}

func (x *BitComparator_BitwiseOp) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BitComparator_BitwiseOp_value, data, "BitComparator_BitwiseOp")
	if err != nil {
		return err
	}
	*x = BitComparator_BitwiseOp(value)
	return nil
}

func (BitComparator_BitwiseOp) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33b3a8a5d9dddeee, []int{5, 0}
}

type Comparator struct {
	Name                 *string  `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	SerializedComparator []byte   `protobuf:"bytes,2,opt,name=serialized_comparator,json=serializedComparator" json:"serialized_comparator,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Comparator) Reset()         { *m = Comparator{} }
func (m *Comparator) String() string { return proto.CompactTextString(m) }
func (*Comparator) ProtoMessage()    {}
func (*Comparator) Descriptor() ([]byte, []int) {
	return fileDescriptor_33b3a8a5d9dddeee, []int{0}
}

func (m *Comparator) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Comparator.Unmarshal(m, b)
}
func (m *Comparator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Comparator.Marshal(b, m, deterministic)
}
func (m *Comparator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Comparator.Merge(m, src)
}
func (m *Comparator) XXX_Size() int {
	return xxx_messageInfo_Comparator.Size(m)
}
func (m *Comparator) XXX_DiscardUnknown() {
	xxx_messageInfo_Comparator.DiscardUnknown(m)
}

var xxx_messageInfo_Comparator proto.InternalMessageInfo

func (m *Comparator) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Comparator) GetSerializedComparator() []byte {
	if m != nil {
		return m.SerializedComparator
	}
	return nil
}

type ByteArrayComparable struct {
	Value                []byte   `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ByteArrayComparable) Reset()         { *m = ByteArrayComparable{} }
func (m *ByteArrayComparable) String() string { return proto.CompactTextString(m) }
func (*ByteArrayComparable) ProtoMessage()    {}
func (*ByteArrayComparable) Descriptor() ([]byte, []int) {
	return fileDescriptor_33b3a8a5d9dddeee, []int{1}
}

func (m *ByteArrayComparable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ByteArrayComparable.Unmarshal(m, b)
}
func (m *ByteArrayComparable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ByteArrayComparable.Marshal(b, m, deterministic)
}
func (m *ByteArrayComparable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ByteArrayComparable.Merge(m, src)
}
func (m *ByteArrayComparable) XXX_Size() int {
	return xxx_messageInfo_ByteArrayComparable.Size(m)
}
func (m *ByteArrayComparable) XXX_DiscardUnknown() {
	xxx_messageInfo_ByteArrayComparable.DiscardUnknown(m)
}

var xxx_messageInfo_ByteArrayComparable proto.InternalMessageInfo

func (m *ByteArrayComparable) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type BinaryComparator struct {
	Comparable           *ByteArrayComparable `protobuf:"bytes,1,req,name=comparable" json:"comparable,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *BinaryComparator) Reset()         { *m = BinaryComparator{} }
func (m *BinaryComparator) String() string { return proto.CompactTextString(m) }
func (*BinaryComparator) ProtoMessage()    {}
func (*BinaryComparator) Descriptor() ([]byte, []int) {
	return fileDescriptor_33b3a8a5d9dddeee, []int{2}
}

func (m *BinaryComparator) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BinaryComparator.Unmarshal(m, b)
}
func (m *BinaryComparator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BinaryComparator.Marshal(b, m, deterministic)
}
func (m *BinaryComparator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BinaryComparator.Merge(m, src)
}
func (m *BinaryComparator) XXX_Size() int {
	return xxx_messageInfo_BinaryComparator.Size(m)
}
func (m *BinaryComparator) XXX_DiscardUnknown() {
	xxx_messageInfo_BinaryComparator.DiscardUnknown(m)
}

var xxx_messageInfo_BinaryComparator proto.InternalMessageInfo

func (m *BinaryComparator) GetComparable() *ByteArrayComparable {
	if m != nil {
		return m.Comparable
	}
	return nil
}

type LongComparator struct {
	Comparable           *ByteArrayComparable `protobuf:"bytes,1,req,name=comparable" json:"comparable,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *LongComparator) Reset()         { *m = LongComparator{} }
func (m *LongComparator) String() string { return proto.CompactTextString(m) }
func (*LongComparator) ProtoMessage()    {}
func (*LongComparator) Descriptor() ([]byte, []int) {
	return fileDescriptor_33b3a8a5d9dddeee, []int{3}
}

func (m *LongComparator) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LongComparator.Unmarshal(m, b)
}
func (m *LongComparator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LongComparator.Marshal(b, m, deterministic)
}
func (m *LongComparator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LongComparator.Merge(m, src)
}
func (m *LongComparator) XXX_Size() int {
	return xxx_messageInfo_LongComparator.Size(m)
}
func (m *LongComparator) XXX_DiscardUnknown() {
	xxx_messageInfo_LongComparator.DiscardUnknown(m)
}

var xxx_messageInfo_LongComparator proto.InternalMessageInfo

func (m *LongComparator) GetComparable() *ByteArrayComparable {
	if m != nil {
		return m.Comparable
	}
	return nil
}

type BinaryPrefixComparator struct {
	Comparable           *ByteArrayComparable `protobuf:"bytes,1,req,name=comparable" json:"comparable,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *BinaryPrefixComparator) Reset()         { *m = BinaryPrefixComparator{} }
func (m *BinaryPrefixComparator) String() string { return proto.CompactTextString(m) }
func (*BinaryPrefixComparator) ProtoMessage()    {}
func (*BinaryPrefixComparator) Descriptor() ([]byte, []int) {
	return fileDescriptor_33b3a8a5d9dddeee, []int{4}
}

func (m *BinaryPrefixComparator) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BinaryPrefixComparator.Unmarshal(m, b)
}
func (m *BinaryPrefixComparator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BinaryPrefixComparator.Marshal(b, m, deterministic)
}
func (m *BinaryPrefixComparator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BinaryPrefixComparator.Merge(m, src)
}
func (m *BinaryPrefixComparator) XXX_Size() int {
	return xxx_messageInfo_BinaryPrefixComparator.Size(m)
}
func (m *BinaryPrefixComparator) XXX_DiscardUnknown() {
	xxx_messageInfo_BinaryPrefixComparator.DiscardUnknown(m)
}

var xxx_messageInfo_BinaryPrefixComparator proto.InternalMessageInfo

func (m *BinaryPrefixComparator) GetComparable() *ByteArrayComparable {
	if m != nil {
		return m.Comparable
	}
	return nil
}

type BitComparator struct {
	Comparable           *ByteArrayComparable     `protobuf:"bytes,1,req,name=comparable" json:"comparable,omitempty"`
	BitwiseOp            *BitComparator_BitwiseOp `protobuf:"varint,2,req,name=bitwise_op,json=bitwiseOp,enum=hbase.pb.BitComparator_BitwiseOp" json:"bitwise_op,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *BitComparator) Reset()         { *m = BitComparator{} }
func (m *BitComparator) String() string { return proto.CompactTextString(m) }
func (*BitComparator) ProtoMessage()    {}
func (*BitComparator) Descriptor() ([]byte, []int) {
	return fileDescriptor_33b3a8a5d9dddeee, []int{5}
}

func (m *BitComparator) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BitComparator.Unmarshal(m, b)
}
func (m *BitComparator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BitComparator.Marshal(b, m, deterministic)
}
func (m *BitComparator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BitComparator.Merge(m, src)
}
func (m *BitComparator) XXX_Size() int {
	return xxx_messageInfo_BitComparator.Size(m)
}
func (m *BitComparator) XXX_DiscardUnknown() {
	xxx_messageInfo_BitComparator.DiscardUnknown(m)
}

var xxx_messageInfo_BitComparator proto.InternalMessageInfo

func (m *BitComparator) GetComparable() *ByteArrayComparable {
	if m != nil {
		return m.Comparable
	}
	return nil
}

func (m *BitComparator) GetBitwiseOp() BitComparator_BitwiseOp {
	if m != nil && m.BitwiseOp != nil {
		return *m.BitwiseOp
	}
	return BitComparator_AND
}

type NullComparator struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NullComparator) Reset()         { *m = NullComparator{} }
func (m *NullComparator) String() string { return proto.CompactTextString(m) }
func (*NullComparator) ProtoMessage()    {}
func (*NullComparator) Descriptor() ([]byte, []int) {
	return fileDescriptor_33b3a8a5d9dddeee, []int{6}
}

func (m *NullComparator) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NullComparator.Unmarshal(m, b)
}
func (m *NullComparator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NullComparator.Marshal(b, m, deterministic)
}
func (m *NullComparator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NullComparator.Merge(m, src)
}
func (m *NullComparator) XXX_Size() int {
	return xxx_messageInfo_NullComparator.Size(m)
}
func (m *NullComparator) XXX_DiscardUnknown() {
	xxx_messageInfo_NullComparator.DiscardUnknown(m)
}

var xxx_messageInfo_NullComparator proto.InternalMessageInfo

type RegexStringComparator struct {
	Pattern              *string  `protobuf:"bytes,1,req,name=pattern" json:"pattern,omitempty"`
	PatternFlags         *int32   `protobuf:"varint,2,req,name=pattern_flags,json=patternFlags" json:"pattern_flags,omitempty"`
	Charset              *string  `protobuf:"bytes,3,req,name=charset" json:"charset,omitempty"`
	Engine               *string  `protobuf:"bytes,4,opt,name=engine" json:"engine,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegexStringComparator) Reset()         { *m = RegexStringComparator{} }
func (m *RegexStringComparator) String() string { return proto.CompactTextString(m) }
func (*RegexStringComparator) ProtoMessage()    {}
func (*RegexStringComparator) Descriptor() ([]byte, []int) {
	return fileDescriptor_33b3a8a5d9dddeee, []int{7}
}

func (m *RegexStringComparator) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegexStringComparator.Unmarshal(m, b)
}
func (m *RegexStringComparator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegexStringComparator.Marshal(b, m, deterministic)
}
func (m *RegexStringComparator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegexStringComparator.Merge(m, src)
}
func (m *RegexStringComparator) XXX_Size() int {
	return xxx_messageInfo_RegexStringComparator.Size(m)
}
func (m *RegexStringComparator) XXX_DiscardUnknown() {
	xxx_messageInfo_RegexStringComparator.DiscardUnknown(m)
}

var xxx_messageInfo_RegexStringComparator proto.InternalMessageInfo

func (m *RegexStringComparator) GetPattern() string {
	if m != nil && m.Pattern != nil {
		return *m.Pattern
	}
	return ""
}

func (m *RegexStringComparator) GetPatternFlags() int32 {
	if m != nil && m.PatternFlags != nil {
		return *m.PatternFlags
	}
	return 0
}

func (m *RegexStringComparator) GetCharset() string {
	if m != nil && m.Charset != nil {
		return *m.Charset
	}
	return ""
}

func (m *RegexStringComparator) GetEngine() string {
	if m != nil && m.Engine != nil {
		return *m.Engine
	}
	return ""
}

type SubstringComparator struct {
	Substr               *string  `protobuf:"bytes,1,req,name=substr" json:"substr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubstringComparator) Reset()         { *m = SubstringComparator{} }
func (m *SubstringComparator) String() string { return proto.CompactTextString(m) }
func (*SubstringComparator) ProtoMessage()    {}
func (*SubstringComparator) Descriptor() ([]byte, []int) {
	return fileDescriptor_33b3a8a5d9dddeee, []int{8}
}

func (m *SubstringComparator) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubstringComparator.Unmarshal(m, b)
}
func (m *SubstringComparator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubstringComparator.Marshal(b, m, deterministic)
}
func (m *SubstringComparator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubstringComparator.Merge(m, src)
}
func (m *SubstringComparator) XXX_Size() int {
	return xxx_messageInfo_SubstringComparator.Size(m)
}
func (m *SubstringComparator) XXX_DiscardUnknown() {
	xxx_messageInfo_SubstringComparator.DiscardUnknown(m)
}

var xxx_messageInfo_SubstringComparator proto.InternalMessageInfo

func (m *SubstringComparator) GetSubstr() string {
	if m != nil && m.Substr != nil {
		return *m.Substr
	}
	return ""
}

type BigDecimalComparator struct {
	Comparable           *ByteArrayComparable `protobuf:"bytes,1,req,name=comparable" json:"comparable,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *BigDecimalComparator) Reset()         { *m = BigDecimalComparator{} }
func (m *BigDecimalComparator) String() string { return proto.CompactTextString(m) }
func (*BigDecimalComparator) ProtoMessage()    {}
func (*BigDecimalComparator) Descriptor() ([]byte, []int) {
	return fileDescriptor_33b3a8a5d9dddeee, []int{9}
}

func (m *BigDecimalComparator) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BigDecimalComparator.Unmarshal(m, b)
}
func (m *BigDecimalComparator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BigDecimalComparator.Marshal(b, m, deterministic)
}
func (m *BigDecimalComparator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BigDecimalComparator.Merge(m, src)
}
func (m *BigDecimalComparator) XXX_Size() int {
	return xxx_messageInfo_BigDecimalComparator.Size(m)
}
func (m *BigDecimalComparator) XXX_DiscardUnknown() {
	xxx_messageInfo_BigDecimalComparator.DiscardUnknown(m)
}

var xxx_messageInfo_BigDecimalComparator proto.InternalMessageInfo

func (m *BigDecimalComparator) GetComparable() *ByteArrayComparable {
	if m != nil {
		return m.Comparable
	}
	return nil
}

func init() {
	proto.RegisterEnum("hbase.pb.BitComparator_BitwiseOp", BitComparator_BitwiseOp_name, BitComparator_BitwiseOp_value)
	proto.RegisterType((*Comparator)(nil), "hbase.pb.Comparator")
	proto.RegisterType((*ByteArrayComparable)(nil), "hbase.pb.ByteArrayComparable")
	proto.RegisterType((*BinaryComparator)(nil), "hbase.pb.BinaryComparator")
	proto.RegisterType((*LongComparator)(nil), "hbase.pb.LongComparator")
	proto.RegisterType((*BinaryPrefixComparator)(nil), "hbase.pb.BinaryPrefixComparator")
	proto.RegisterType((*BitComparator)(nil), "hbase.pb.BitComparator")
	proto.RegisterType((*NullComparator)(nil), "hbase.pb.NullComparator")
	proto.RegisterType((*RegexStringComparator)(nil), "hbase.pb.RegexStringComparator")
	proto.RegisterType((*SubstringComparator)(nil), "hbase.pb.SubstringComparator")
	proto.RegisterType((*BigDecimalComparator)(nil), "hbase.pb.BigDecimalComparator")
}

func init() { proto.RegisterFile("Comparator.proto", fileDescriptor_33b3a8a5d9dddeee) }

var fileDescriptor_33b3a8a5d9dddeee = []byte{
	// 431 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x53, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0xd5, 0x3a, 0x6d, 0x4a, 0x86, 0x36, 0xb2, 0xb6, 0x69, 0xe4, 0x0b, 0x52, 0x30, 0x42, 0x8a,
	0x84, 0xb0, 0x44, 0x39, 0x23, 0x51, 0x53, 0x21, 0x0e, 0xd0, 0x94, 0xad, 0x2a, 0xb8, 0x45, 0x63,
	0x7b, 0x62, 0xaf, 0xe4, 0x78, 0xad, 0xdd, 0x0d, 0x34, 0x7c, 0x41, 0x3e, 0x83, 0xbf, 0xe0, 0xf7,
	0x90, 0x93, 0x4d, 0x62, 0x50, 0x8f, 0xb9, 0xcd, 0x7b, 0xb3, 0xef, 0xcd, 0x93, 0xc7, 0x03, 0xfe,
	0x07, 0x35, 0xaf, 0x51, 0xa3, 0x55, 0x3a, 0xaa, 0xb5, 0xb2, 0x8a, 0x3f, 0x29, 0x12, 0x34, 0x14,
	0xd5, 0x49, 0x78, 0x0f, 0xb0, 0xef, 0x72, 0x0e, 0x47, 0x15, 0xce, 0x29, 0x60, 0x23, 0x6f, 0xdc,
	0x13, 0xeb, 0x9a, 0xbf, 0x85, 0x0b, 0x43, 0x5a, 0x62, 0x29, 0x7f, 0x51, 0x36, 0x4d, 0x77, 0x8f,
	0x03, 0x6f, 0xc4, 0xc6, 0xa7, 0x62, 0xb0, 0x6f, 0xee, 0x8d, 0xc2, 0x57, 0x70, 0x1e, 0x2f, 0x2d,
	0x5d, 0x69, 0x8d, 0x4b, 0x47, 0x27, 0x25, 0xf1, 0x01, 0x1c, 0xff, 0xc0, 0x72, 0xd1, 0x0c, 0x68,
	0xb4, 0x1b, 0x10, 0x7e, 0x05, 0x3f, 0x96, 0x15, 0xea, 0x65, 0x2b, 0xc9, 0x3b, 0x80, 0x74, 0xa7,
	0x5b, 0xe7, 0x79, 0x7a, 0xf9, 0x2c, 0xda, 0xc6, 0x8e, 0x1e, 0x31, 0x17, 0x2d, 0x41, 0x38, 0x81,
	0xfe, 0x67, 0x55, 0xe5, 0x87, 0x33, 0xfc, 0x06, 0xc3, 0x4d, 0xc6, 0x5b, 0x4d, 0x33, 0xf9, 0x70,
	0x38, 0xe3, 0x3f, 0x0c, 0xce, 0x62, 0x69, 0x0f, 0x66, 0xc8, 0xdf, 0x03, 0x24, 0xd2, 0xfe, 0x94,
	0x86, 0xa6, 0xaa, 0x0e, 0xbc, 0x91, 0x37, 0xee, 0x5f, 0x3e, 0x6f, 0xc9, 0xdb, 0xb3, 0x1a, 0xd4,
	0xbc, 0x9c, 0xd4, 0xa2, 0x97, 0x6c, 0xcb, 0xf0, 0x25, 0xf4, 0x76, 0x3c, 0x3f, 0x81, 0xce, 0xd5,
	0xcd, 0xb5, 0xcf, 0x78, 0x17, 0xbc, 0x89, 0xf0, 0xbd, 0x86, 0xf8, 0x3e, 0x11, 0x7e, 0x27, 0xf4,
	0xa1, 0x7f, 0xb3, 0x28, 0xcb, 0xd6, 0xd6, 0x57, 0x0c, 0x2e, 0x04, 0xe5, 0xf4, 0x70, 0x67, 0xb5,
	0xfc, 0xe7, 0xeb, 0x07, 0x70, 0x52, 0xa3, 0xb5, 0xa4, 0x2b, 0xf7, 0x6f, 0x6d, 0x21, 0x7f, 0x01,
	0x67, 0xae, 0x9c, 0xce, 0x4a, 0xcc, 0xcd, 0x3a, 0xf1, 0xb1, 0x38, 0x75, 0xe4, 0xc7, 0x86, 0x6b,
	0xe4, 0x69, 0x81, 0xda, 0x90, 0x0d, 0x3a, 0x1b, 0xb9, 0x83, 0x7c, 0x08, 0x5d, 0xaa, 0x72, 0x59,
	0x51, 0x70, 0x34, 0x62, 0xe3, 0x9e, 0x70, 0x28, 0x7c, 0x0d, 0xe7, 0x77, 0x8b, 0xc4, 0xfc, 0x9f,
	0x63, 0x08, 0x5d, 0xb3, 0xa6, 0x5d, 0x0c, 0x87, 0xc2, 0x7b, 0x18, 0xc4, 0x32, 0xbf, 0xa6, 0x54,
	0xce, 0xb1, 0x3c, 0xd8, 0x2e, 0xe2, 0x2f, 0xf0, 0x46, 0xe9, 0x3c, 0xc2, 0x1a, 0xd3, 0x82, 0xa2,
	0x02, 0x33, 0xa5, 0x6a, 0xa7, 0x36, 0x05, 0x66, 0x94, 0x6d, 0xee, 0x31, 0x59, 0xcc, 0xa2, 0x9c,
	0x2a, 0xd2, 0x68, 0x29, 0x8b, 0x5b, 0xe7, 0x7a, 0xdb, 0x74, 0xcd, 0x27, 0xb6, 0x62, 0xec, 0x37,
	0x63, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x4d, 0x55, 0x2d, 0xe0, 0xc9, 0x03, 0x00, 0x00,
}
