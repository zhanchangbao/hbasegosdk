// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ClusterStatus.proto

// This file contains protocol buffers that are used for ClustStatus

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Option int32

const (
	Option_HBASE_VERSION         Option = 0
	Option_CLUSTER_ID            Option = 1
	Option_LIVE_SERVERS          Option = 2
	Option_DEAD_SERVERS          Option = 3
	Option_MASTER                Option = 4
	Option_BACKUP_MASTERS        Option = 5
	Option_MASTER_COPROCESSORS   Option = 6
	Option_REGIONS_IN_TRANSITION Option = 7
	Option_BALANCER_ON           Option = 8
	Option_MASTER_INFO_PORT      Option = 9
	Option_SERVERS_NAME          Option = 10
)

var Option_name = map[int32]string{
	0:  "HBASE_VERSION",
	1:  "CLUSTER_ID",
	2:  "LIVE_SERVERS",
	3:  "DEAD_SERVERS",
	4:  "MASTER",
	5:  "BACKUP_MASTERS",
	6:  "MASTER_COPROCESSORS",
	7:  "REGIONS_IN_TRANSITION",
	8:  "BALANCER_ON",
	9:  "MASTER_INFO_PORT",
	10: "SERVERS_NAME",
}

var Option_value = map[string]int32{
	"HBASE_VERSION":         0,
	"CLUSTER_ID":            1,
	"LIVE_SERVERS":          2,
	"DEAD_SERVERS":          3,
	"MASTER":                4,
	"BACKUP_MASTERS":        5,
	"MASTER_COPROCESSORS":   6,
	"REGIONS_IN_TRANSITION": 7,
	"BALANCER_ON":           8,
	"MASTER_INFO_PORT":      9,
	"SERVERS_NAME":          10,
}

func (x Option) Enum() *Option {
	p := new(Option)
	*p = x
	return p
}

func (x Option) String() string {
	return proto.EnumName(Option_name, int32(x))
}

func (x *Option) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Option_value, data, "Option")
	if err != nil {
		return err
	}
	*x = Option(value)
	return nil
}

func (Option) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0112281fcf8d6825, []int{0}
}

type RegionState_State int32

const (
	RegionState_OFFLINE       RegionState_State = 0
	RegionState_PENDING_OPEN  RegionState_State = 1
	RegionState_OPENING       RegionState_State = 2
	RegionState_OPEN          RegionState_State = 3
	RegionState_PENDING_CLOSE RegionState_State = 4
	RegionState_CLOSING       RegionState_State = 5
	RegionState_CLOSED        RegionState_State = 6
	RegionState_SPLITTING     RegionState_State = 7
	RegionState_SPLIT         RegionState_State = 8
	RegionState_FAILED_OPEN   RegionState_State = 9
	RegionState_FAILED_CLOSE  RegionState_State = 10
	RegionState_MERGING       RegionState_State = 11
	RegionState_MERGED        RegionState_State = 12
	RegionState_SPLITTING_NEW RegionState_State = 13
	// region but hasn't be created yet, or master doesn't
	// know it's already created
	RegionState_MERGING_NEW RegionState_State = 14
	// daughter regions but hasn't be created yet, or
	// master doesn't know it's already created
	RegionState_ABNORMALLY_CLOSED RegionState_State = 15
)

var RegionState_State_name = map[int32]string{
	0:  "OFFLINE",
	1:  "PENDING_OPEN",
	2:  "OPENING",
	3:  "OPEN",
	4:  "PENDING_CLOSE",
	5:  "CLOSING",
	6:  "CLOSED",
	7:  "SPLITTING",
	8:  "SPLIT",
	9:  "FAILED_OPEN",
	10: "FAILED_CLOSE",
	11: "MERGING",
	12: "MERGED",
	13: "SPLITTING_NEW",
	14: "MERGING_NEW",
	15: "ABNORMALLY_CLOSED",
}

var RegionState_State_value = map[string]int32{
	"OFFLINE":           0,
	"PENDING_OPEN":      1,
	"OPENING":           2,
	"OPEN":              3,
	"PENDING_CLOSE":     4,
	"CLOSING":           5,
	"CLOSED":            6,
	"SPLITTING":         7,
	"SPLIT":             8,
	"FAILED_OPEN":       9,
	"FAILED_CLOSE":      10,
	"MERGING":           11,
	"MERGED":            12,
	"SPLITTING_NEW":     13,
	"MERGING_NEW":       14,
	"ABNORMALLY_CLOSED": 15,
}

func (x RegionState_State) Enum() *RegionState_State {
	p := new(RegionState_State)
	*p = x
	return p
}

func (x RegionState_State) String() string {
	return proto.EnumName(RegionState_State_name, int32(x))
}

func (x *RegionState_State) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RegionState_State_value, data, "RegionState_State")
	if err != nil {
		return err
	}
	*x = RegionState_State(value)
	return nil
}

func (RegionState_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0112281fcf8d6825, []int{0, 0}
}

type RegionState struct {
	RegionInfo           *RegionInfo        `protobuf:"bytes,1,req,name=region_info,json=regionInfo" json:"region_info,omitempty"`
	State                *RegionState_State `protobuf:"varint,2,req,name=state,enum=hbase.pb.RegionState_State" json:"state,omitempty"`
	Stamp                *uint64            `protobuf:"varint,3,opt,name=stamp" json:"stamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *RegionState) Reset()         { *m = RegionState{} }
func (m *RegionState) String() string { return proto.CompactTextString(m) }
func (*RegionState) ProtoMessage()    {}
func (*RegionState) Descriptor() ([]byte, []int) {
	return fileDescriptor_0112281fcf8d6825, []int{0}
}

func (m *RegionState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegionState.Unmarshal(m, b)
}
func (m *RegionState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegionState.Marshal(b, m, deterministic)
}
func (m *RegionState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegionState.Merge(m, src)
}
func (m *RegionState) XXX_Size() int {
	return xxx_messageInfo_RegionState.Size(m)
}
func (m *RegionState) XXX_DiscardUnknown() {
	xxx_messageInfo_RegionState.DiscardUnknown(m)
}

var xxx_messageInfo_RegionState proto.InternalMessageInfo

func (m *RegionState) GetRegionInfo() *RegionInfo {
	if m != nil {
		return m.RegionInfo
	}
	return nil
}

func (m *RegionState) GetState() RegionState_State {
	if m != nil && m.State != nil {
		return *m.State
	}
	return RegionState_OFFLINE
}

func (m *RegionState) GetStamp() uint64 {
	if m != nil && m.Stamp != nil {
		return *m.Stamp
	}
	return 0
}

type RegionInTransition struct {
	Spec                 *RegionSpecifier `protobuf:"bytes,1,req,name=spec" json:"spec,omitempty"`
	RegionState          *RegionState     `protobuf:"bytes,2,req,name=region_state,json=regionState" json:"region_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *RegionInTransition) Reset()         { *m = RegionInTransition{} }
func (m *RegionInTransition) String() string { return proto.CompactTextString(m) }
func (*RegionInTransition) ProtoMessage()    {}
func (*RegionInTransition) Descriptor() ([]byte, []int) {
	return fileDescriptor_0112281fcf8d6825, []int{1}
}

func (m *RegionInTransition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegionInTransition.Unmarshal(m, b)
}
func (m *RegionInTransition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegionInTransition.Marshal(b, m, deterministic)
}
func (m *RegionInTransition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegionInTransition.Merge(m, src)
}
func (m *RegionInTransition) XXX_Size() int {
	return xxx_messageInfo_RegionInTransition.Size(m)
}
func (m *RegionInTransition) XXX_DiscardUnknown() {
	xxx_messageInfo_RegionInTransition.DiscardUnknown(m)
}

var xxx_messageInfo_RegionInTransition proto.InternalMessageInfo

func (m *RegionInTransition) GetSpec() *RegionSpecifier {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *RegionInTransition) GetRegionState() *RegionState {
	if m != nil {
		return m.RegionState
	}
	return nil
}

//*
// sequence Id of a store
type StoreSequenceId struct {
	FamilyName           []byte   `protobuf:"bytes,1,req,name=family_name,json=familyName" json:"family_name,omitempty"`
	SequenceId           *uint64  `protobuf:"varint,2,req,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StoreSequenceId) Reset()         { *m = StoreSequenceId{} }
func (m *StoreSequenceId) String() string { return proto.CompactTextString(m) }
func (*StoreSequenceId) ProtoMessage()    {}
func (*StoreSequenceId) Descriptor() ([]byte, []int) {
	return fileDescriptor_0112281fcf8d6825, []int{2}
}

func (m *StoreSequenceId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoreSequenceId.Unmarshal(m, b)
}
func (m *StoreSequenceId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoreSequenceId.Marshal(b, m, deterministic)
}
func (m *StoreSequenceId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreSequenceId.Merge(m, src)
}
func (m *StoreSequenceId) XXX_Size() int {
	return xxx_messageInfo_StoreSequenceId.Size(m)
}
func (m *StoreSequenceId) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreSequenceId.DiscardUnknown(m)
}

var xxx_messageInfo_StoreSequenceId proto.InternalMessageInfo

func (m *StoreSequenceId) GetFamilyName() []byte {
	if m != nil {
		return m.FamilyName
	}
	return nil
}

func (m *StoreSequenceId) GetSequenceId() uint64 {
	if m != nil && m.SequenceId != nil {
		return *m.SequenceId
	}
	return 0
}

//*
// contains a sequence id of a region which should be the minimum of its store sequence ids and
// list of sequence ids of the region's stores
type RegionStoreSequenceIds struct {
	LastFlushedSequenceId *uint64            `protobuf:"varint,1,req,name=last_flushed_sequence_id,json=lastFlushedSequenceId" json:"last_flushed_sequence_id,omitempty"`
	StoreSequenceId       []*StoreSequenceId `protobuf:"bytes,2,rep,name=store_sequence_id,json=storeSequenceId" json:"store_sequence_id,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}           `json:"-"`
	XXX_unrecognized      []byte             `json:"-"`
	XXX_sizecache         int32              `json:"-"`
}

func (m *RegionStoreSequenceIds) Reset()         { *m = RegionStoreSequenceIds{} }
func (m *RegionStoreSequenceIds) String() string { return proto.CompactTextString(m) }
func (*RegionStoreSequenceIds) ProtoMessage()    {}
func (*RegionStoreSequenceIds) Descriptor() ([]byte, []int) {
	return fileDescriptor_0112281fcf8d6825, []int{3}
}

func (m *RegionStoreSequenceIds) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegionStoreSequenceIds.Unmarshal(m, b)
}
func (m *RegionStoreSequenceIds) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegionStoreSequenceIds.Marshal(b, m, deterministic)
}
func (m *RegionStoreSequenceIds) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegionStoreSequenceIds.Merge(m, src)
}
func (m *RegionStoreSequenceIds) XXX_Size() int {
	return xxx_messageInfo_RegionStoreSequenceIds.Size(m)
}
func (m *RegionStoreSequenceIds) XXX_DiscardUnknown() {
	xxx_messageInfo_RegionStoreSequenceIds.DiscardUnknown(m)
}

var xxx_messageInfo_RegionStoreSequenceIds proto.InternalMessageInfo

func (m *RegionStoreSequenceIds) GetLastFlushedSequenceId() uint64 {
	if m != nil && m.LastFlushedSequenceId != nil {
		return *m.LastFlushedSequenceId
	}
	return 0
}

func (m *RegionStoreSequenceIds) GetStoreSequenceId() []*StoreSequenceId {
	if m != nil {
		return m.StoreSequenceId
	}
	return nil
}

type RegionLoad struct {
	//* the region specifier
	RegionSpecifier *RegionSpecifier `protobuf:"bytes,1,req,name=region_specifier,json=regionSpecifier" json:"region_specifier,omitempty"`
	//* the number of stores for the region
	Stores *uint32 `protobuf:"varint,2,opt,name=stores" json:"stores,omitempty"`
	//* the number of storefiles for the region
	Storefiles *uint32 `protobuf:"varint,3,opt,name=storefiles" json:"storefiles,omitempty"`
	//* the total size of the store files for the region, uncompressed, in MB
	StoreUncompressedSize_MB *uint32 `protobuf:"varint,4,opt,name=store_uncompressed_size_MB,json=storeUncompressedSizeMB" json:"store_uncompressed_size_MB,omitempty"`
	//* the current total size of the store files for the region, in MB
	StorefileSize_MB *uint32 `protobuf:"varint,5,opt,name=storefile_size_MB,json=storefileSizeMB" json:"storefile_size_MB,omitempty"`
	//* the current size of the memstore for the region, in MB
	MemStoreSize_MB *uint32 `protobuf:"varint,6,opt,name=mem_store_size_MB,json=memStoreSizeMB" json:"mem_store_size_MB,omitempty"`
	//*
	// The current total size of root-level store file indexes for the region,
	// in KB. The same as {@link #rootIndexSizeKB}.
	StorefileIndexSize_KB *uint64 `protobuf:"varint,7,opt,name=storefile_index_size_KB,json=storefileIndexSizeKB" json:"storefile_index_size_KB,omitempty"`
	//* the current total read requests made to region
	ReadRequestsCount *uint64 `protobuf:"varint,8,opt,name=read_requests_count,json=readRequestsCount" json:"read_requests_count,omitempty"`
	//* the current total write requests made to region
	WriteRequestsCount *uint64 `protobuf:"varint,9,opt,name=write_requests_count,json=writeRequestsCount" json:"write_requests_count,omitempty"`
	//* the total compacting key values in currently running compaction
	TotalCompacting_KVs *uint64 `protobuf:"varint,10,opt,name=total_compacting_KVs,json=totalCompactingKVs" json:"total_compacting_KVs,omitempty"`
	//* the completed count of key values in currently running compaction
	CurrentCompacted_KVs *uint64 `protobuf:"varint,11,opt,name=current_compacted_KVs,json=currentCompactedKVs" json:"current_compacted_KVs,omitempty"`
	//* The current total size of root-level indexes for the region, in KB.
	RootIndexSize_KB *uint32 `protobuf:"varint,12,opt,name=root_index_size_KB,json=rootIndexSizeKB" json:"root_index_size_KB,omitempty"`
	//* The total size of all index blocks, not just the root level, in KB.
	TotalStaticIndexSize_KB *uint32 `protobuf:"varint,13,opt,name=total_static_index_size_KB,json=totalStaticIndexSizeKB" json:"total_static_index_size_KB,omitempty"`
	//*
	// The total size of all Bloom filter blocks, not just loaded into the
	// block cache, in KB.
	TotalStaticBloomSize_KB *uint32 `protobuf:"varint,14,opt,name=total_static_bloom_size_KB,json=totalStaticBloomSizeKB" json:"total_static_bloom_size_KB,omitempty"`
	//* the most recent sequence Id from cache flush
	CompleteSequenceId *uint64 `protobuf:"varint,15,opt,name=complete_sequence_id,json=completeSequenceId" json:"complete_sequence_id,omitempty"`
	//* The current data locality for region in the regionserver
	DataLocality          *float32 `protobuf:"fixed32,16,opt,name=data_locality,json=dataLocality" json:"data_locality,omitempty"`
	LastMajorCompactionTs *uint64  `protobuf:"varint,17,opt,name=last_major_compaction_ts,json=lastMajorCompactionTs,def=0" json:"last_major_compaction_ts,omitempty"`
	//* the most recent sequence Id of store from cache flush
	StoreCompleteSequenceId []*StoreSequenceId `protobuf:"bytes,18,rep,name=store_complete_sequence_id,json=storeCompleteSequenceId" json:"store_complete_sequence_id,omitempty"`
	//* the current total filtered read requests made to region
	FilteredReadRequestsCount *uint64  `protobuf:"varint,19,opt,name=filtered_read_requests_count,json=filteredReadRequestsCount" json:"filtered_read_requests_count,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *RegionLoad) Reset()         { *m = RegionLoad{} }
func (m *RegionLoad) String() string { return proto.CompactTextString(m) }
func (*RegionLoad) ProtoMessage()    {}
func (*RegionLoad) Descriptor() ([]byte, []int) {
	return fileDescriptor_0112281fcf8d6825, []int{4}
}

func (m *RegionLoad) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegionLoad.Unmarshal(m, b)
}
func (m *RegionLoad) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegionLoad.Marshal(b, m, deterministic)
}
func (m *RegionLoad) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegionLoad.Merge(m, src)
}
func (m *RegionLoad) XXX_Size() int {
	return xxx_messageInfo_RegionLoad.Size(m)
}
func (m *RegionLoad) XXX_DiscardUnknown() {
	xxx_messageInfo_RegionLoad.DiscardUnknown(m)
}

var xxx_messageInfo_RegionLoad proto.InternalMessageInfo

const Default_RegionLoad_LastMajorCompactionTs uint64 = 0

func (m *RegionLoad) GetRegionSpecifier() *RegionSpecifier {
	if m != nil {
		return m.RegionSpecifier
	}
	return nil
}

func (m *RegionLoad) GetStores() uint32 {
	if m != nil && m.Stores != nil {
		return *m.Stores
	}
	return 0
}

func (m *RegionLoad) GetStorefiles() uint32 {
	if m != nil && m.Storefiles != nil {
		return *m.Storefiles
	}
	return 0
}

func (m *RegionLoad) GetStoreUncompressedSize_MB() uint32 {
	if m != nil && m.StoreUncompressedSize_MB != nil {
		return *m.StoreUncompressedSize_MB
	}
	return 0
}

func (m *RegionLoad) GetStorefileSize_MB() uint32 {
	if m != nil && m.StorefileSize_MB != nil {
		return *m.StorefileSize_MB
	}
	return 0
}

func (m *RegionLoad) GetMemStoreSize_MB() uint32 {
	if m != nil && m.MemStoreSize_MB != nil {
		return *m.MemStoreSize_MB
	}
	return 0
}

func (m *RegionLoad) GetStorefileIndexSize_KB() uint64 {
	if m != nil && m.StorefileIndexSize_KB != nil {
		return *m.StorefileIndexSize_KB
	}
	return 0
}

func (m *RegionLoad) GetReadRequestsCount() uint64 {
	if m != nil && m.ReadRequestsCount != nil {
		return *m.ReadRequestsCount
	}
	return 0
}

func (m *RegionLoad) GetWriteRequestsCount() uint64 {
	if m != nil && m.WriteRequestsCount != nil {
		return *m.WriteRequestsCount
	}
	return 0
}

func (m *RegionLoad) GetTotalCompacting_KVs() uint64 {
	if m != nil && m.TotalCompacting_KVs != nil {
		return *m.TotalCompacting_KVs
	}
	return 0
}

func (m *RegionLoad) GetCurrentCompacted_KVs() uint64 {
	if m != nil && m.CurrentCompacted_KVs != nil {
		return *m.CurrentCompacted_KVs
	}
	return 0
}

func (m *RegionLoad) GetRootIndexSize_KB() uint32 {
	if m != nil && m.RootIndexSize_KB != nil {
		return *m.RootIndexSize_KB
	}
	return 0
}

func (m *RegionLoad) GetTotalStaticIndexSize_KB() uint32 {
	if m != nil && m.TotalStaticIndexSize_KB != nil {
		return *m.TotalStaticIndexSize_KB
	}
	return 0
}

func (m *RegionLoad) GetTotalStaticBloomSize_KB() uint32 {
	if m != nil && m.TotalStaticBloomSize_KB != nil {
		return *m.TotalStaticBloomSize_KB
	}
	return 0
}

func (m *RegionLoad) GetCompleteSequenceId() uint64 {
	if m != nil && m.CompleteSequenceId != nil {
		return *m.CompleteSequenceId
	}
	return 0
}

func (m *RegionLoad) GetDataLocality() float32 {
	if m != nil && m.DataLocality != nil {
		return *m.DataLocality
	}
	return 0
}

func (m *RegionLoad) GetLastMajorCompactionTs() uint64 {
	if m != nil && m.LastMajorCompactionTs != nil {
		return *m.LastMajorCompactionTs
	}
	return Default_RegionLoad_LastMajorCompactionTs
}

func (m *RegionLoad) GetStoreCompleteSequenceId() []*StoreSequenceId {
	if m != nil {
		return m.StoreCompleteSequenceId
	}
	return nil
}

func (m *RegionLoad) GetFilteredReadRequestsCount() uint64 {
	if m != nil && m.FilteredReadRequestsCount != nil {
		return *m.FilteredReadRequestsCount
	}
	return 0
}

type ReplicationLoadSink struct {
	AgeOfLastAppliedOp        *uint64  `protobuf:"varint,1,req,name=ageOfLastAppliedOp" json:"ageOfLastAppliedOp,omitempty"`
	TimeStampsOfLastAppliedOp *uint64  `protobuf:"varint,2,req,name=timeStampsOfLastAppliedOp" json:"timeStampsOfLastAppliedOp,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *ReplicationLoadSink) Reset()         { *m = ReplicationLoadSink{} }
func (m *ReplicationLoadSink) String() string { return proto.CompactTextString(m) }
func (*ReplicationLoadSink) ProtoMessage()    {}
func (*ReplicationLoadSink) Descriptor() ([]byte, []int) {
	return fileDescriptor_0112281fcf8d6825, []int{5}
}

func (m *ReplicationLoadSink) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicationLoadSink.Unmarshal(m, b)
}
func (m *ReplicationLoadSink) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicationLoadSink.Marshal(b, m, deterministic)
}
func (m *ReplicationLoadSink) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicationLoadSink.Merge(m, src)
}
func (m *ReplicationLoadSink) XXX_Size() int {
	return xxx_messageInfo_ReplicationLoadSink.Size(m)
}
func (m *ReplicationLoadSink) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicationLoadSink.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicationLoadSink proto.InternalMessageInfo

func (m *ReplicationLoadSink) GetAgeOfLastAppliedOp() uint64 {
	if m != nil && m.AgeOfLastAppliedOp != nil {
		return *m.AgeOfLastAppliedOp
	}
	return 0
}

func (m *ReplicationLoadSink) GetTimeStampsOfLastAppliedOp() uint64 {
	if m != nil && m.TimeStampsOfLastAppliedOp != nil {
		return *m.TimeStampsOfLastAppliedOp
	}
	return 0
}

type ReplicationLoadSource struct {
	PeerID                   *string  `protobuf:"bytes,1,req,name=peerID" json:"peerID,omitempty"`
	AgeOfLastShippedOp       *uint64  `protobuf:"varint,2,req,name=ageOfLastShippedOp" json:"ageOfLastShippedOp,omitempty"`
	SizeOfLogQueue           *uint32  `protobuf:"varint,3,req,name=sizeOfLogQueue" json:"sizeOfLogQueue,omitempty"`
	TimeStampOfLastShippedOp *uint64  `protobuf:"varint,4,req,name=timeStampOfLastShippedOp" json:"timeStampOfLastShippedOp,omitempty"`
	ReplicationLag           *uint64  `protobuf:"varint,5,req,name=replicationLag" json:"replicationLag,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *ReplicationLoadSource) Reset()         { *m = ReplicationLoadSource{} }
func (m *ReplicationLoadSource) String() string { return proto.CompactTextString(m) }
func (*ReplicationLoadSource) ProtoMessage()    {}
func (*ReplicationLoadSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_0112281fcf8d6825, []int{6}
}

func (m *ReplicationLoadSource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicationLoadSource.Unmarshal(m, b)
}
func (m *ReplicationLoadSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicationLoadSource.Marshal(b, m, deterministic)
}
func (m *ReplicationLoadSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicationLoadSource.Merge(m, src)
}
func (m *ReplicationLoadSource) XXX_Size() int {
	return xxx_messageInfo_ReplicationLoadSource.Size(m)
}
func (m *ReplicationLoadSource) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicationLoadSource.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicationLoadSource proto.InternalMessageInfo

func (m *ReplicationLoadSource) GetPeerID() string {
	if m != nil && m.PeerID != nil {
		return *m.PeerID
	}
	return ""
}

func (m *ReplicationLoadSource) GetAgeOfLastShippedOp() uint64 {
	if m != nil && m.AgeOfLastShippedOp != nil {
		return *m.AgeOfLastShippedOp
	}
	return 0
}

func (m *ReplicationLoadSource) GetSizeOfLogQueue() uint32 {
	if m != nil && m.SizeOfLogQueue != nil {
		return *m.SizeOfLogQueue
	}
	return 0
}

func (m *ReplicationLoadSource) GetTimeStampOfLastShippedOp() uint64 {
	if m != nil && m.TimeStampOfLastShippedOp != nil {
		return *m.TimeStampOfLastShippedOp
	}
	return 0
}

func (m *ReplicationLoadSource) GetReplicationLag() uint64 {
	if m != nil && m.ReplicationLag != nil {
		return *m.ReplicationLag
	}
	return 0
}

type ServerLoad struct {
	//* Number of requests since last report.
	NumberOfRequests *uint64 `protobuf:"varint,1,opt,name=number_of_requests,json=numberOfRequests" json:"number_of_requests,omitempty"`
	//* Total Number of requests from the start of the region server.
	TotalNumberOfRequests *uint64 `protobuf:"varint,2,opt,name=total_number_of_requests,json=totalNumberOfRequests" json:"total_number_of_requests,omitempty"`
	//* the amount of used heap, in MB.
	UsedHeap_MB *uint32 `protobuf:"varint,3,opt,name=used_heap_MB,json=usedHeapMB" json:"used_heap_MB,omitempty"`
	//* the maximum allowable size of the heap, in MB.
	MaxHeap_MB *uint32 `protobuf:"varint,4,opt,name=max_heap_MB,json=maxHeapMB" json:"max_heap_MB,omitempty"`
	//* Information on the load of individual regions.
	RegionLoads []*RegionLoad `protobuf:"bytes,5,rep,name=region_loads,json=regionLoads" json:"region_loads,omitempty"`
	//*
	// Regionserver-level coprocessors, e.g., WALObserver implementations.
	// Region-level coprocessors, on the other hand, are stored inside RegionLoad
	// objects.
	Coprocessors []*Coprocessor `protobuf:"bytes,6,rep,name=coprocessors" json:"coprocessors,omitempty"`
	//*
	// Time when incremental (non-total) counts began being calculated (e.g. number_of_requests)
	// time is measured as the difference, measured in milliseconds, between the current time
	// and midnight, January 1, 1970 UTC.
	ReportStartTime *uint64 `protobuf:"varint,7,opt,name=report_start_time,json=reportStartTime" json:"report_start_time,omitempty"`
	//*
	// Time when report was generated.
	// time is measured as the difference, measured in milliseconds, between the current time
	// and midnight, January 1, 1970 UTC.
	ReportEndTime *uint64 `protobuf:"varint,8,opt,name=report_end_time,json=reportEndTime" json:"report_end_time,omitempty"`
	//*
	// The port number that this region server is hosing an info server on.
	InfoServerPort *uint32 `protobuf:"varint,9,opt,name=info_server_port,json=infoServerPort" json:"info_server_port,omitempty"`
	//*
	// The replicationLoadSource for the replication Source status of this region server.
	ReplLoadSource []*ReplicationLoadSource `protobuf:"bytes,10,rep,name=replLoadSource" json:"replLoadSource,omitempty"`
	//*
	// The replicationLoadSink for the replication Sink status of this region server.
	ReplLoadSink         *ReplicationLoadSink `protobuf:"bytes,11,opt,name=replLoadSink" json:"replLoadSink,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ServerLoad) Reset()         { *m = ServerLoad{} }
func (m *ServerLoad) String() string { return proto.CompactTextString(m) }
func (*ServerLoad) ProtoMessage()    {}
func (*ServerLoad) Descriptor() ([]byte, []int) {
	return fileDescriptor_0112281fcf8d6825, []int{7}
}

func (m *ServerLoad) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerLoad.Unmarshal(m, b)
}
func (m *ServerLoad) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerLoad.Marshal(b, m, deterministic)
}
func (m *ServerLoad) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerLoad.Merge(m, src)
}
func (m *ServerLoad) XXX_Size() int {
	return xxx_messageInfo_ServerLoad.Size(m)
}
func (m *ServerLoad) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerLoad.DiscardUnknown(m)
}

var xxx_messageInfo_ServerLoad proto.InternalMessageInfo

func (m *ServerLoad) GetNumberOfRequests() uint64 {
	if m != nil && m.NumberOfRequests != nil {
		return *m.NumberOfRequests
	}
	return 0
}

func (m *ServerLoad) GetTotalNumberOfRequests() uint64 {
	if m != nil && m.TotalNumberOfRequests != nil {
		return *m.TotalNumberOfRequests
	}
	return 0
}

func (m *ServerLoad) GetUsedHeap_MB() uint32 {
	if m != nil && m.UsedHeap_MB != nil {
		return *m.UsedHeap_MB
	}
	return 0
}

func (m *ServerLoad) GetMaxHeap_MB() uint32 {
	if m != nil && m.MaxHeap_MB != nil {
		return *m.MaxHeap_MB
	}
	return 0
}

func (m *ServerLoad) GetRegionLoads() []*RegionLoad {
	if m != nil {
		return m.RegionLoads
	}
	return nil
}

func (m *ServerLoad) GetCoprocessors() []*Coprocessor {
	if m != nil {
		return m.Coprocessors
	}
	return nil
}

func (m *ServerLoad) GetReportStartTime() uint64 {
	if m != nil && m.ReportStartTime != nil {
		return *m.ReportStartTime
	}
	return 0
}

func (m *ServerLoad) GetReportEndTime() uint64 {
	if m != nil && m.ReportEndTime != nil {
		return *m.ReportEndTime
	}
	return 0
}

func (m *ServerLoad) GetInfoServerPort() uint32 {
	if m != nil && m.InfoServerPort != nil {
		return *m.InfoServerPort
	}
	return 0
}

func (m *ServerLoad) GetReplLoadSource() []*ReplicationLoadSource {
	if m != nil {
		return m.ReplLoadSource
	}
	return nil
}

func (m *ServerLoad) GetReplLoadSink() *ReplicationLoadSink {
	if m != nil {
		return m.ReplLoadSink
	}
	return nil
}

type LiveServerInfo struct {
	Server               *ServerName `protobuf:"bytes,1,req,name=server" json:"server,omitempty"`
	ServerLoad           *ServerLoad `protobuf:"bytes,2,req,name=server_load,json=serverLoad" json:"server_load,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *LiveServerInfo) Reset()         { *m = LiveServerInfo{} }
func (m *LiveServerInfo) String() string { return proto.CompactTextString(m) }
func (*LiveServerInfo) ProtoMessage()    {}
func (*LiveServerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0112281fcf8d6825, []int{8}
}

func (m *LiveServerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LiveServerInfo.Unmarshal(m, b)
}
func (m *LiveServerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LiveServerInfo.Marshal(b, m, deterministic)
}
func (m *LiveServerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LiveServerInfo.Merge(m, src)
}
func (m *LiveServerInfo) XXX_Size() int {
	return xxx_messageInfo_LiveServerInfo.Size(m)
}
func (m *LiveServerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LiveServerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LiveServerInfo proto.InternalMessageInfo

func (m *LiveServerInfo) GetServer() *ServerName {
	if m != nil {
		return m.Server
	}
	return nil
}

func (m *LiveServerInfo) GetServerLoad() *ServerLoad {
	if m != nil {
		return m.ServerLoad
	}
	return nil
}

type ClusterStatus struct {
	HbaseVersion         *HBaseVersionFileContent `protobuf:"bytes,1,opt,name=hbase_version,json=hbaseVersion" json:"hbase_version,omitempty"`
	LiveServers          []*LiveServerInfo        `protobuf:"bytes,2,rep,name=live_servers,json=liveServers" json:"live_servers,omitempty"`
	DeadServers          []*ServerName            `protobuf:"bytes,3,rep,name=dead_servers,json=deadServers" json:"dead_servers,omitempty"`
	RegionsInTransition  []*RegionInTransition    `protobuf:"bytes,4,rep,name=regions_in_transition,json=regionsInTransition" json:"regions_in_transition,omitempty"`
	ClusterId            *ClusterId               `protobuf:"bytes,5,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	MasterCoprocessors   []*Coprocessor           `protobuf:"bytes,6,rep,name=master_coprocessors,json=masterCoprocessors" json:"master_coprocessors,omitempty"`
	Master               *ServerName              `protobuf:"bytes,7,opt,name=master" json:"master,omitempty"`
	BackupMasters        []*ServerName            `protobuf:"bytes,8,rep,name=backup_masters,json=backupMasters" json:"backup_masters,omitempty"`
	BalancerOn           *bool                    `protobuf:"varint,9,opt,name=balancer_on,json=balancerOn" json:"balancer_on,omitempty"`
	MasterInfoPort       *int32                   `protobuf:"varint,10,opt,name=master_info_port,json=masterInfoPort,def=-1" json:"master_info_port,omitempty"`
	ServersName          []*ServerName            `protobuf:"bytes,11,rep,name=servers_name,json=serversName" json:"servers_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ClusterStatus) Reset()         { *m = ClusterStatus{} }
func (m *ClusterStatus) String() string { return proto.CompactTextString(m) }
func (*ClusterStatus) ProtoMessage()    {}
func (*ClusterStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_0112281fcf8d6825, []int{9}
}

func (m *ClusterStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterStatus.Unmarshal(m, b)
}
func (m *ClusterStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterStatus.Marshal(b, m, deterministic)
}
func (m *ClusterStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterStatus.Merge(m, src)
}
func (m *ClusterStatus) XXX_Size() int {
	return xxx_messageInfo_ClusterStatus.Size(m)
}
func (m *ClusterStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterStatus proto.InternalMessageInfo

const Default_ClusterStatus_MasterInfoPort int32 = -1

func (m *ClusterStatus) GetHbaseVersion() *HBaseVersionFileContent {
	if m != nil {
		return m.HbaseVersion
	}
	return nil
}

func (m *ClusterStatus) GetLiveServers() []*LiveServerInfo {
	if m != nil {
		return m.LiveServers
	}
	return nil
}

func (m *ClusterStatus) GetDeadServers() []*ServerName {
	if m != nil {
		return m.DeadServers
	}
	return nil
}

func (m *ClusterStatus) GetRegionsInTransition() []*RegionInTransition {
	if m != nil {
		return m.RegionsInTransition
	}
	return nil
}

func (m *ClusterStatus) GetClusterId() *ClusterId {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *ClusterStatus) GetMasterCoprocessors() []*Coprocessor {
	if m != nil {
		return m.MasterCoprocessors
	}
	return nil
}

func (m *ClusterStatus) GetMaster() *ServerName {
	if m != nil {
		return m.Master
	}
	return nil
}

func (m *ClusterStatus) GetBackupMasters() []*ServerName {
	if m != nil {
		return m.BackupMasters
	}
	return nil
}

func (m *ClusterStatus) GetBalancerOn() bool {
	if m != nil && m.BalancerOn != nil {
		return *m.BalancerOn
	}
	return false
}

func (m *ClusterStatus) GetMasterInfoPort() int32 {
	if m != nil && m.MasterInfoPort != nil {
		return *m.MasterInfoPort
	}
	return Default_ClusterStatus_MasterInfoPort
}

func (m *ClusterStatus) GetServersName() []*ServerName {
	if m != nil {
		return m.ServersName
	}
	return nil
}

func init() {
	proto.RegisterEnum("hbase.pb.Option", Option_name, Option_value)
	proto.RegisterEnum("hbase.pb.RegionState_State", RegionState_State_name, RegionState_State_value)
	proto.RegisterType((*RegionState)(nil), "hbase.pb.RegionState")
	proto.RegisterType((*RegionInTransition)(nil), "hbase.pb.RegionInTransition")
	proto.RegisterType((*StoreSequenceId)(nil), "hbase.pb.StoreSequenceId")
	proto.RegisterType((*RegionStoreSequenceIds)(nil), "hbase.pb.RegionStoreSequenceIds")
	proto.RegisterType((*RegionLoad)(nil), "hbase.pb.RegionLoad")
	proto.RegisterType((*ReplicationLoadSink)(nil), "hbase.pb.ReplicationLoadSink")
	proto.RegisterType((*ReplicationLoadSource)(nil), "hbase.pb.ReplicationLoadSource")
	proto.RegisterType((*ServerLoad)(nil), "hbase.pb.ServerLoad")
	proto.RegisterType((*LiveServerInfo)(nil), "hbase.pb.LiveServerInfo")
	proto.RegisterType((*ClusterStatus)(nil), "hbase.pb.ClusterStatus")
}

func init() { proto.RegisterFile("ClusterStatus.proto", fileDescriptor_0112281fcf8d6825) }

var fileDescriptor_0112281fcf8d6825 = []byte{
	// 1716 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x57, 0xcd, 0x6e, 0xe3, 0xc8,
	0x11, 0x5e, 0xc9, 0x92, 0x7f, 0x4a, 0x3f, 0xa6, 0xdb, 0xf6, 0x0c, 0x67, 0xb2, 0xd9, 0x75, 0x14,
	0x60, 0xe1, 0x6c, 0x66, 0x85, 0x19, 0x03, 0x8b, 0x49, 0x66, 0x02, 0x04, 0xfa, 0xa1, 0x3c, 0x82,
	0x25, 0x52, 0x69, 0x6a, 0x1c, 0xe4, 0xd4, 0xa0, 0xa9, 0x96, 0xcd, 0x0c, 0x45, 0x32, 0x6c, 0x6a,
	0x32, 0xbb, 0x40, 0x4e, 0xb9, 0xe5, 0x90, 0x73, 0x8e, 0x79, 0x87, 0xbc, 0x4e, 0xde, 0x20, 0x40,
	0x1e, 0x20, 0xa7, 0xa0, 0xba, 0x9b, 0xb4, 0x7e, 0x3c, 0xb3, 0x7b, 0x11, 0xba, 0xab, 0xbe, 0xaf,
	0xba, 0xba, 0xaa, 0xab, 0x54, 0x84, 0xe3, 0x5e, 0xb8, 0x14, 0x19, 0x4f, 0xdd, 0xcc, 0xcb, 0x96,
	0xa2, 0x9d, 0xa4, 0x71, 0x16, 0x93, 0xfd, 0xbb, 0x1b, 0x4f, 0xf0, 0x76, 0x72, 0xf3, 0xb4, 0xf6,
	0xa6, 0x2b, 0x57, 0x28, 0x7e, 0x7a, 0xa8, 0xb1, 0xc3, 0x99, 0x16, 0xec, 0x0f, 0x5c, 0xb5, 0x6a,
	0xfd, 0x6d, 0x07, 0x6a, 0x94, 0xdf, 0x06, 0x71, 0x84, 0x86, 0x38, 0xf9, 0x16, 0x6a, 0xa9, 0xdc,
	0xb2, 0x20, 0x9a, 0xc7, 0x66, 0xe9, 0xac, 0x7c, 0x5e, 0xbb, 0x38, 0x69, 0xe7, 0x76, 0xdb, 0x0a,
	0x3b, 0x8c, 0xe6, 0x31, 0x85, 0xb4, 0x58, 0x93, 0x17, 0x50, 0x15, 0xc8, 0x37, 0xcb, 0x67, 0xe5,
	0xf3, 0xe6, 0xc5, 0x4f, 0x36, 0x09, 0xd2, 0x78, 0x5b, 0xfe, 0x52, 0x85, 0x24, 0x27, 0x92, 0xb2,
	0x48, 0xcc, 0x9d, 0xb3, 0xd2, 0x79, 0x85, 0xaa, 0x4d, 0xeb, 0x7f, 0x25, 0xa8, 0x2a, 0x4f, 0x6a,
	0xb0, 0xe7, 0x0c, 0x06, 0xa3, 0xa1, 0x6d, 0x19, 0x9f, 0x11, 0x03, 0xea, 0x13, 0xcb, 0xee, 0x0f,
	0xed, 0x4b, 0xe6, 0x4c, 0x2c, 0xdb, 0x28, 0x49, 0xf5, 0xc4, 0xb2, 0x87, 0xf6, 0xa5, 0x51, 0x26,
	0xfb, 0x50, 0x91, 0xe2, 0x1d, 0x72, 0x04, 0x8d, 0x1c, 0xd8, 0x1b, 0x39, 0xae, 0x65, 0x54, 0x10,
	0x89, 0x4b, 0x44, 0x56, 0x09, 0xc0, 0xae, 0x94, 0xf7, 0x8d, 0x5d, 0xd2, 0x80, 0x03, 0x77, 0x32,
	0x1a, 0x4e, 0xa7, 0xa8, 0xda, 0x23, 0x07, 0x50, 0x95, 0x5b, 0x63, 0x9f, 0x1c, 0x42, 0x6d, 0xd0,
	0x19, 0x8e, 0xac, 0xbe, 0x3a, 0xed, 0x00, 0xcf, 0xd7, 0x02, 0x65, 0x15, 0xd0, 0xea, 0xd8, 0xa2,
	0x97, 0x48, 0xad, 0xa1, 0x55, 0xdc, 0x58, 0x7d, 0xa3, 0x8e, 0x1e, 0x14, 0x56, 0x99, 0x6d, 0xfd,
	0xde, 0x68, 0xa0, 0x39, 0x8d, 0x95, 0x82, 0x26, 0x39, 0x85, 0xa3, 0x4e, 0xd7, 0x76, 0xe8, 0xb8,
	0x33, 0x1a, 0xfd, 0x81, 0x69, 0x87, 0x0e, 0x5b, 0x7f, 0x01, 0x92, 0xc7, 0x77, 0x9a, 0x7a, 0x91,
	0x08, 0xb2, 0x20, 0x8e, 0xc8, 0x37, 0x50, 0x11, 0x09, 0xf7, 0x75, 0x2e, 0x9e, 0x6c, 0x85, 0x36,
	0xe1, 0x7e, 0x30, 0x0f, 0x78, 0x4a, 0x25, 0x8c, 0xfc, 0x0a, 0xea, 0x3a, 0x83, 0xf7, 0x19, 0xa9,
	0x5d, 0x9c, 0x3e, 0x98, 0x11, 0xaa, 0x93, 0x2d, 0x37, 0x2d, 0x17, 0x0e, 0xdd, 0x2c, 0x4e, 0xb9,
	0xcb, 0xff, 0xb4, 0xe4, 0x91, 0xcf, 0x87, 0x33, 0xf2, 0x25, 0xd4, 0xe6, 0xde, 0x22, 0x08, 0xbf,
	0x63, 0x91, 0xb7, 0xe0, 0xd2, 0x85, 0x3a, 0x05, 0x25, 0xb2, 0xbd, 0x05, 0x47, 0x80, 0xd0, 0x70,
	0x16, 0xcc, 0xe4, 0x61, 0x15, 0x0a, 0xa2, 0xb0, 0xd0, 0xfa, 0x47, 0x09, 0x1e, 0xe5, 0x27, 0xae,
	0xd9, 0x16, 0xe4, 0x25, 0x98, 0xa1, 0x27, 0x32, 0x36, 0x0f, 0x97, 0xe2, 0x8e, 0xcf, 0xd8, 0xaa,
	0xa1, 0x92, 0x34, 0x74, 0x8a, 0xfa, 0x81, 0x52, 0xaf, 0x78, 0x65, 0xc1, 0x91, 0x40, 0x63, 0x6c,
	0xfd, 0xe8, 0x9d, 0xf5, 0xf0, 0x6c, 0x9c, 0x47, 0x0f, 0xc5, 0xba, 0xa0, 0xf5, 0xdf, 0x3d, 0x00,
	0xe5, 0xda, 0x28, 0xf6, 0x66, 0xa4, 0x0f, 0x46, 0x1e, 0xb8, 0x3c, 0xa4, 0x3f, 0x1c, 0xf3, 0xc3,
	0x74, 0x5d, 0x40, 0x1e, 0xc1, 0xae, 0x3c, 0x47, 0x98, 0xe5, 0xb3, 0xd2, 0x79, 0x83, 0xea, 0x1d,
	0xf9, 0x02, 0x40, 0xae, 0xe6, 0x41, 0xc8, 0x85, 0x7c, 0xf3, 0x0d, 0xba, 0x22, 0x21, 0xaf, 0xe1,
	0xa9, 0xba, 0xd3, 0x32, 0xf2, 0xe3, 0x45, 0x92, 0x72, 0x21, 0x30, 0x24, 0xc1, 0xf7, 0x9c, 0x8d,
	0xbb, 0x66, 0x45, 0xe2, 0x1f, 0x4b, 0xc4, 0xdb, 0x15, 0x80, 0x1b, 0x7c, 0xcf, 0xc7, 0x5d, 0xf2,
	0xb5, 0x0e, 0x08, 0x9a, 0x2a, 0x38, 0x55, 0xc9, 0x39, 0x2c, 0x14, 0x1a, 0xfb, 0x0b, 0x38, 0x5a,
	0xf0, 0x05, 0xd3, 0x01, 0xd4, 0xd8, 0x5d, 0x89, 0x6d, 0x2e, 0xf8, 0x42, 0x45, 0x4d, 0x41, 0xbf,
	0x85, 0xc7, 0xf7, 0x66, 0x83, 0x68, 0xc6, 0x3f, 0x28, 0xc2, 0x55, 0xd7, 0xdc, 0x93, 0x45, 0x7b,
	0x52, 0xa8, 0x87, 0xa8, 0x45, 0xda, 0x55, 0x97, 0xb4, 0xe1, 0x38, 0xe5, 0xde, 0x8c, 0xa5, 0x18,
	0x6a, 0x91, 0x09, 0xe6, 0xc7, 0xcb, 0x28, 0x33, 0xf7, 0x25, 0xe5, 0x08, 0x55, 0x54, 0x6b, 0x7a,
	0xa8, 0x20, 0xcf, 0xe1, 0xe4, 0xcf, 0x69, 0x90, 0xf1, 0x4d, 0xc2, 0x81, 0x24, 0x10, 0xa9, 0xdb,
	0x62, 0x64, 0x71, 0xe6, 0x85, 0x0c, 0x23, 0xe1, 0xf9, 0x59, 0x10, 0xdd, 0xb2, 0xab, 0x6b, 0x61,
	0x82, 0x62, 0x48, 0x5d, 0xaf, 0x50, 0x5d, 0x5d, 0x0b, 0x72, 0x01, 0xa7, 0xfe, 0x32, 0x4d, 0x79,
	0x94, 0xe5, 0x1c, 0x3e, 0x93, 0x94, 0x9a, 0xa4, 0x1c, 0x6b, 0x65, 0x2f, 0xd7, 0x21, 0xe7, 0x97,
	0x40, 0xd2, 0x38, 0xce, 0x36, 0x6e, 0x5e, 0x57, 0x61, 0x45, 0xcd, 0xea, 0xa5, 0x5f, 0xc1, 0x53,
	0xe5, 0x12, 0x56, 0x5d, 0xe0, 0x6f, 0x90, 0x1a, 0x92, 0xf4, 0x48, 0x22, 0x5c, 0x09, 0xf8, 0x14,
	0xf7, 0x26, 0x8c, 0xe3, 0x45, 0xc1, 0x6d, 0x6e, 0x71, 0xbb, 0xa8, 0xd7, 0xdc, 0xe7, 0x70, 0x82,
	0x17, 0x0a, 0x79, 0xb6, 0x5e, 0x0e, 0x87, 0x2a, 0x14, 0xb9, 0x6e, 0xa5, 0x7a, 0x7e, 0x0e, 0x8d,
	0x99, 0x97, 0x79, 0x2c, 0x8c, 0x7d, 0x2f, 0x0c, 0xb2, 0xef, 0x4c, 0xe3, 0xac, 0x74, 0x5e, 0xa6,
	0x75, 0x14, 0x8e, 0xb4, 0x8c, 0xbc, 0xd2, 0xb5, 0xb9, 0xf0, 0xfe, 0x18, 0xa7, 0x45, 0x98, 0xe3,
	0x88, 0x65, 0xc2, 0x3c, 0x42, 0xd3, 0xaf, 0x4a, 0xcf, 0x55, 0x79, 0x8e, 0x11, 0xd1, 0x2b, 0x00,
	0x53, 0x41, 0xae, 0xf3, 0xa7, 0xfc, 0xa0, 0x63, 0xe4, 0x87, 0xea, 0x54, 0xbd, 0xb9, 0xde, 0xb6,
	0xe3, 0xbf, 0x85, 0xcf, 0xe7, 0x41, 0x98, 0xf1, 0x94, 0xe3, 0xdb, 0xda, 0x7e, 0x60, 0xc7, 0xf2,
	0xca, 0x4f, 0x72, 0x0c, 0xdd, 0x7c, 0x68, 0xad, 0xbf, 0x96, 0xe0, 0x98, 0xf2, 0x24, 0x0c, 0x7c,
	0x2f, 0xd3, 0x55, 0xef, 0x06, 0xd1, 0x3b, 0xd2, 0x06, 0xe2, 0xdd, 0x72, 0x67, 0x3e, 0xf2, 0x44,
	0xd6, 0x49, 0x92, 0x30, 0xe0, 0x33, 0x27, 0xd1, 0x2d, 0xe8, 0x01, 0x0d, 0xf9, 0x0d, 0x3c, 0xc9,
	0x82, 0x05, 0x77, 0xf1, 0x1f, 0x4b, 0x6c, 0xd2, 0x54, 0x0b, 0xfc, 0x38, 0xa0, 0xf5, 0x9f, 0x12,
	0x9c, 0x6e, 0x7a, 0x11, 0x2f, 0x53, 0x9f, 0x63, 0xef, 0x48, 0x38, 0x4f, 0x87, 0x7d, 0x79, 0xf6,
	0x01, 0xd5, 0xbb, 0x35, 0xff, 0xdc, 0xbb, 0x20, 0x49, 0x56, 0x0e, 0x7a, 0x40, 0x43, 0xbe, 0x82,
	0x26, 0x3e, 0x1e, 0x67, 0x3e, 0x8a, 0x6f, 0x7f, 0xb7, 0xe4, 0x4b, 0x6e, 0xee, 0x9c, 0x95, 0xb1,
	0xbe, 0xd7, 0xa5, 0x98, 0xe4, 0xc2, 0xcd, 0x4d, 0xeb, 0x15, 0x69, 0xfd, 0xa3, 0x7a, 0x3c, 0x23,
	0x5d, 0xb9, 0x84, 0x77, 0x6b, 0x56, 0x25, 0x63, 0x43, 0xda, 0xfa, 0x57, 0x05, 0xc0, 0xe5, 0xe9,
	0x7b, 0x9e, 0xca, 0x26, 0xfb, 0x0c, 0x48, 0xb4, 0x5c, 0xdc, 0xf0, 0x94, 0xc5, 0xf3, 0x22, 0x7f,
	0x66, 0x49, 0x66, 0xce, 0x50, 0x1a, 0x67, 0x9e, 0x67, 0x0d, 0xff, 0x21, 0x54, 0x61, 0x3c, 0xc0,
	0x29, 0x4b, 0xce, 0xa9, 0xd4, 0xdb, 0x9b, 0xc4, 0x33, 0xa8, 0x2f, 0xb1, 0x7f, 0xde, 0x71, 0x2f,
	0xc1, 0xfe, 0xa6, 0xfb, 0x2d, 0xca, 0xde, 0x70, 0x2f, 0x19, 0x77, 0xc9, 0x17, 0x50, 0x5b, 0x78,
	0x1f, 0x0a, 0x80, 0x6a, 0xb0, 0x07, 0x0b, 0xef, 0x83, 0xd6, 0xbf, 0x2c, 0xfe, 0x46, 0xc3, 0xd8,
	0x9b, 0x09, 0xb3, 0x2a, 0x9f, 0xed, 0xd6, 0x24, 0x84, 0x97, 0xca, 0xff, 0x45, 0x71, 0x2d, 0xc8,
	0xaf, 0xa1, 0xee, 0xc7, 0x49, 0x1a, 0xfb, 0x5c, 0x88, 0x38, 0x15, 0xe6, 0xae, 0x24, 0xae, 0xfc,
	0xff, 0xf6, 0xee, 0xb5, 0x74, 0x0d, 0x8a, 0x6d, 0x3c, 0xe5, 0x49, 0x9c, 0x66, 0xd8, 0x08, 0xd2,
	0x8c, 0x61, 0xf0, 0x75, 0xa7, 0x3d, 0x54, 0x0a, 0x17, 0xe5, 0xd3, 0x60, 0xc1, 0xc9, 0x57, 0xa0,
	0x45, 0x8c, 0x47, 0x33, 0x85, 0x54, 0x0d, 0xb6, 0xa1, 0xc4, 0x56, 0x34, 0x93, 0xb8, 0x73, 0x30,
	0x70, 0x92, 0x63, 0x42, 0xe6, 0x80, 0xa1, 0x4a, 0x36, 0xd6, 0x06, 0x6d, 0xa2, 0x5c, 0xa5, 0x66,
	0x12, 0xa7, 0x19, 0xb9, 0x54, 0x19, 0xbd, 0x7f, 0x8f, 0x26, 0x48, 0xd7, 0xbf, 0x5c, 0xbd, 0xf3,
	0x03, 0xcf, 0x96, 0x6e, 0xd0, 0x48, 0x07, 0x43, 0xa7, 0x25, 0x41, 0xf4, 0x4e, 0xb6, 0xd8, 0xda,
	0xc5, 0x4f, 0x3f, 0x6e, 0x26, 0x88, 0xde, 0xd1, 0x35, 0x4a, 0x6b, 0x09, 0xcd, 0x51, 0xf0, 0x9e,
	0x2b, 0xef, 0xe4, 0x84, 0xf9, 0x0c, 0x76, 0xd5, 0x15, 0xb6, 0x67, 0x52, 0x85, 0xc2, 0x71, 0x84,
	0x6a, 0x0c, 0x8e, 0xb1, 0xfa, 0xc2, 0x98, 0x3d, 0x3d, 0x03, 0x6d, 0x51, 0x64, 0xf2, 0x40, 0x14,
	0xeb, 0xd6, 0xdf, 0xab, 0xd0, 0x58, 0x9b, 0xab, 0xc9, 0x00, 0x1a, 0x92, 0xc4, 0xde, 0xf3, 0x54,
	0x04, 0x71, 0x24, 0x9f, 0x6a, 0xed, 0xe2, 0x67, 0xf7, 0xa6, 0xe4, 0xa0, 0x7d, 0xad, 0xb4, 0x83,
	0x20, 0xe4, 0xbd, 0x38, 0xca, 0x78, 0x94, 0xd1, 0xba, 0x44, 0x68, 0x05, 0x79, 0x0d, 0xf5, 0x30,
	0x78, 0xcf, 0x75, 0x1a, 0x84, 0x9e, 0x56, 0xcc, 0x7b, 0x33, 0xeb, 0xd7, 0xa5, 0xb5, 0xb0, 0xd8,
	0x63, 0x19, 0xd4, 0x67, 0xd8, 0xef, 0x72, 0xf2, 0xce, 0xe6, 0x5b, 0x5c, 0x89, 0x40, 0x0d, 0x91,
	0x39, 0x71, 0x02, 0xa7, 0xea, 0x69, 0x0a, 0x16, 0x44, 0x2c, 0x2b, 0x66, 0x4a, 0xb3, 0x22, 0x2d,
	0x7c, 0xbe, 0x3d, 0xd7, 0xdf, 0xcf, 0x9d, 0xf4, 0x58, 0x53, 0xd7, 0x86, 0xd1, 0x0b, 0x00, 0x5f,
	0x05, 0x08, 0x7b, 0x79, 0x55, 0x06, 0xe3, 0x78, 0xe5, 0x6d, 0xe7, 0x1f, 0x1a, 0xf4, 0xc0, 0xcf,
	0x97, 0x64, 0x00, 0xc7, 0x0b, 0x4f, 0x52, 0x7e, 0x7c, 0x61, 0x10, 0xc5, 0xe8, 0xad, 0x96, 0xc7,
	0x33, 0xd8, 0x55, 0x52, 0x59, 0x13, 0x1f, 0x7d, 0x02, 0x0a, 0x43, 0x5e, 0x43, 0xf3, 0xc6, 0xf3,
	0xdf, 0x2d, 0x13, 0xa6, 0x04, 0xc2, 0xdc, 0xff, 0x44, 0xd8, 0x1a, 0x0a, 0x3b, 0x56, 0x50, 0x1c,
	0x6b, 0x6f, 0xbc, 0xd0, 0x8b, 0x7c, 0x6c, 0x3a, 0x91, 0x2c, 0x98, 0x7d, 0x0a, 0xb9, 0xc8, 0x89,
	0xc8, 0x33, 0x30, 0xf4, 0x9d, 0x64, 0x75, 0xc9, 0xb2, 0xc2, 0xe9, 0xa3, 0xfa, 0xaa, 0xfc, 0xcd,
	0x0b, 0xda, 0x54, 0x3a, 0xcc, 0xa4, 0x2c, 0xad, 0x97, 0x50, 0xd7, 0xb9, 0x53, 0x73, 0x74, 0xed,
	0x53, 0x09, 0xd4, 0x48, 0xdc, 0x7c, 0xfd, 0xef, 0x12, 0xec, 0x3a, 0x89, 0x8c, 0xfc, 0x11, 0x34,
	0xde, 0x74, 0x3b, 0xae, 0xc5, 0xae, 0x2d, 0xea, 0x0e, 0x1d, 0xdb, 0xf8, 0x8c, 0x34, 0x01, 0x7a,
	0xa3, 0xb7, 0xee, 0xd4, 0xa2, 0x6c, 0xd8, 0x37, 0x4a, 0xf8, 0x95, 0x32, 0x1a, 0x5e, 0x5b, 0xcc,
	0xb5, 0x28, 0x82, 0x8c, 0x32, 0x4a, 0xfa, 0x56, 0xa7, 0x5f, 0x48, 0x76, 0xe4, 0xa7, 0x4a, 0x07,
	0x29, 0x46, 0x85, 0x10, 0x68, 0x76, 0x3b, 0xbd, 0xab, 0xb7, 0x13, 0xa6, 0x44, 0xae, 0x51, 0x25,
	0x8f, 0xe1, 0x58, 0x6d, 0x58, 0xcf, 0x99, 0x50, 0xa7, 0x67, 0xb9, 0xae, 0x43, 0x5d, 0x63, 0x97,
	0x3c, 0x81, 0x53, 0x6a, 0x5d, 0x0e, 0x1d, 0xdb, 0x65, 0x43, 0x9b, 0x4d, 0x69, 0xc7, 0x76, 0x87,
	0x53, 0xf4, 0x63, 0x0f, 0xbf, 0x6f, 0xba, 0x9d, 0x51, 0xc7, 0xee, 0x59, 0x94, 0x39, 0xb6, 0xb1,
	0x4f, 0x4e, 0xc0, 0xd0, 0x46, 0x86, 0xf6, 0xc0, 0x61, 0x13, 0x87, 0x4e, 0xd5, 0x47, 0x94, 0xf6,
	0x83, 0xd9, 0x9d, 0xb1, 0x65, 0x40, 0x77, 0x0c, 0x2f, 0xe2, 0xf4, 0xb6, 0xed, 0x25, 0x9e, 0x7f,
	0xc7, 0xdb, 0x77, 0xde, 0x2c, 0x8e, 0x13, 0x1d, 0x14, 0x71, 0xe7, 0xcd, 0xb8, 0xfe, 0x5e, 0xbd,
	0x59, 0xce, 0xdb, 0xb7, 0x3c, 0xe2, 0xa9, 0x97, 0xf1, 0x59, 0x77, 0xfd, 0xcb, 0x77, 0x82, 0x00,
	0xf1, 0xa6, 0xf4, 0xcf, 0x52, 0xe9, 0xff, 0x01, 0x00, 0x00, 0xff, 0xff, 0xc3, 0xa6, 0x2f, 0x89,
	0x14, 0x0f, 0x00, 0x00,
}
