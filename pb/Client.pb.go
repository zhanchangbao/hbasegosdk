// Code generated by protoc-gen-go. DO NOT EDIT.
// source: Client.proto

// This file contains protocol buffers that are used for Client service.

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//*
// Consistency defines the expected consistency level for an operation.
type Consistency int32

const (
	Consistency_STRONG   Consistency = 0
	Consistency_TIMELINE Consistency = 1
)

var Consistency_name = map[int32]string{
	0: "STRONG",
	1: "TIMELINE",
}

var Consistency_value = map[string]int32{
	"STRONG":   0,
	"TIMELINE": 1,
}

func (x Consistency) Enum() *Consistency {
	p := new(Consistency)
	*p = x
	return p
}

func (x Consistency) String() string {
	return proto.EnumName(Consistency_name, int32(x))
}

func (x *Consistency) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Consistency_value, data, "Consistency")
	if err != nil {
		return err
	}
	*x = Consistency(value)
	return nil
}

func (Consistency) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6e3cf1cf2c8ad561, []int{0}
}

type MutationProto_Durability int32

const (
	MutationProto_USE_DEFAULT MutationProto_Durability = 0
	MutationProto_SKIP_WAL    MutationProto_Durability = 1
	MutationProto_ASYNC_WAL   MutationProto_Durability = 2
	MutationProto_SYNC_WAL    MutationProto_Durability = 3
	MutationProto_FSYNC_WAL   MutationProto_Durability = 4
)

var MutationProto_Durability_name = map[int32]string{
	0: "USE_DEFAULT",
	1: "SKIP_WAL",
	2: "ASYNC_WAL",
	3: "SYNC_WAL",
	4: "FSYNC_WAL",
}

var MutationProto_Durability_value = map[string]int32{
	"USE_DEFAULT": 0,
	"SKIP_WAL":    1,
	"ASYNC_WAL":   2,
	"SYNC_WAL":    3,
	"FSYNC_WAL":   4,
}

func (x MutationProto_Durability) Enum() *MutationProto_Durability {
	p := new(MutationProto_Durability)
	*p = x
	return p
}

func (x MutationProto_Durability) String() string {
	return proto.EnumName(MutationProto_Durability_name, int32(x))
}

func (x *MutationProto_Durability) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MutationProto_Durability_value, data, "MutationProto_Durability")
	if err != nil {
		return err
	}
	*x = MutationProto_Durability(value)
	return nil
}

func (MutationProto_Durability) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6e3cf1cf2c8ad561, []int{8, 0}
}

type MutationProto_MutationType int32

const (
	MutationProto_APPEND    MutationProto_MutationType = 0
	MutationProto_INCREMENT MutationProto_MutationType = 1
	MutationProto_PUT       MutationProto_MutationType = 2
	MutationProto_DELETE    MutationProto_MutationType = 3
)

var MutationProto_MutationType_name = map[int32]string{
	0: "APPEND",
	1: "INCREMENT",
	2: "PUT",
	3: "DELETE",
}

var MutationProto_MutationType_value = map[string]int32{
	"APPEND":    0,
	"INCREMENT": 1,
	"PUT":       2,
	"DELETE":    3,
}

func (x MutationProto_MutationType) Enum() *MutationProto_MutationType {
	p := new(MutationProto_MutationType)
	*p = x
	return p
}

func (x MutationProto_MutationType) String() string {
	return proto.EnumName(MutationProto_MutationType_name, int32(x))
}

func (x *MutationProto_MutationType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MutationProto_MutationType_value, data, "MutationProto_MutationType")
	if err != nil {
		return err
	}
	*x = MutationProto_MutationType(value)
	return nil
}

func (MutationProto_MutationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6e3cf1cf2c8ad561, []int{8, 1}
}

type MutationProto_DeleteType int32

const (
	MutationProto_DELETE_ONE_VERSION       MutationProto_DeleteType = 0
	MutationProto_DELETE_MULTIPLE_VERSIONS MutationProto_DeleteType = 1
	MutationProto_DELETE_FAMILY            MutationProto_DeleteType = 2
	MutationProto_DELETE_FAMILY_VERSION    MutationProto_DeleteType = 3
)

var MutationProto_DeleteType_name = map[int32]string{
	0: "DELETE_ONE_VERSION",
	1: "DELETE_MULTIPLE_VERSIONS",
	2: "DELETE_FAMILY",
	3: "DELETE_FAMILY_VERSION",
}

var MutationProto_DeleteType_value = map[string]int32{
	"DELETE_ONE_VERSION":       0,
	"DELETE_MULTIPLE_VERSIONS": 1,
	"DELETE_FAMILY":            2,
	"DELETE_FAMILY_VERSION":    3,
}

func (x MutationProto_DeleteType) Enum() *MutationProto_DeleteType {
	p := new(MutationProto_DeleteType)
	*p = x
	return p
}

func (x MutationProto_DeleteType) String() string {
	return proto.EnumName(MutationProto_DeleteType_name, int32(x))
}

func (x *MutationProto_DeleteType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MutationProto_DeleteType_value, data, "MutationProto_DeleteType")
	if err != nil {
		return err
	}
	*x = MutationProto_DeleteType(value)
	return nil
}

func (MutationProto_DeleteType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6e3cf1cf2c8ad561, []int{8, 2}
}

type Scan_ReadType int32

const (
	Scan_DEFAULT Scan_ReadType = 0
	Scan_STREAM  Scan_ReadType = 1
	Scan_PREAD   Scan_ReadType = 2
)

var Scan_ReadType_name = map[int32]string{
	0: "DEFAULT",
	1: "STREAM",
	2: "PREAD",
}

var Scan_ReadType_value = map[string]int32{
	"DEFAULT": 0,
	"STREAM":  1,
	"PREAD":   2,
}

func (x Scan_ReadType) Enum() *Scan_ReadType {
	p := new(Scan_ReadType)
	*p = x
	return p
}

func (x Scan_ReadType) String() string {
	return proto.EnumName(Scan_ReadType_name, int32(x))
}

func (x *Scan_ReadType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Scan_ReadType_value, data, "Scan_ReadType")
	if err != nil {
		return err
	}
	*x = Scan_ReadType(value)
	return nil
}

func (Scan_ReadType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6e3cf1cf2c8ad561, []int{11, 0}
}

//*
// The protocol buffer version of Authorizations.
type Authorizations struct {
	Label                []string `protobuf:"bytes,1,rep,name=label" json:"label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Authorizations) Reset()         { *m = Authorizations{} }
func (m *Authorizations) String() string { return proto.CompactTextString(m) }
func (*Authorizations) ProtoMessage()    {}
func (*Authorizations) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e3cf1cf2c8ad561, []int{0}
}

func (m *Authorizations) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Authorizations.Unmarshal(m, b)
}
func (m *Authorizations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Authorizations.Marshal(b, m, deterministic)
}
func (m *Authorizations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Authorizations.Merge(m, src)
}
func (m *Authorizations) XXX_Size() int {
	return xxx_messageInfo_Authorizations.Size(m)
}
func (m *Authorizations) XXX_DiscardUnknown() {
	xxx_messageInfo_Authorizations.DiscardUnknown(m)
}

var xxx_messageInfo_Authorizations proto.InternalMessageInfo

func (m *Authorizations) GetLabel() []string {
	if m != nil {
		return m.Label
	}
	return nil
}

//*
// The protocol buffer version of CellVisibility.
type CellVisibility struct {
	Expression           *string  `protobuf:"bytes,1,req,name=expression" json:"expression,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CellVisibility) Reset()         { *m = CellVisibility{} }
func (m *CellVisibility) String() string { return proto.CompactTextString(m) }
func (*CellVisibility) ProtoMessage()    {}
func (*CellVisibility) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e3cf1cf2c8ad561, []int{1}
}

func (m *CellVisibility) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellVisibility.Unmarshal(m, b)
}
func (m *CellVisibility) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellVisibility.Marshal(b, m, deterministic)
}
func (m *CellVisibility) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellVisibility.Merge(m, src)
}
func (m *CellVisibility) XXX_Size() int {
	return xxx_messageInfo_CellVisibility.Size(m)
}
func (m *CellVisibility) XXX_DiscardUnknown() {
	xxx_messageInfo_CellVisibility.DiscardUnknown(m)
}

var xxx_messageInfo_CellVisibility proto.InternalMessageInfo

func (m *CellVisibility) GetExpression() string {
	if m != nil && m.Expression != nil {
		return *m.Expression
	}
	return ""
}

//*
// Container for a list of column qualifier names of a family.
type Column struct {
	Family               []byte   `protobuf:"bytes,1,req,name=family" json:"family,omitempty"`
	Qualifier            [][]byte `protobuf:"bytes,2,rep,name=qualifier" json:"qualifier,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Column) Reset()         { *m = Column{} }
func (m *Column) String() string { return proto.CompactTextString(m) }
func (*Column) ProtoMessage()    {}
func (*Column) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e3cf1cf2c8ad561, []int{2}
}

func (m *Column) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Column.Unmarshal(m, b)
}
func (m *Column) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Column.Marshal(b, m, deterministic)
}
func (m *Column) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Column.Merge(m, src)
}
func (m *Column) XXX_Size() int {
	return xxx_messageInfo_Column.Size(m)
}
func (m *Column) XXX_DiscardUnknown() {
	xxx_messageInfo_Column.DiscardUnknown(m)
}

var xxx_messageInfo_Column proto.InternalMessageInfo

func (m *Column) GetFamily() []byte {
	if m != nil {
		return m.Family
	}
	return nil
}

func (m *Column) GetQualifier() [][]byte {
	if m != nil {
		return m.Qualifier
	}
	return nil
}

//*
// The protocol buffer version of Get.
// Unless existence_only is specified, return all the requested data
// for the row that matches exactly.
type Get struct {
	Row         []byte           `protobuf:"bytes,1,req,name=row" json:"row,omitempty"`
	Column      []*Column        `protobuf:"bytes,2,rep,name=column" json:"column,omitempty"`
	Attribute   []*NameBytesPair `protobuf:"bytes,3,rep,name=attribute" json:"attribute,omitempty"`
	Filter      *Filter          `protobuf:"bytes,4,opt,name=filter" json:"filter,omitempty"`
	TimeRange   *TimeRange       `protobuf:"bytes,5,opt,name=time_range,json=timeRange" json:"time_range,omitempty"`
	MaxVersions *uint32          `protobuf:"varint,6,opt,name=max_versions,json=maxVersions,def=1" json:"max_versions,omitempty"`
	CacheBlocks *bool            `protobuf:"varint,7,opt,name=cache_blocks,json=cacheBlocks,def=1" json:"cache_blocks,omitempty"`
	StoreLimit  *uint32          `protobuf:"varint,8,opt,name=store_limit,json=storeLimit" json:"store_limit,omitempty"`
	StoreOffset *uint32          `protobuf:"varint,9,opt,name=store_offset,json=storeOffset" json:"store_offset,omitempty"`
	// The result isn't asked for, just check for
	// the existence.
	ExistenceOnly *bool `protobuf:"varint,10,opt,name=existence_only,json=existenceOnly,def=0" json:"existence_only,omitempty"`
	// If the row to get doesn't exist, return the
	// closest row before. Deprecated. No longer used!
	// Since hbase-2.0.0 but left in place so can test
	// for Gets with this set and throw Exception.
	ClosestRowBefore           *bool                    `protobuf:"varint,11,opt,name=closest_row_before,json=closestRowBefore,def=0" json:"closest_row_before,omitempty"`
	Consistency                *Consistency             `protobuf:"varint,12,opt,name=consistency,enum=hbase.pb.Consistency,def=0" json:"consistency,omitempty"`
	CfTimeRange                []*ColumnFamilyTimeRange `protobuf:"bytes,13,rep,name=cf_time_range,json=cfTimeRange" json:"cf_time_range,omitempty"`
	LoadColumnFamiliesOnDemand *bool                    `protobuf:"varint,14,opt,name=load_column_families_on_demand,json=loadColumnFamiliesOnDemand" json:"load_column_families_on_demand,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}                 `json:"-"`
	XXX_unrecognized           []byte                   `json:"-"`
	XXX_sizecache              int32                    `json:"-"`
}

func (m *Get) Reset()         { *m = Get{} }
func (m *Get) String() string { return proto.CompactTextString(m) }
func (*Get) ProtoMessage()    {}
func (*Get) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e3cf1cf2c8ad561, []int{3}
}

func (m *Get) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Get.Unmarshal(m, b)
}
func (m *Get) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Get.Marshal(b, m, deterministic)
}
func (m *Get) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Get.Merge(m, src)
}
func (m *Get) XXX_Size() int {
	return xxx_messageInfo_Get.Size(m)
}
func (m *Get) XXX_DiscardUnknown() {
	xxx_messageInfo_Get.DiscardUnknown(m)
}

var xxx_messageInfo_Get proto.InternalMessageInfo

const Default_Get_MaxVersions uint32 = 1
const Default_Get_CacheBlocks bool = true
const Default_Get_ExistenceOnly bool = false
const Default_Get_ClosestRowBefore bool = false
const Default_Get_Consistency Consistency = Consistency_STRONG

func (m *Get) GetRow() []byte {
	if m != nil {
		return m.Row
	}
	return nil
}

func (m *Get) GetColumn() []*Column {
	if m != nil {
		return m.Column
	}
	return nil
}

func (m *Get) GetAttribute() []*NameBytesPair {
	if m != nil {
		return m.Attribute
	}
	return nil
}

func (m *Get) GetFilter() *Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *Get) GetTimeRange() *TimeRange {
	if m != nil {
		return m.TimeRange
	}
	return nil
}

func (m *Get) GetMaxVersions() uint32 {
	if m != nil && m.MaxVersions != nil {
		return *m.MaxVersions
	}
	return Default_Get_MaxVersions
}

func (m *Get) GetCacheBlocks() bool {
	if m != nil && m.CacheBlocks != nil {
		return *m.CacheBlocks
	}
	return Default_Get_CacheBlocks
}

func (m *Get) GetStoreLimit() uint32 {
	if m != nil && m.StoreLimit != nil {
		return *m.StoreLimit
	}
	return 0
}

func (m *Get) GetStoreOffset() uint32 {
	if m != nil && m.StoreOffset != nil {
		return *m.StoreOffset
	}
	return 0
}

func (m *Get) GetExistenceOnly() bool {
	if m != nil && m.ExistenceOnly != nil {
		return *m.ExistenceOnly
	}
	return Default_Get_ExistenceOnly
}

func (m *Get) GetClosestRowBefore() bool {
	if m != nil && m.ClosestRowBefore != nil {
		return *m.ClosestRowBefore
	}
	return Default_Get_ClosestRowBefore
}

func (m *Get) GetConsistency() Consistency {
	if m != nil && m.Consistency != nil {
		return *m.Consistency
	}
	return Default_Get_Consistency
}

func (m *Get) GetCfTimeRange() []*ColumnFamilyTimeRange {
	if m != nil {
		return m.CfTimeRange
	}
	return nil
}

func (m *Get) GetLoadColumnFamiliesOnDemand() bool {
	if m != nil && m.LoadColumnFamiliesOnDemand != nil {
		return *m.LoadColumnFamiliesOnDemand
	}
	return false
}

type Result struct {
	// Result includes the Cells or else it just has a count of Cells
	// that are carried otherwise.
	Cell []*Cell `protobuf:"bytes,1,rep,name=cell" json:"cell,omitempty"`
	// The below count is set when the associated cells are
	// not part of this protobuf message; they are passed alongside
	// and then this Message is just a placeholder with metadata.
	// The count is needed to know how many to peel off the block of Cells as
	// ours.  NOTE: This is different from the pb managed cell_count of the
	// 'cell' field above which is non-null when the cells are pb'd.
	AssociatedCellCount *int32 `protobuf:"varint,2,opt,name=associated_cell_count,json=associatedCellCount" json:"associated_cell_count,omitempty"`
	// used for Get to check existence only. Not set if existence_only was not set to true
	//  in the query.
	Exists *bool `protobuf:"varint,3,opt,name=exists" json:"exists,omitempty"`
	// Whether or not the results are coming from possibly stale data
	Stale *bool `protobuf:"varint,4,opt,name=stale,def=0" json:"stale,omitempty"`
	// Whether or not the entire result could be returned. Results will be split when
	// the RPC chunk size limit is reached. Partial results contain only a subset of the
	// cells for a row and must be combined with a result containing the remaining cells
	// to form a complete result. The equivalent flag in o.a.h.h.client.Result is
	// mayHaveMoreCellsInRow.
	Partial              *bool    `protobuf:"varint,5,opt,name=partial,def=0" json:"partial,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e3cf1cf2c8ad561, []int{4}
}

func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (m *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(m, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

const Default_Result_Stale bool = false
const Default_Result_Partial bool = false

func (m *Result) GetCell() []*Cell {
	if m != nil {
		return m.Cell
	}
	return nil
}

func (m *Result) GetAssociatedCellCount() int32 {
	if m != nil && m.AssociatedCellCount != nil {
		return *m.AssociatedCellCount
	}
	return 0
}

func (m *Result) GetExists() bool {
	if m != nil && m.Exists != nil {
		return *m.Exists
	}
	return false
}

func (m *Result) GetStale() bool {
	if m != nil && m.Stale != nil {
		return *m.Stale
	}
	return Default_Result_Stale
}

func (m *Result) GetPartial() bool {
	if m != nil && m.Partial != nil {
		return *m.Partial
	}
	return Default_Result_Partial
}

//*
// The get request. Perform a single Get operation.
type GetRequest struct {
	Region               *RegionSpecifier `protobuf:"bytes,1,req,name=region" json:"region,omitempty"`
	Get                  *Get             `protobuf:"bytes,2,req,name=get" json:"get,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e3cf1cf2c8ad561, []int{5}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetRegion() *RegionSpecifier {
	if m != nil {
		return m.Region
	}
	return nil
}

func (m *GetRequest) GetGet() *Get {
	if m != nil {
		return m.Get
	}
	return nil
}

type GetResponse struct {
	Result               *Result  `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetResponse) Reset()         { *m = GetResponse{} }
func (m *GetResponse) String() string { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()    {}
func (*GetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e3cf1cf2c8ad561, []int{6}
}

func (m *GetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResponse.Unmarshal(m, b)
}
func (m *GetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResponse.Marshal(b, m, deterministic)
}
func (m *GetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResponse.Merge(m, src)
}
func (m *GetResponse) XXX_Size() int {
	return xxx_messageInfo_GetResponse.Size(m)
}
func (m *GetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResponse proto.InternalMessageInfo

func (m *GetResponse) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

//*
// Condition to check if the value of a given cell (row,
// family, qualifier) matches a value via a given comparator.
//
// Condition is used in check and mutate operations.
type Condition struct {
	Row                  []byte       `protobuf:"bytes,1,req,name=row" json:"row,omitempty"`
	Family               []byte       `protobuf:"bytes,2,req,name=family" json:"family,omitempty"`
	Qualifier            []byte       `protobuf:"bytes,3,req,name=qualifier" json:"qualifier,omitempty"`
	CompareType          *CompareType `protobuf:"varint,4,req,name=compare_type,json=compareType,enum=hbase.pb.CompareType" json:"compare_type,omitempty"`
	Comparator           *Comparator  `protobuf:"bytes,5,req,name=comparator" json:"comparator,omitempty"`
	TimeRange            *TimeRange   `protobuf:"bytes,6,opt,name=time_range,json=timeRange" json:"time_range,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Condition) Reset()         { *m = Condition{} }
func (m *Condition) String() string { return proto.CompactTextString(m) }
func (*Condition) ProtoMessage()    {}
func (*Condition) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e3cf1cf2c8ad561, []int{7}
}

func (m *Condition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Condition.Unmarshal(m, b)
}
func (m *Condition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Condition.Marshal(b, m, deterministic)
}
func (m *Condition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Condition.Merge(m, src)
}
func (m *Condition) XXX_Size() int {
	return xxx_messageInfo_Condition.Size(m)
}
func (m *Condition) XXX_DiscardUnknown() {
	xxx_messageInfo_Condition.DiscardUnknown(m)
}

var xxx_messageInfo_Condition proto.InternalMessageInfo

func (m *Condition) GetRow() []byte {
	if m != nil {
		return m.Row
	}
	return nil
}

func (m *Condition) GetFamily() []byte {
	if m != nil {
		return m.Family
	}
	return nil
}

func (m *Condition) GetQualifier() []byte {
	if m != nil {
		return m.Qualifier
	}
	return nil
}

func (m *Condition) GetCompareType() CompareType {
	if m != nil && m.CompareType != nil {
		return *m.CompareType
	}
	return CompareType_LESS
}

func (m *Condition) GetComparator() *Comparator {
	if m != nil {
		return m.Comparator
	}
	return nil
}

func (m *Condition) GetTimeRange() *TimeRange {
	if m != nil {
		return m.TimeRange
	}
	return nil
}

//*
// A specific mutation inside a mutate request.
// It can be an append, increment, put or delete based
// on the mutation type.  It can be fully filled in or
// only metadata present because data is being carried
// elsewhere outside of pb.
type MutationProto struct {
	Row         []byte                       `protobuf:"bytes,1,opt,name=row" json:"row,omitempty"`
	MutateType  *MutationProto_MutationType  `protobuf:"varint,2,opt,name=mutate_type,json=mutateType,enum=hbase.pb.MutationProto_MutationType" json:"mutate_type,omitempty"`
	ColumnValue []*MutationProto_ColumnValue `protobuf:"bytes,3,rep,name=column_value,json=columnValue" json:"column_value,omitempty"`
	Timestamp   *uint64                      `protobuf:"varint,4,opt,name=timestamp" json:"timestamp,omitempty"`
	Attribute   []*NameBytesPair             `protobuf:"bytes,5,rep,name=attribute" json:"attribute,omitempty"`
	Durability  *MutationProto_Durability    `protobuf:"varint,6,opt,name=durability,enum=hbase.pb.MutationProto_Durability,def=0" json:"durability,omitempty"`
	// For some mutations, a result may be returned, in which case,
	// time range can be specified for potential performance gain
	TimeRange *TimeRange `protobuf:"bytes,7,opt,name=time_range,json=timeRange" json:"time_range,omitempty"`
	// The below count is set when the associated cells are NOT
	// part of this protobuf message; they are passed alongside
	// and then this Message is a placeholder with metadata.  The
	// count is needed to know how many to peel off the block of Cells as
	// ours.  NOTE: This is different from the pb managed cell_count of the
	// 'cell' field above which is non-null when the cells are pb'd.
	AssociatedCellCount  *int32   `protobuf:"varint,8,opt,name=associated_cell_count,json=associatedCellCount" json:"associated_cell_count,omitempty"`
	Nonce                *uint64  `protobuf:"varint,9,opt,name=nonce" json:"nonce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MutationProto) Reset()         { *m = MutationProto{} }
func (m *MutationProto) String() string { return proto.CompactTextString(m) }
func (*MutationProto) ProtoMessage()    {}
func (*MutationProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e3cf1cf2c8ad561, []int{8}
}

func (m *MutationProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MutationProto.Unmarshal(m, b)
}
func (m *MutationProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MutationProto.Marshal(b, m, deterministic)
}
func (m *MutationProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MutationProto.Merge(m, src)
}
func (m *MutationProto) XXX_Size() int {
	return xxx_messageInfo_MutationProto.Size(m)
}
func (m *MutationProto) XXX_DiscardUnknown() {
	xxx_messageInfo_MutationProto.DiscardUnknown(m)
}

var xxx_messageInfo_MutationProto proto.InternalMessageInfo

const Default_MutationProto_Durability MutationProto_Durability = MutationProto_USE_DEFAULT

func (m *MutationProto) GetRow() []byte {
	if m != nil {
		return m.Row
	}
	return nil
}

func (m *MutationProto) GetMutateType() MutationProto_MutationType {
	if m != nil && m.MutateType != nil {
		return *m.MutateType
	}
	return MutationProto_APPEND
}

func (m *MutationProto) GetColumnValue() []*MutationProto_ColumnValue {
	if m != nil {
		return m.ColumnValue
	}
	return nil
}

func (m *MutationProto) GetTimestamp() uint64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *MutationProto) GetAttribute() []*NameBytesPair {
	if m != nil {
		return m.Attribute
	}
	return nil
}

func (m *MutationProto) GetDurability() MutationProto_Durability {
	if m != nil && m.Durability != nil {
		return *m.Durability
	}
	return Default_MutationProto_Durability
}

func (m *MutationProto) GetTimeRange() *TimeRange {
	if m != nil {
		return m.TimeRange
	}
	return nil
}

func (m *MutationProto) GetAssociatedCellCount() int32 {
	if m != nil && m.AssociatedCellCount != nil {
		return *m.AssociatedCellCount
	}
	return 0
}

func (m *MutationProto) GetNonce() uint64 {
	if m != nil && m.Nonce != nil {
		return *m.Nonce
	}
	return 0
}

type MutationProto_ColumnValue struct {
	Family               []byte                                      `protobuf:"bytes,1,req,name=family" json:"family,omitempty"`
	QualifierValue       []*MutationProto_ColumnValue_QualifierValue `protobuf:"bytes,2,rep,name=qualifier_value,json=qualifierValue" json:"qualifier_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *MutationProto_ColumnValue) Reset()         { *m = MutationProto_ColumnValue{} }
func (m *MutationProto_ColumnValue) String() string { return proto.CompactTextString(m) }
func (*MutationProto_ColumnValue) ProtoMessage()    {}
func (*MutationProto_ColumnValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e3cf1cf2c8ad561, []int{8, 0}
}

func (m *MutationProto_ColumnValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MutationProto_ColumnValue.Unmarshal(m, b)
}
func (m *MutationProto_ColumnValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MutationProto_ColumnValue.Marshal(b, m, deterministic)
}
func (m *MutationProto_ColumnValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MutationProto_ColumnValue.Merge(m, src)
}
func (m *MutationProto_ColumnValue) XXX_Size() int {
	return xxx_messageInfo_MutationProto_ColumnValue.Size(m)
}
func (m *MutationProto_ColumnValue) XXX_DiscardUnknown() {
	xxx_messageInfo_MutationProto_ColumnValue.DiscardUnknown(m)
}

var xxx_messageInfo_MutationProto_ColumnValue proto.InternalMessageInfo

func (m *MutationProto_ColumnValue) GetFamily() []byte {
	if m != nil {
		return m.Family
	}
	return nil
}

func (m *MutationProto_ColumnValue) GetQualifierValue() []*MutationProto_ColumnValue_QualifierValue {
	if m != nil {
		return m.QualifierValue
	}
	return nil
}

type MutationProto_ColumnValue_QualifierValue struct {
	Qualifier            []byte                    `protobuf:"bytes,1,opt,name=qualifier" json:"qualifier,omitempty"`
	Value                []byte                    `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	Timestamp            *uint64                   `protobuf:"varint,3,opt,name=timestamp" json:"timestamp,omitempty"`
	DeleteType           *MutationProto_DeleteType `protobuf:"varint,4,opt,name=delete_type,json=deleteType,enum=hbase.pb.MutationProto_DeleteType" json:"delete_type,omitempty"`
	Tags                 []byte                    `protobuf:"bytes,5,opt,name=tags" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *MutationProto_ColumnValue_QualifierValue) Reset() {
	*m = MutationProto_ColumnValue_QualifierValue{}
}
func (m *MutationProto_ColumnValue_QualifierValue) String() string { return proto.CompactTextString(m) }
func (*MutationProto_ColumnValue_QualifierValue) ProtoMessage()    {}
func (*MutationProto_ColumnValue_QualifierValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e3cf1cf2c8ad561, []int{8, 0, 0}
}

func (m *MutationProto_ColumnValue_QualifierValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MutationProto_ColumnValue_QualifierValue.Unmarshal(m, b)
}
func (m *MutationProto_ColumnValue_QualifierValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MutationProto_ColumnValue_QualifierValue.Marshal(b, m, deterministic)
}
func (m *MutationProto_ColumnValue_QualifierValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MutationProto_ColumnValue_QualifierValue.Merge(m, src)
}
func (m *MutationProto_ColumnValue_QualifierValue) XXX_Size() int {
	return xxx_messageInfo_MutationProto_ColumnValue_QualifierValue.Size(m)
}
func (m *MutationProto_ColumnValue_QualifierValue) XXX_DiscardUnknown() {
	xxx_messageInfo_MutationProto_ColumnValue_QualifierValue.DiscardUnknown(m)
}

var xxx_messageInfo_MutationProto_ColumnValue_QualifierValue proto.InternalMessageInfo

func (m *MutationProto_ColumnValue_QualifierValue) GetQualifier() []byte {
	if m != nil {
		return m.Qualifier
	}
	return nil
}

func (m *MutationProto_ColumnValue_QualifierValue) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *MutationProto_ColumnValue_QualifierValue) GetTimestamp() uint64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *MutationProto_ColumnValue_QualifierValue) GetDeleteType() MutationProto_DeleteType {
	if m != nil && m.DeleteType != nil {
		return *m.DeleteType
	}
	return MutationProto_DELETE_ONE_VERSION
}

func (m *MutationProto_ColumnValue_QualifierValue) GetTags() []byte {
	if m != nil {
		return m.Tags
	}
	return nil
}

//*
// The mutate request. Perform a single Mutate operation.
//
// Optionally, you can specify a condition. The mutate
// will take place only if the condition is met.  Otherwise,
// the mutate will be ignored.  In the response result,
// parameter processed is used to indicate if the mutate
// actually happened.
type MutateRequest struct {
	Region               *RegionSpecifier `protobuf:"bytes,1,req,name=region" json:"region,omitempty"`
	Mutation             *MutationProto   `protobuf:"bytes,2,req,name=mutation" json:"mutation,omitempty"`
	Condition            *Condition       `protobuf:"bytes,3,opt,name=condition" json:"condition,omitempty"`
	NonceGroup           *uint64          `protobuf:"varint,4,opt,name=nonce_group,json=nonceGroup" json:"nonce_group,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *MutateRequest) Reset()         { *m = MutateRequest{} }
func (m *MutateRequest) String() string { return proto.CompactTextString(m) }
func (*MutateRequest) ProtoMessage()    {}
func (*MutateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e3cf1cf2c8ad561, []int{9}
}

func (m *MutateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MutateRequest.Unmarshal(m, b)
}
func (m *MutateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MutateRequest.Marshal(b, m, deterministic)
}
func (m *MutateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MutateRequest.Merge(m, src)
}
func (m *MutateRequest) XXX_Size() int {
	return xxx_messageInfo_MutateRequest.Size(m)
}
func (m *MutateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MutateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MutateRequest proto.InternalMessageInfo

func (m *MutateRequest) GetRegion() *RegionSpecifier {
	if m != nil {
		return m.Region
	}
	return nil
}

func (m *MutateRequest) GetMutation() *MutationProto {
	if m != nil {
		return m.Mutation
	}
	return nil
}

func (m *MutateRequest) GetCondition() *Condition {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (m *MutateRequest) GetNonceGroup() uint64 {
	if m != nil && m.NonceGroup != nil {
		return *m.NonceGroup
	}
	return 0
}

type MutateResponse struct {
	Result *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	// used for mutate to indicate processed only
	Processed            *bool    `protobuf:"varint,2,opt,name=processed" json:"processed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MutateResponse) Reset()         { *m = MutateResponse{} }
func (m *MutateResponse) String() string { return proto.CompactTextString(m) }
func (*MutateResponse) ProtoMessage()    {}
func (*MutateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e3cf1cf2c8ad561, []int{10}
}

func (m *MutateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MutateResponse.Unmarshal(m, b)
}
func (m *MutateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MutateResponse.Marshal(b, m, deterministic)
}
func (m *MutateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MutateResponse.Merge(m, src)
}
func (m *MutateResponse) XXX_Size() int {
	return xxx_messageInfo_MutateResponse.Size(m)
}
func (m *MutateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MutateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MutateResponse proto.InternalMessageInfo

func (m *MutateResponse) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *MutateResponse) GetProcessed() bool {
	if m != nil && m.Processed != nil {
		return *m.Processed
	}
	return false
}

//*
// Instead of get from a table, you can scan it with optional filters.
// You can specify the row key range, time range, the columns/families
// to scan and so on.
//
// This scan is used the first time in a scan request. The response of
// the initial scan will return a scanner id, which should be used to
// fetch result batches later on before it is closed.
type Scan struct {
	Column                     []*Column                `protobuf:"bytes,1,rep,name=column" json:"column,omitempty"`
	Attribute                  []*NameBytesPair         `protobuf:"bytes,2,rep,name=attribute" json:"attribute,omitempty"`
	StartRow                   []byte                   `protobuf:"bytes,3,opt,name=start_row,json=startRow" json:"start_row,omitempty"`
	StopRow                    []byte                   `protobuf:"bytes,4,opt,name=stop_row,json=stopRow" json:"stop_row,omitempty"`
	Filter                     *Filter                  `protobuf:"bytes,5,opt,name=filter" json:"filter,omitempty"`
	TimeRange                  *TimeRange               `protobuf:"bytes,6,opt,name=time_range,json=timeRange" json:"time_range,omitempty"`
	MaxVersions                *uint32                  `protobuf:"varint,7,opt,name=max_versions,json=maxVersions,def=1" json:"max_versions,omitempty"`
	CacheBlocks                *bool                    `protobuf:"varint,8,opt,name=cache_blocks,json=cacheBlocks,def=1" json:"cache_blocks,omitempty"`
	BatchSize                  *uint32                  `protobuf:"varint,9,opt,name=batch_size,json=batchSize" json:"batch_size,omitempty"`
	MaxResultSize              *uint64                  `protobuf:"varint,10,opt,name=max_result_size,json=maxResultSize" json:"max_result_size,omitempty"`
	StoreLimit                 *uint32                  `protobuf:"varint,11,opt,name=store_limit,json=storeLimit" json:"store_limit,omitempty"`
	StoreOffset                *uint32                  `protobuf:"varint,12,opt,name=store_offset,json=storeOffset" json:"store_offset,omitempty"`
	LoadColumnFamiliesOnDemand *bool                    `protobuf:"varint,13,opt,name=load_column_families_on_demand,json=loadColumnFamiliesOnDemand" json:"load_column_families_on_demand,omitempty"`
	Small                      *bool                    `protobuf:"varint,14,opt,name=small" json:"small,omitempty"` // Deprecated: Do not use.
	Reversed                   *bool                    `protobuf:"varint,15,opt,name=reversed,def=0" json:"reversed,omitempty"`
	Consistency                *Consistency             `protobuf:"varint,16,opt,name=consistency,enum=hbase.pb.Consistency,def=0" json:"consistency,omitempty"`
	Caching                    *uint32                  `protobuf:"varint,17,opt,name=caching" json:"caching,omitempty"`
	AllowPartialResults        *bool                    `protobuf:"varint,18,opt,name=allow_partial_results,json=allowPartialResults" json:"allow_partial_results,omitempty"`
	CfTimeRange                []*ColumnFamilyTimeRange `protobuf:"bytes,19,rep,name=cf_time_range,json=cfTimeRange" json:"cf_time_range,omitempty"`
	MvccReadPoint              *uint64                  `protobuf:"varint,20,opt,name=mvcc_read_point,json=mvccReadPoint,def=0" json:"mvcc_read_point,omitempty"`
	IncludeStartRow            *bool                    `protobuf:"varint,21,opt,name=include_start_row,json=includeStartRow,def=1" json:"include_start_row,omitempty"`
	IncludeStopRow             *bool                    `protobuf:"varint,22,opt,name=include_stop_row,json=includeStopRow,def=0" json:"include_stop_row,omitempty"`
	ReadType                   *Scan_ReadType           `protobuf:"varint,23,opt,name=readType,enum=hbase.pb.Scan_ReadType,def=0" json:"readType,omitempty"`
	NeedCursorResult           *bool                    `protobuf:"varint,24,opt,name=need_cursor_result,json=needCursorResult,def=0" json:"need_cursor_result,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}                 `json:"-"`
	XXX_unrecognized           []byte                   `json:"-"`
	XXX_sizecache              int32                    `json:"-"`
}

func (m *Scan) Reset()         { *m = Scan{} }
func (m *Scan) String() string { return proto.CompactTextString(m) }
func (*Scan) ProtoMessage()    {}
func (*Scan) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e3cf1cf2c8ad561, []int{11}
}

func (m *Scan) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Scan.Unmarshal(m, b)
}
func (m *Scan) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Scan.Marshal(b, m, deterministic)
}
func (m *Scan) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Scan.Merge(m, src)
}
func (m *Scan) XXX_Size() int {
	return xxx_messageInfo_Scan.Size(m)
}
func (m *Scan) XXX_DiscardUnknown() {
	xxx_messageInfo_Scan.DiscardUnknown(m)
}

var xxx_messageInfo_Scan proto.InternalMessageInfo

const Default_Scan_MaxVersions uint32 = 1
const Default_Scan_CacheBlocks bool = true
const Default_Scan_Reversed bool = false
const Default_Scan_Consistency Consistency = Consistency_STRONG
const Default_Scan_MvccReadPoint uint64 = 0
const Default_Scan_IncludeStartRow bool = true
const Default_Scan_IncludeStopRow bool = false
const Default_Scan_ReadType Scan_ReadType = Scan_DEFAULT
const Default_Scan_NeedCursorResult bool = false

func (m *Scan) GetColumn() []*Column {
	if m != nil {
		return m.Column
	}
	return nil
}

func (m *Scan) GetAttribute() []*NameBytesPair {
	if m != nil {
		return m.Attribute
	}
	return nil
}

func (m *Scan) GetStartRow() []byte {
	if m != nil {
		return m.StartRow
	}
	return nil
}

func (m *Scan) GetStopRow() []byte {
	if m != nil {
		return m.StopRow
	}
	return nil
}

func (m *Scan) GetFilter() *Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *Scan) GetTimeRange() *TimeRange {
	if m != nil {
		return m.TimeRange
	}
	return nil
}

func (m *Scan) GetMaxVersions() uint32 {
	if m != nil && m.MaxVersions != nil {
		return *m.MaxVersions
	}
	return Default_Scan_MaxVersions
}

func (m *Scan) GetCacheBlocks() bool {
	if m != nil && m.CacheBlocks != nil {
		return *m.CacheBlocks
	}
	return Default_Scan_CacheBlocks
}

func (m *Scan) GetBatchSize() uint32 {
	if m != nil && m.BatchSize != nil {
		return *m.BatchSize
	}
	return 0
}

func (m *Scan) GetMaxResultSize() uint64 {
	if m != nil && m.MaxResultSize != nil {
		return *m.MaxResultSize
	}
	return 0
}

func (m *Scan) GetStoreLimit() uint32 {
	if m != nil && m.StoreLimit != nil {
		return *m.StoreLimit
	}
	return 0
}

func (m *Scan) GetStoreOffset() uint32 {
	if m != nil && m.StoreOffset != nil {
		return *m.StoreOffset
	}
	return 0
}

func (m *Scan) GetLoadColumnFamiliesOnDemand() bool {
	if m != nil && m.LoadColumnFamiliesOnDemand != nil {
		return *m.LoadColumnFamiliesOnDemand
	}
	return false
}

// Deprecated: Do not use.
func (m *Scan) GetSmall() bool {
	if m != nil && m.Small != nil {
		return *m.Small
	}
	return false
}

func (m *Scan) GetReversed() bool {
	if m != nil && m.Reversed != nil {
		return *m.Reversed
	}
	return Default_Scan_Reversed
}

func (m *Scan) GetConsistency() Consistency {
	if m != nil && m.Consistency != nil {
		return *m.Consistency
	}
	return Default_Scan_Consistency
}

func (m *Scan) GetCaching() uint32 {
	if m != nil && m.Caching != nil {
		return *m.Caching
	}
	return 0
}

func (m *Scan) GetAllowPartialResults() bool {
	if m != nil && m.AllowPartialResults != nil {
		return *m.AllowPartialResults
	}
	return false
}

func (m *Scan) GetCfTimeRange() []*ColumnFamilyTimeRange {
	if m != nil {
		return m.CfTimeRange
	}
	return nil
}

func (m *Scan) GetMvccReadPoint() uint64 {
	if m != nil && m.MvccReadPoint != nil {
		return *m.MvccReadPoint
	}
	return Default_Scan_MvccReadPoint
}

func (m *Scan) GetIncludeStartRow() bool {
	if m != nil && m.IncludeStartRow != nil {
		return *m.IncludeStartRow
	}
	return Default_Scan_IncludeStartRow
}

func (m *Scan) GetIncludeStopRow() bool {
	if m != nil && m.IncludeStopRow != nil {
		return *m.IncludeStopRow
	}
	return Default_Scan_IncludeStopRow
}

func (m *Scan) GetReadType() Scan_ReadType {
	if m != nil && m.ReadType != nil {
		return *m.ReadType
	}
	return Default_Scan_ReadType
}

func (m *Scan) GetNeedCursorResult() bool {
	if m != nil && m.NeedCursorResult != nil {
		return *m.NeedCursorResult
	}
	return Default_Scan_NeedCursorResult
}

//*
// A scan request. Initially, it should specify a scan. Later on, you
// can use the scanner id returned to fetch result batches with a different
// scan request.
//
// The scanner will remain open if there are more results, and it's not
// asked to be closed explicitly.
//
// You can fetch the results and ask the scanner to be closed to save
// a trip if you are not interested in remaining results.
type ScanRequest struct {
	Region                  *RegionSpecifier `protobuf:"bytes,1,opt,name=region" json:"region,omitempty"`
	Scan                    *Scan            `protobuf:"bytes,2,opt,name=scan" json:"scan,omitempty"`
	ScannerId               *uint64          `protobuf:"varint,3,opt,name=scanner_id,json=scannerId" json:"scanner_id,omitempty"`
	NumberOfRows            *uint32          `protobuf:"varint,4,opt,name=number_of_rows,json=numberOfRows" json:"number_of_rows,omitempty"`
	CloseScanner            *bool            `protobuf:"varint,5,opt,name=close_scanner,json=closeScanner" json:"close_scanner,omitempty"`
	NextCallSeq             *uint64          `protobuf:"varint,6,opt,name=next_call_seq,json=nextCallSeq" json:"next_call_seq,omitempty"`
	ClientHandlesPartials   *bool            `protobuf:"varint,7,opt,name=client_handles_partials,json=clientHandlesPartials" json:"client_handles_partials,omitempty"`
	ClientHandlesHeartbeats *bool            `protobuf:"varint,8,opt,name=client_handles_heartbeats,json=clientHandlesHeartbeats" json:"client_handles_heartbeats,omitempty"`
	TrackScanMetrics        *bool            `protobuf:"varint,9,opt,name=track_scan_metrics,json=trackScanMetrics" json:"track_scan_metrics,omitempty"`
	Renew                   *bool            `protobuf:"varint,10,opt,name=renew,def=0" json:"renew,omitempty"`
	// if we have returned limit_of_rows rows to client, then close the scanner.
	LimitOfRows          *uint32  `protobuf:"varint,11,opt,name=limit_of_rows,json=limitOfRows,def=0" json:"limit_of_rows,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScanRequest) Reset()         { *m = ScanRequest{} }
func (m *ScanRequest) String() string { return proto.CompactTextString(m) }
func (*ScanRequest) ProtoMessage()    {}
func (*ScanRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e3cf1cf2c8ad561, []int{12}
}

func (m *ScanRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScanRequest.Unmarshal(m, b)
}
func (m *ScanRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScanRequest.Marshal(b, m, deterministic)
}
func (m *ScanRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScanRequest.Merge(m, src)
}
func (m *ScanRequest) XXX_Size() int {
	return xxx_messageInfo_ScanRequest.Size(m)
}
func (m *ScanRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ScanRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ScanRequest proto.InternalMessageInfo

const Default_ScanRequest_Renew bool = false
const Default_ScanRequest_LimitOfRows uint32 = 0

func (m *ScanRequest) GetRegion() *RegionSpecifier {
	if m != nil {
		return m.Region
	}
	return nil
}

func (m *ScanRequest) GetScan() *Scan {
	if m != nil {
		return m.Scan
	}
	return nil
}

func (m *ScanRequest) GetScannerId() uint64 {
	if m != nil && m.ScannerId != nil {
		return *m.ScannerId
	}
	return 0
}

func (m *ScanRequest) GetNumberOfRows() uint32 {
	if m != nil && m.NumberOfRows != nil {
		return *m.NumberOfRows
	}
	return 0
}

func (m *ScanRequest) GetCloseScanner() bool {
	if m != nil && m.CloseScanner != nil {
		return *m.CloseScanner
	}
	return false
}

func (m *ScanRequest) GetNextCallSeq() uint64 {
	if m != nil && m.NextCallSeq != nil {
		return *m.NextCallSeq
	}
	return 0
}

func (m *ScanRequest) GetClientHandlesPartials() bool {
	if m != nil && m.ClientHandlesPartials != nil {
		return *m.ClientHandlesPartials
	}
	return false
}

func (m *ScanRequest) GetClientHandlesHeartbeats() bool {
	if m != nil && m.ClientHandlesHeartbeats != nil {
		return *m.ClientHandlesHeartbeats
	}
	return false
}

func (m *ScanRequest) GetTrackScanMetrics() bool {
	if m != nil && m.TrackScanMetrics != nil {
		return *m.TrackScanMetrics
	}
	return false
}

func (m *ScanRequest) GetRenew() bool {
	if m != nil && m.Renew != nil {
		return *m.Renew
	}
	return Default_ScanRequest_Renew
}

func (m *ScanRequest) GetLimitOfRows() uint32 {
	if m != nil && m.LimitOfRows != nil {
		return *m.LimitOfRows
	}
	return Default_ScanRequest_LimitOfRows
}

//*
// Scan cursor to tell client where we are scanning.
//
type Cursor struct {
	Row                  []byte   `protobuf:"bytes,1,opt,name=row" json:"row,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cursor) Reset()         { *m = Cursor{} }
func (m *Cursor) String() string { return proto.CompactTextString(m) }
func (*Cursor) ProtoMessage()    {}
func (*Cursor) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e3cf1cf2c8ad561, []int{13}
}

func (m *Cursor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cursor.Unmarshal(m, b)
}
func (m *Cursor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cursor.Marshal(b, m, deterministic)
}
func (m *Cursor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cursor.Merge(m, src)
}
func (m *Cursor) XXX_Size() int {
	return xxx_messageInfo_Cursor.Size(m)
}
func (m *Cursor) XXX_DiscardUnknown() {
	xxx_messageInfo_Cursor.DiscardUnknown(m)
}

var xxx_messageInfo_Cursor proto.InternalMessageInfo

func (m *Cursor) GetRow() []byte {
	if m != nil {
		return m.Row
	}
	return nil
}

//*
// The scan response. If there are no more results, more_results will
// be false.  If it is not specified, it means there are more.
type ScanResponse struct {
	// This field is filled in if we are doing cellblocks.  A cellblock is made up
	// of all Cells serialized out as one cellblock BUT responses from a server
	// have their Cells grouped by Result.  So we can reconstitute the
	// Results on the client-side, this field is a list of counts of Cells
	// in each Result that makes up the response.  For example, if this field
	// has 3, 3, 3 in it, then we know that on the client, we are to make
	// three Results each of three Cells each.
	CellsPerResult []uint32 `protobuf:"varint,1,rep,name=cells_per_result,json=cellsPerResult" json:"cells_per_result,omitempty"`
	ScannerId      *uint64  `protobuf:"varint,2,opt,name=scanner_id,json=scannerId" json:"scanner_id,omitempty"`
	MoreResults    *bool    `protobuf:"varint,3,opt,name=more_results,json=moreResults" json:"more_results,omitempty"`
	Ttl            *uint32  `protobuf:"varint,4,opt,name=ttl" json:"ttl,omitempty"`
	// If cells are not carried in an accompanying cellblock, then they are pb'd here.
	// This field is mutually exclusive with cells_per_result (since the Cells will
	// be inside the pb'd Result)
	Results []*Result `protobuf:"bytes,5,rep,name=results" json:"results,omitempty"`
	Stale   *bool     `protobuf:"varint,6,opt,name=stale" json:"stale,omitempty"`
	// This field is filled in if we are doing cellblocks. In the event that a row
	// could not fit all of its cells into a single RPC chunk, the results will be
	// returned as partials, and reconstructed into a complete result on the client
	// side. This field is a list of flags indicating whether or not the result
	// that the cells belong to is a partial result. For example, if this field
	// has false, false, true in it, then we know that on the client side, we need to
	// make another RPC request since the last result was only a partial.
	PartialFlagPerResult []bool `protobuf:"varint,7,rep,name=partial_flag_per_result,json=partialFlagPerResult" json:"partial_flag_per_result,omitempty"`
	// A server may choose to limit the number of results returned to the client for
	// reasons such as the size in bytes or quantity of results accumulated. This field
	// will true when more results exist in the current region.
	MoreResultsInRegion *bool `protobuf:"varint,8,opt,name=more_results_in_region,json=moreResultsInRegion" json:"more_results_in_region,omitempty"`
	// This field is filled in if the server is sending back a heartbeat message.
	// Heartbeat messages are sent back to the client to prevent the scanner from
	// timing out. Seeing a heartbeat message communicates to the Client that the
	// server would have continued to scan had the time limit not been reached.
	HeartbeatMessage *bool `protobuf:"varint,9,opt,name=heartbeat_message,json=heartbeatMessage" json:"heartbeat_message,omitempty"`
	// This field is filled in if the client has requested that scan metrics be tracked.
	// The metrics tracked here are sent back to the client to be tracked together with
	// the existing client side metrics.
	ScanMetrics *ScanMetrics `protobuf:"bytes,10,opt,name=scan_metrics,json=scanMetrics" json:"scan_metrics,omitempty"`
	// The mvcc read point which is used to open the scanner at server side. Client can
	// make use of this mvcc_read_point when restarting a scanner to get a consistent view
	// of a row.
	MvccReadPoint *uint64 `protobuf:"varint,11,opt,name=mvcc_read_point,json=mvccReadPoint,def=0" json:"mvcc_read_point,omitempty"`
	// If the Scan need cursor, return the row key we are scanning in heartbeat message.
	// If the Scan doesn't need a cursor, don't set this field to reduce network IO.
	Cursor               *Cursor  `protobuf:"bytes,12,opt,name=cursor" json:"cursor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScanResponse) Reset()         { *m = ScanResponse{} }
func (m *ScanResponse) String() string { return proto.CompactTextString(m) }
func (*ScanResponse) ProtoMessage()    {}
func (*ScanResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e3cf1cf2c8ad561, []int{14}
}

func (m *ScanResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScanResponse.Unmarshal(m, b)
}
func (m *ScanResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScanResponse.Marshal(b, m, deterministic)
}
func (m *ScanResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScanResponse.Merge(m, src)
}
func (m *ScanResponse) XXX_Size() int {
	return xxx_messageInfo_ScanResponse.Size(m)
}
func (m *ScanResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ScanResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ScanResponse proto.InternalMessageInfo

const Default_ScanResponse_MvccReadPoint uint64 = 0

func (m *ScanResponse) GetCellsPerResult() []uint32 {
	if m != nil {
		return m.CellsPerResult
	}
	return nil
}

func (m *ScanResponse) GetScannerId() uint64 {
	if m != nil && m.ScannerId != nil {
		return *m.ScannerId
	}
	return 0
}

func (m *ScanResponse) GetMoreResults() bool {
	if m != nil && m.MoreResults != nil {
		return *m.MoreResults
	}
	return false
}

func (m *ScanResponse) GetTtl() uint32 {
	if m != nil && m.Ttl != nil {
		return *m.Ttl
	}
	return 0
}

func (m *ScanResponse) GetResults() []*Result {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *ScanResponse) GetStale() bool {
	if m != nil && m.Stale != nil {
		return *m.Stale
	}
	return false
}

func (m *ScanResponse) GetPartialFlagPerResult() []bool {
	if m != nil {
		return m.PartialFlagPerResult
	}
	return nil
}

func (m *ScanResponse) GetMoreResultsInRegion() bool {
	if m != nil && m.MoreResultsInRegion != nil {
		return *m.MoreResultsInRegion
	}
	return false
}

func (m *ScanResponse) GetHeartbeatMessage() bool {
	if m != nil && m.HeartbeatMessage != nil {
		return *m.HeartbeatMessage
	}
	return false
}

func (m *ScanResponse) GetScanMetrics() *ScanMetrics {
	if m != nil {
		return m.ScanMetrics
	}
	return nil
}

func (m *ScanResponse) GetMvccReadPoint() uint64 {
	if m != nil && m.MvccReadPoint != nil {
		return *m.MvccReadPoint
	}
	return Default_ScanResponse_MvccReadPoint
}

func (m *ScanResponse) GetCursor() *Cursor {
	if m != nil {
		return m.Cursor
	}
	return nil
}

//*
// Atomically bulk load multiple HFiles (say from different column families)
// into an open region.
type BulkLoadHFileRequest struct {
	Region               *RegionSpecifier                   `protobuf:"bytes,1,req,name=region" json:"region,omitempty"`
	FamilyPath           []*BulkLoadHFileRequest_FamilyPath `protobuf:"bytes,2,rep,name=family_path,json=familyPath" json:"family_path,omitempty"`
	AssignSeqNum         *bool                              `protobuf:"varint,3,opt,name=assign_seq_num,json=assignSeqNum" json:"assign_seq_num,omitempty"`
	FsToken              *DelegationToken                   `protobuf:"bytes,4,opt,name=fs_token,json=fsToken" json:"fs_token,omitempty"`
	BulkToken            *string                            `protobuf:"bytes,5,opt,name=bulk_token,json=bulkToken" json:"bulk_token,omitempty"`
	CopyFile             *bool                              `protobuf:"varint,6,opt,name=copy_file,json=copyFile,def=0" json:"copy_file,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *BulkLoadHFileRequest) Reset()         { *m = BulkLoadHFileRequest{} }
func (m *BulkLoadHFileRequest) String() string { return proto.CompactTextString(m) }
func (*BulkLoadHFileRequest) ProtoMessage()    {}
func (*BulkLoadHFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e3cf1cf2c8ad561, []int{15}
}

func (m *BulkLoadHFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BulkLoadHFileRequest.Unmarshal(m, b)
}
func (m *BulkLoadHFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BulkLoadHFileRequest.Marshal(b, m, deterministic)
}
func (m *BulkLoadHFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BulkLoadHFileRequest.Merge(m, src)
}
func (m *BulkLoadHFileRequest) XXX_Size() int {
	return xxx_messageInfo_BulkLoadHFileRequest.Size(m)
}
func (m *BulkLoadHFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BulkLoadHFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BulkLoadHFileRequest proto.InternalMessageInfo

const Default_BulkLoadHFileRequest_CopyFile bool = false

func (m *BulkLoadHFileRequest) GetRegion() *RegionSpecifier {
	if m != nil {
		return m.Region
	}
	return nil
}

func (m *BulkLoadHFileRequest) GetFamilyPath() []*BulkLoadHFileRequest_FamilyPath {
	if m != nil {
		return m.FamilyPath
	}
	return nil
}

func (m *BulkLoadHFileRequest) GetAssignSeqNum() bool {
	if m != nil && m.AssignSeqNum != nil {
		return *m.AssignSeqNum
	}
	return false
}

func (m *BulkLoadHFileRequest) GetFsToken() *DelegationToken {
	if m != nil {
		return m.FsToken
	}
	return nil
}

func (m *BulkLoadHFileRequest) GetBulkToken() string {
	if m != nil && m.BulkToken != nil {
		return *m.BulkToken
	}
	return ""
}

func (m *BulkLoadHFileRequest) GetCopyFile() bool {
	if m != nil && m.CopyFile != nil {
		return *m.CopyFile
	}
	return Default_BulkLoadHFileRequest_CopyFile
}

type BulkLoadHFileRequest_FamilyPath struct {
	Family               []byte   `protobuf:"bytes,1,req,name=family" json:"family,omitempty"`
	Path                 *string  `protobuf:"bytes,2,req,name=path" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BulkLoadHFileRequest_FamilyPath) Reset()         { *m = BulkLoadHFileRequest_FamilyPath{} }
func (m *BulkLoadHFileRequest_FamilyPath) String() string { return proto.CompactTextString(m) }
func (*BulkLoadHFileRequest_FamilyPath) ProtoMessage()    {}
func (*BulkLoadHFileRequest_FamilyPath) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e3cf1cf2c8ad561, []int{15, 0}
}

func (m *BulkLoadHFileRequest_FamilyPath) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BulkLoadHFileRequest_FamilyPath.Unmarshal(m, b)
}
func (m *BulkLoadHFileRequest_FamilyPath) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BulkLoadHFileRequest_FamilyPath.Marshal(b, m, deterministic)
}
func (m *BulkLoadHFileRequest_FamilyPath) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BulkLoadHFileRequest_FamilyPath.Merge(m, src)
}
func (m *BulkLoadHFileRequest_FamilyPath) XXX_Size() int {
	return xxx_messageInfo_BulkLoadHFileRequest_FamilyPath.Size(m)
}
func (m *BulkLoadHFileRequest_FamilyPath) XXX_DiscardUnknown() {
	xxx_messageInfo_BulkLoadHFileRequest_FamilyPath.DiscardUnknown(m)
}

var xxx_messageInfo_BulkLoadHFileRequest_FamilyPath proto.InternalMessageInfo

func (m *BulkLoadHFileRequest_FamilyPath) GetFamily() []byte {
	if m != nil {
		return m.Family
	}
	return nil
}

func (m *BulkLoadHFileRequest_FamilyPath) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

type BulkLoadHFileResponse struct {
	Loaded               *bool    `protobuf:"varint,1,req,name=loaded" json:"loaded,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BulkLoadHFileResponse) Reset()         { *m = BulkLoadHFileResponse{} }
func (m *BulkLoadHFileResponse) String() string { return proto.CompactTextString(m) }
func (*BulkLoadHFileResponse) ProtoMessage()    {}
func (*BulkLoadHFileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e3cf1cf2c8ad561, []int{16}
}

func (m *BulkLoadHFileResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BulkLoadHFileResponse.Unmarshal(m, b)
}
func (m *BulkLoadHFileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BulkLoadHFileResponse.Marshal(b, m, deterministic)
}
func (m *BulkLoadHFileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BulkLoadHFileResponse.Merge(m, src)
}
func (m *BulkLoadHFileResponse) XXX_Size() int {
	return xxx_messageInfo_BulkLoadHFileResponse.Size(m)
}
func (m *BulkLoadHFileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BulkLoadHFileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BulkLoadHFileResponse proto.InternalMessageInfo

func (m *BulkLoadHFileResponse) GetLoaded() bool {
	if m != nil && m.Loaded != nil {
		return *m.Loaded
	}
	return false
}

type DelegationToken struct {
	Identifier           []byte   `protobuf:"bytes,1,opt,name=identifier" json:"identifier,omitempty"`
	Password             []byte   `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	Kind                 *string  `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	Service              *string  `protobuf:"bytes,4,opt,name=service" json:"service,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DelegationToken) Reset()         { *m = DelegationToken{} }
func (m *DelegationToken) String() string { return proto.CompactTextString(m) }
func (*DelegationToken) ProtoMessage()    {}
func (*DelegationToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e3cf1cf2c8ad561, []int{17}
}

func (m *DelegationToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelegationToken.Unmarshal(m, b)
}
func (m *DelegationToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelegationToken.Marshal(b, m, deterministic)
}
func (m *DelegationToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelegationToken.Merge(m, src)
}
func (m *DelegationToken) XXX_Size() int {
	return xxx_messageInfo_DelegationToken.Size(m)
}
func (m *DelegationToken) XXX_DiscardUnknown() {
	xxx_messageInfo_DelegationToken.DiscardUnknown(m)
}

var xxx_messageInfo_DelegationToken proto.InternalMessageInfo

func (m *DelegationToken) GetIdentifier() []byte {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *DelegationToken) GetPassword() []byte {
	if m != nil {
		return m.Password
	}
	return nil
}

func (m *DelegationToken) GetKind() string {
	if m != nil && m.Kind != nil {
		return *m.Kind
	}
	return ""
}

func (m *DelegationToken) GetService() string {
	if m != nil && m.Service != nil {
		return *m.Service
	}
	return ""
}

type PrepareBulkLoadRequest struct {
	TableName            *TableName       `protobuf:"bytes,1,req,name=table_name,json=tableName" json:"table_name,omitempty"`
	Region               *RegionSpecifier `protobuf:"bytes,2,opt,name=region" json:"region,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *PrepareBulkLoadRequest) Reset()         { *m = PrepareBulkLoadRequest{} }
func (m *PrepareBulkLoadRequest) String() string { return proto.CompactTextString(m) }
func (*PrepareBulkLoadRequest) ProtoMessage()    {}
func (*PrepareBulkLoadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e3cf1cf2c8ad561, []int{18}
}

func (m *PrepareBulkLoadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrepareBulkLoadRequest.Unmarshal(m, b)
}
func (m *PrepareBulkLoadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrepareBulkLoadRequest.Marshal(b, m, deterministic)
}
func (m *PrepareBulkLoadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrepareBulkLoadRequest.Merge(m, src)
}
func (m *PrepareBulkLoadRequest) XXX_Size() int {
	return xxx_messageInfo_PrepareBulkLoadRequest.Size(m)
}
func (m *PrepareBulkLoadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PrepareBulkLoadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PrepareBulkLoadRequest proto.InternalMessageInfo

func (m *PrepareBulkLoadRequest) GetTableName() *TableName {
	if m != nil {
		return m.TableName
	}
	return nil
}

func (m *PrepareBulkLoadRequest) GetRegion() *RegionSpecifier {
	if m != nil {
		return m.Region
	}
	return nil
}

type PrepareBulkLoadResponse struct {
	BulkToken            *string  `protobuf:"bytes,1,req,name=bulk_token,json=bulkToken" json:"bulk_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrepareBulkLoadResponse) Reset()         { *m = PrepareBulkLoadResponse{} }
func (m *PrepareBulkLoadResponse) String() string { return proto.CompactTextString(m) }
func (*PrepareBulkLoadResponse) ProtoMessage()    {}
func (*PrepareBulkLoadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e3cf1cf2c8ad561, []int{19}
}

func (m *PrepareBulkLoadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrepareBulkLoadResponse.Unmarshal(m, b)
}
func (m *PrepareBulkLoadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrepareBulkLoadResponse.Marshal(b, m, deterministic)
}
func (m *PrepareBulkLoadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrepareBulkLoadResponse.Merge(m, src)
}
func (m *PrepareBulkLoadResponse) XXX_Size() int {
	return xxx_messageInfo_PrepareBulkLoadResponse.Size(m)
}
func (m *PrepareBulkLoadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PrepareBulkLoadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PrepareBulkLoadResponse proto.InternalMessageInfo

func (m *PrepareBulkLoadResponse) GetBulkToken() string {
	if m != nil && m.BulkToken != nil {
		return *m.BulkToken
	}
	return ""
}

type CleanupBulkLoadRequest struct {
	BulkToken            *string          `protobuf:"bytes,1,req,name=bulk_token,json=bulkToken" json:"bulk_token,omitempty"`
	Region               *RegionSpecifier `protobuf:"bytes,2,opt,name=region" json:"region,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CleanupBulkLoadRequest) Reset()         { *m = CleanupBulkLoadRequest{} }
func (m *CleanupBulkLoadRequest) String() string { return proto.CompactTextString(m) }
func (*CleanupBulkLoadRequest) ProtoMessage()    {}
func (*CleanupBulkLoadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e3cf1cf2c8ad561, []int{20}
}

func (m *CleanupBulkLoadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CleanupBulkLoadRequest.Unmarshal(m, b)
}
func (m *CleanupBulkLoadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CleanupBulkLoadRequest.Marshal(b, m, deterministic)
}
func (m *CleanupBulkLoadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CleanupBulkLoadRequest.Merge(m, src)
}
func (m *CleanupBulkLoadRequest) XXX_Size() int {
	return xxx_messageInfo_CleanupBulkLoadRequest.Size(m)
}
func (m *CleanupBulkLoadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CleanupBulkLoadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CleanupBulkLoadRequest proto.InternalMessageInfo

func (m *CleanupBulkLoadRequest) GetBulkToken() string {
	if m != nil && m.BulkToken != nil {
		return *m.BulkToken
	}
	return ""
}

func (m *CleanupBulkLoadRequest) GetRegion() *RegionSpecifier {
	if m != nil {
		return m.Region
	}
	return nil
}

type CleanupBulkLoadResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CleanupBulkLoadResponse) Reset()         { *m = CleanupBulkLoadResponse{} }
func (m *CleanupBulkLoadResponse) String() string { return proto.CompactTextString(m) }
func (*CleanupBulkLoadResponse) ProtoMessage()    {}
func (*CleanupBulkLoadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e3cf1cf2c8ad561, []int{21}
}

func (m *CleanupBulkLoadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CleanupBulkLoadResponse.Unmarshal(m, b)
}
func (m *CleanupBulkLoadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CleanupBulkLoadResponse.Marshal(b, m, deterministic)
}
func (m *CleanupBulkLoadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CleanupBulkLoadResponse.Merge(m, src)
}
func (m *CleanupBulkLoadResponse) XXX_Size() int {
	return xxx_messageInfo_CleanupBulkLoadResponse.Size(m)
}
func (m *CleanupBulkLoadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CleanupBulkLoadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CleanupBulkLoadResponse proto.InternalMessageInfo

type CoprocessorServiceCall struct {
	Row                  []byte   `protobuf:"bytes,1,req,name=row" json:"row,omitempty"`
	ServiceName          *string  `protobuf:"bytes,2,req,name=service_name,json=serviceName" json:"service_name,omitempty"`
	MethodName           *string  `protobuf:"bytes,3,req,name=method_name,json=methodName" json:"method_name,omitempty"`
	Request              []byte   `protobuf:"bytes,4,req,name=request" json:"request,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CoprocessorServiceCall) Reset()         { *m = CoprocessorServiceCall{} }
func (m *CoprocessorServiceCall) String() string { return proto.CompactTextString(m) }
func (*CoprocessorServiceCall) ProtoMessage()    {}
func (*CoprocessorServiceCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e3cf1cf2c8ad561, []int{22}
}

func (m *CoprocessorServiceCall) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoprocessorServiceCall.Unmarshal(m, b)
}
func (m *CoprocessorServiceCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoprocessorServiceCall.Marshal(b, m, deterministic)
}
func (m *CoprocessorServiceCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoprocessorServiceCall.Merge(m, src)
}
func (m *CoprocessorServiceCall) XXX_Size() int {
	return xxx_messageInfo_CoprocessorServiceCall.Size(m)
}
func (m *CoprocessorServiceCall) XXX_DiscardUnknown() {
	xxx_messageInfo_CoprocessorServiceCall.DiscardUnknown(m)
}

var xxx_messageInfo_CoprocessorServiceCall proto.InternalMessageInfo

func (m *CoprocessorServiceCall) GetRow() []byte {
	if m != nil {
		return m.Row
	}
	return nil
}

func (m *CoprocessorServiceCall) GetServiceName() string {
	if m != nil && m.ServiceName != nil {
		return *m.ServiceName
	}
	return ""
}

func (m *CoprocessorServiceCall) GetMethodName() string {
	if m != nil && m.MethodName != nil {
		return *m.MethodName
	}
	return ""
}

func (m *CoprocessorServiceCall) GetRequest() []byte {
	if m != nil {
		return m.Request
	}
	return nil
}

type CoprocessorServiceResult struct {
	Value                *NameBytesPair `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CoprocessorServiceResult) Reset()         { *m = CoprocessorServiceResult{} }
func (m *CoprocessorServiceResult) String() string { return proto.CompactTextString(m) }
func (*CoprocessorServiceResult) ProtoMessage()    {}
func (*CoprocessorServiceResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e3cf1cf2c8ad561, []int{23}
}

func (m *CoprocessorServiceResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoprocessorServiceResult.Unmarshal(m, b)
}
func (m *CoprocessorServiceResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoprocessorServiceResult.Marshal(b, m, deterministic)
}
func (m *CoprocessorServiceResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoprocessorServiceResult.Merge(m, src)
}
func (m *CoprocessorServiceResult) XXX_Size() int {
	return xxx_messageInfo_CoprocessorServiceResult.Size(m)
}
func (m *CoprocessorServiceResult) XXX_DiscardUnknown() {
	xxx_messageInfo_CoprocessorServiceResult.DiscardUnknown(m)
}

var xxx_messageInfo_CoprocessorServiceResult proto.InternalMessageInfo

func (m *CoprocessorServiceResult) GetValue() *NameBytesPair {
	if m != nil {
		return m.Value
	}
	return nil
}

type CoprocessorServiceRequest struct {
	Region               *RegionSpecifier        `protobuf:"bytes,1,req,name=region" json:"region,omitempty"`
	Call                 *CoprocessorServiceCall `protobuf:"bytes,2,req,name=call" json:"call,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *CoprocessorServiceRequest) Reset()         { *m = CoprocessorServiceRequest{} }
func (m *CoprocessorServiceRequest) String() string { return proto.CompactTextString(m) }
func (*CoprocessorServiceRequest) ProtoMessage()    {}
func (*CoprocessorServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e3cf1cf2c8ad561, []int{24}
}

func (m *CoprocessorServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoprocessorServiceRequest.Unmarshal(m, b)
}
func (m *CoprocessorServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoprocessorServiceRequest.Marshal(b, m, deterministic)
}
func (m *CoprocessorServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoprocessorServiceRequest.Merge(m, src)
}
func (m *CoprocessorServiceRequest) XXX_Size() int {
	return xxx_messageInfo_CoprocessorServiceRequest.Size(m)
}
func (m *CoprocessorServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CoprocessorServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CoprocessorServiceRequest proto.InternalMessageInfo

func (m *CoprocessorServiceRequest) GetRegion() *RegionSpecifier {
	if m != nil {
		return m.Region
	}
	return nil
}

func (m *CoprocessorServiceRequest) GetCall() *CoprocessorServiceCall {
	if m != nil {
		return m.Call
	}
	return nil
}

type CoprocessorServiceResponse struct {
	Region               *RegionSpecifier `protobuf:"bytes,1,req,name=region" json:"region,omitempty"`
	Value                *NameBytesPair   `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CoprocessorServiceResponse) Reset()         { *m = CoprocessorServiceResponse{} }
func (m *CoprocessorServiceResponse) String() string { return proto.CompactTextString(m) }
func (*CoprocessorServiceResponse) ProtoMessage()    {}
func (*CoprocessorServiceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e3cf1cf2c8ad561, []int{25}
}

func (m *CoprocessorServiceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoprocessorServiceResponse.Unmarshal(m, b)
}
func (m *CoprocessorServiceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoprocessorServiceResponse.Marshal(b, m, deterministic)
}
func (m *CoprocessorServiceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoprocessorServiceResponse.Merge(m, src)
}
func (m *CoprocessorServiceResponse) XXX_Size() int {
	return xxx_messageInfo_CoprocessorServiceResponse.Size(m)
}
func (m *CoprocessorServiceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CoprocessorServiceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CoprocessorServiceResponse proto.InternalMessageInfo

func (m *CoprocessorServiceResponse) GetRegion() *RegionSpecifier {
	if m != nil {
		return m.Region
	}
	return nil
}

func (m *CoprocessorServiceResponse) GetValue() *NameBytesPair {
	if m != nil {
		return m.Value
	}
	return nil
}

// Either a Get or a Mutation
type Action struct {
	// If part of a multi action, useful aligning
	// result with what was originally submitted.
	Index                *uint32                 `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
	Mutation             *MutationProto          `protobuf:"bytes,2,opt,name=mutation" json:"mutation,omitempty"`
	Get                  *Get                    `protobuf:"bytes,3,opt,name=get" json:"get,omitempty"`
	ServiceCall          *CoprocessorServiceCall `protobuf:"bytes,4,opt,name=service_call,json=serviceCall" json:"service_call,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Action) Reset()         { *m = Action{} }
func (m *Action) String() string { return proto.CompactTextString(m) }
func (*Action) ProtoMessage()    {}
func (*Action) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e3cf1cf2c8ad561, []int{26}
}

func (m *Action) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Action.Unmarshal(m, b)
}
func (m *Action) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Action.Marshal(b, m, deterministic)
}
func (m *Action) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Action.Merge(m, src)
}
func (m *Action) XXX_Size() int {
	return xxx_messageInfo_Action.Size(m)
}
func (m *Action) XXX_DiscardUnknown() {
	xxx_messageInfo_Action.DiscardUnknown(m)
}

var xxx_messageInfo_Action proto.InternalMessageInfo

func (m *Action) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *Action) GetMutation() *MutationProto {
	if m != nil {
		return m.Mutation
	}
	return nil
}

func (m *Action) GetGet() *Get {
	if m != nil {
		return m.Get
	}
	return nil
}

func (m *Action) GetServiceCall() *CoprocessorServiceCall {
	if m != nil {
		return m.ServiceCall
	}
	return nil
}

//*
// Actions to run against a Region.
type RegionAction struct {
	Region *RegionSpecifier `protobuf:"bytes,1,req,name=region" json:"region,omitempty"`
	// When set, run mutations as atomic unit.
	Atomic               *bool     `protobuf:"varint,2,opt,name=atomic" json:"atomic,omitempty"`
	Action               []*Action `protobuf:"bytes,3,rep,name=action" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *RegionAction) Reset()         { *m = RegionAction{} }
func (m *RegionAction) String() string { return proto.CompactTextString(m) }
func (*RegionAction) ProtoMessage()    {}
func (*RegionAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e3cf1cf2c8ad561, []int{27}
}

func (m *RegionAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegionAction.Unmarshal(m, b)
}
func (m *RegionAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegionAction.Marshal(b, m, deterministic)
}
func (m *RegionAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegionAction.Merge(m, src)
}
func (m *RegionAction) XXX_Size() int {
	return xxx_messageInfo_RegionAction.Size(m)
}
func (m *RegionAction) XXX_DiscardUnknown() {
	xxx_messageInfo_RegionAction.DiscardUnknown(m)
}

var xxx_messageInfo_RegionAction proto.InternalMessageInfo

func (m *RegionAction) GetRegion() *RegionSpecifier {
	if m != nil {
		return m.Region
	}
	return nil
}

func (m *RegionAction) GetAtomic() bool {
	if m != nil && m.Atomic != nil {
		return *m.Atomic
	}
	return false
}

func (m *RegionAction) GetAction() []*Action {
	if m != nil {
		return m.Action
	}
	return nil
}

//
// Statistics about the current load on the region
type RegionLoadStats struct {
	// Percent load on the memstore. Guaranteed to be positive, between 0 and 100.
	MemStoreLoad *int32 `protobuf:"varint,1,opt,name=memStoreLoad,def=0" json:"memStoreLoad,omitempty"`
	// Percent JVM heap occupancy. Guaranteed to be positive, between 0 and 100.
	// We can move this to "ServerLoadStats" should we develop them.
	HeapOccupancy *int32 `protobuf:"varint,2,opt,name=heapOccupancy,def=0" json:"heapOccupancy,omitempty"`
	// Compaction pressure. Guaranteed to be positive, between 0 and 100.
	CompactionPressure   *int32   `protobuf:"varint,3,opt,name=compactionPressure,def=0" json:"compactionPressure,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegionLoadStats) Reset()         { *m = RegionLoadStats{} }
func (m *RegionLoadStats) String() string { return proto.CompactTextString(m) }
func (*RegionLoadStats) ProtoMessage()    {}
func (*RegionLoadStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e3cf1cf2c8ad561, []int{28}
}

func (m *RegionLoadStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegionLoadStats.Unmarshal(m, b)
}
func (m *RegionLoadStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegionLoadStats.Marshal(b, m, deterministic)
}
func (m *RegionLoadStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegionLoadStats.Merge(m, src)
}
func (m *RegionLoadStats) XXX_Size() int {
	return xxx_messageInfo_RegionLoadStats.Size(m)
}
func (m *RegionLoadStats) XXX_DiscardUnknown() {
	xxx_messageInfo_RegionLoadStats.DiscardUnknown(m)
}

var xxx_messageInfo_RegionLoadStats proto.InternalMessageInfo

const Default_RegionLoadStats_MemStoreLoad int32 = 0
const Default_RegionLoadStats_HeapOccupancy int32 = 0
const Default_RegionLoadStats_CompactionPressure int32 = 0

func (m *RegionLoadStats) GetMemStoreLoad() int32 {
	if m != nil && m.MemStoreLoad != nil {
		return *m.MemStoreLoad
	}
	return Default_RegionLoadStats_MemStoreLoad
}

func (m *RegionLoadStats) GetHeapOccupancy() int32 {
	if m != nil && m.HeapOccupancy != nil {
		return *m.HeapOccupancy
	}
	return Default_RegionLoadStats_HeapOccupancy
}

func (m *RegionLoadStats) GetCompactionPressure() int32 {
	if m != nil && m.CompactionPressure != nil {
		return *m.CompactionPressure
	}
	return Default_RegionLoadStats_CompactionPressure
}

type MultiRegionLoadStats struct {
	Region               []*RegionSpecifier `protobuf:"bytes,1,rep,name=region" json:"region,omitempty"`
	Stat                 []*RegionLoadStats `protobuf:"bytes,2,rep,name=stat" json:"stat,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *MultiRegionLoadStats) Reset()         { *m = MultiRegionLoadStats{} }
func (m *MultiRegionLoadStats) String() string { return proto.CompactTextString(m) }
func (*MultiRegionLoadStats) ProtoMessage()    {}
func (*MultiRegionLoadStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e3cf1cf2c8ad561, []int{29}
}

func (m *MultiRegionLoadStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultiRegionLoadStats.Unmarshal(m, b)
}
func (m *MultiRegionLoadStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultiRegionLoadStats.Marshal(b, m, deterministic)
}
func (m *MultiRegionLoadStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultiRegionLoadStats.Merge(m, src)
}
func (m *MultiRegionLoadStats) XXX_Size() int {
	return xxx_messageInfo_MultiRegionLoadStats.Size(m)
}
func (m *MultiRegionLoadStats) XXX_DiscardUnknown() {
	xxx_messageInfo_MultiRegionLoadStats.DiscardUnknown(m)
}

var xxx_messageInfo_MultiRegionLoadStats proto.InternalMessageInfo

func (m *MultiRegionLoadStats) GetRegion() []*RegionSpecifier {
	if m != nil {
		return m.Region
	}
	return nil
}

func (m *MultiRegionLoadStats) GetStat() []*RegionLoadStats {
	if m != nil {
		return m.Stat
	}
	return nil
}

//*
// Either a Result or an Exception NameBytesPair (keyed by
// exception name whose value is the exception stringified)
// or maybe empty if no result and no exception.
type ResultOrException struct {
	// If part of a multi call, save original index of the list of all
	// passed so can align this response w/ original request.
	Index     *uint32        `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
	Result    *Result        `protobuf:"bytes,2,opt,name=result" json:"result,omitempty"`
	Exception *NameBytesPair `protobuf:"bytes,3,opt,name=exception" json:"exception,omitempty"`
	// result if this was a coprocessor service call
	ServiceResult *CoprocessorServiceResult `protobuf:"bytes,4,opt,name=service_result,json=serviceResult" json:"service_result,omitempty"`
	// current load on the region
	LoadStats            *RegionLoadStats `protobuf:"bytes,5,opt,name=loadStats" json:"loadStats,omitempty"` // Deprecated: Do not use.
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ResultOrException) Reset()         { *m = ResultOrException{} }
func (m *ResultOrException) String() string { return proto.CompactTextString(m) }
func (*ResultOrException) ProtoMessage()    {}
func (*ResultOrException) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e3cf1cf2c8ad561, []int{30}
}

func (m *ResultOrException) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResultOrException.Unmarshal(m, b)
}
func (m *ResultOrException) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResultOrException.Marshal(b, m, deterministic)
}
func (m *ResultOrException) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResultOrException.Merge(m, src)
}
func (m *ResultOrException) XXX_Size() int {
	return xxx_messageInfo_ResultOrException.Size(m)
}
func (m *ResultOrException) XXX_DiscardUnknown() {
	xxx_messageInfo_ResultOrException.DiscardUnknown(m)
}

var xxx_messageInfo_ResultOrException proto.InternalMessageInfo

func (m *ResultOrException) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *ResultOrException) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *ResultOrException) GetException() *NameBytesPair {
	if m != nil {
		return m.Exception
	}
	return nil
}

func (m *ResultOrException) GetServiceResult() *CoprocessorServiceResult {
	if m != nil {
		return m.ServiceResult
	}
	return nil
}

// Deprecated: Do not use.
func (m *ResultOrException) GetLoadStats() *RegionLoadStats {
	if m != nil {
		return m.LoadStats
	}
	return nil
}

//*
// The result of a RegionAction.
type RegionActionResult struct {
	ResultOrException []*ResultOrException `protobuf:"bytes,1,rep,name=resultOrException" json:"resultOrException,omitempty"`
	// If the operation failed globally for this region, this exception is set
	Exception            *NameBytesPair `protobuf:"bytes,2,opt,name=exception" json:"exception,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *RegionActionResult) Reset()         { *m = RegionActionResult{} }
func (m *RegionActionResult) String() string { return proto.CompactTextString(m) }
func (*RegionActionResult) ProtoMessage()    {}
func (*RegionActionResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e3cf1cf2c8ad561, []int{31}
}

func (m *RegionActionResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegionActionResult.Unmarshal(m, b)
}
func (m *RegionActionResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegionActionResult.Marshal(b, m, deterministic)
}
func (m *RegionActionResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegionActionResult.Merge(m, src)
}
func (m *RegionActionResult) XXX_Size() int {
	return xxx_messageInfo_RegionActionResult.Size(m)
}
func (m *RegionActionResult) XXX_DiscardUnknown() {
	xxx_messageInfo_RegionActionResult.DiscardUnknown(m)
}

var xxx_messageInfo_RegionActionResult proto.InternalMessageInfo

func (m *RegionActionResult) GetResultOrException() []*ResultOrException {
	if m != nil {
		return m.ResultOrException
	}
	return nil
}

func (m *RegionActionResult) GetException() *NameBytesPair {
	if m != nil {
		return m.Exception
	}
	return nil
}

//*
// Execute a list of actions on a given region in order.
// Nothing prevents a request to contains a set of RegionAction on the same region.
// For this reason, the matching between the MultiRequest and the MultiResponse is not
//  done by the region specifier but by keeping the order of the RegionActionResult vs.
//  the order of the RegionAction.
type MultiRequest struct {
	RegionAction         []*RegionAction `protobuf:"bytes,1,rep,name=regionAction" json:"regionAction,omitempty"`
	NonceGroup           *uint64         `protobuf:"varint,2,opt,name=nonceGroup" json:"nonceGroup,omitempty"`
	Condition            *Condition      `protobuf:"bytes,3,opt,name=condition" json:"condition,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *MultiRequest) Reset()         { *m = MultiRequest{} }
func (m *MultiRequest) String() string { return proto.CompactTextString(m) }
func (*MultiRequest) ProtoMessage()    {}
func (*MultiRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e3cf1cf2c8ad561, []int{32}
}

func (m *MultiRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultiRequest.Unmarshal(m, b)
}
func (m *MultiRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultiRequest.Marshal(b, m, deterministic)
}
func (m *MultiRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultiRequest.Merge(m, src)
}
func (m *MultiRequest) XXX_Size() int {
	return xxx_messageInfo_MultiRequest.Size(m)
}
func (m *MultiRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MultiRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MultiRequest proto.InternalMessageInfo

func (m *MultiRequest) GetRegionAction() []*RegionAction {
	if m != nil {
		return m.RegionAction
	}
	return nil
}

func (m *MultiRequest) GetNonceGroup() uint64 {
	if m != nil && m.NonceGroup != nil {
		return *m.NonceGroup
	}
	return 0
}

func (m *MultiRequest) GetCondition() *Condition {
	if m != nil {
		return m.Condition
	}
	return nil
}

type MultiResponse struct {
	RegionActionResult []*RegionActionResult `protobuf:"bytes,1,rep,name=regionActionResult" json:"regionActionResult,omitempty"`
	// used for mutate to indicate processed only
	Processed            *bool                 `protobuf:"varint,2,opt,name=processed" json:"processed,omitempty"`
	RegionStatistics     *MultiRegionLoadStats `protobuf:"bytes,3,opt,name=regionStatistics" json:"regionStatistics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *MultiResponse) Reset()         { *m = MultiResponse{} }
func (m *MultiResponse) String() string { return proto.CompactTextString(m) }
func (*MultiResponse) ProtoMessage()    {}
func (*MultiResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e3cf1cf2c8ad561, []int{33}
}

func (m *MultiResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultiResponse.Unmarshal(m, b)
}
func (m *MultiResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultiResponse.Marshal(b, m, deterministic)
}
func (m *MultiResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultiResponse.Merge(m, src)
}
func (m *MultiResponse) XXX_Size() int {
	return xxx_messageInfo_MultiResponse.Size(m)
}
func (m *MultiResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MultiResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MultiResponse proto.InternalMessageInfo

func (m *MultiResponse) GetRegionActionResult() []*RegionActionResult {
	if m != nil {
		return m.RegionActionResult
	}
	return nil
}

func (m *MultiResponse) GetProcessed() bool {
	if m != nil && m.Processed != nil {
		return *m.Processed
	}
	return false
}

func (m *MultiResponse) GetRegionStatistics() *MultiRegionLoadStats {
	if m != nil {
		return m.RegionStatistics
	}
	return nil
}

func init() {
	proto.RegisterEnum("hbase.pb.Consistency", Consistency_name, Consistency_value)
	proto.RegisterEnum("hbase.pb.MutationProto_Durability", MutationProto_Durability_name, MutationProto_Durability_value)
	proto.RegisterEnum("hbase.pb.MutationProto_MutationType", MutationProto_MutationType_name, MutationProto_MutationType_value)
	proto.RegisterEnum("hbase.pb.MutationProto_DeleteType", MutationProto_DeleteType_name, MutationProto_DeleteType_value)
	proto.RegisterEnum("hbase.pb.Scan_ReadType", Scan_ReadType_name, Scan_ReadType_value)
	proto.RegisterType((*Authorizations)(nil), "hbase.pb.Authorizations")
	proto.RegisterType((*CellVisibility)(nil), "hbase.pb.CellVisibility")
	proto.RegisterType((*Column)(nil), "hbase.pb.Column")
	proto.RegisterType((*Get)(nil), "hbase.pb.Get")
	proto.RegisterType((*Result)(nil), "hbase.pb.Result")
	proto.RegisterType((*GetRequest)(nil), "hbase.pb.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "hbase.pb.GetResponse")
	proto.RegisterType((*Condition)(nil), "hbase.pb.Condition")
	proto.RegisterType((*MutationProto)(nil), "hbase.pb.MutationProto")
	proto.RegisterType((*MutationProto_ColumnValue)(nil), "hbase.pb.MutationProto.ColumnValue")
	proto.RegisterType((*MutationProto_ColumnValue_QualifierValue)(nil), "hbase.pb.MutationProto.ColumnValue.QualifierValue")
	proto.RegisterType((*MutateRequest)(nil), "hbase.pb.MutateRequest")
	proto.RegisterType((*MutateResponse)(nil), "hbase.pb.MutateResponse")
	proto.RegisterType((*Scan)(nil), "hbase.pb.Scan")
	proto.RegisterType((*ScanRequest)(nil), "hbase.pb.ScanRequest")
	proto.RegisterType((*Cursor)(nil), "hbase.pb.Cursor")
	proto.RegisterType((*ScanResponse)(nil), "hbase.pb.ScanResponse")
	proto.RegisterType((*BulkLoadHFileRequest)(nil), "hbase.pb.BulkLoadHFileRequest")
	proto.RegisterType((*BulkLoadHFileRequest_FamilyPath)(nil), "hbase.pb.BulkLoadHFileRequest.FamilyPath")
	proto.RegisterType((*BulkLoadHFileResponse)(nil), "hbase.pb.BulkLoadHFileResponse")
	proto.RegisterType((*DelegationToken)(nil), "hbase.pb.DelegationToken")
	proto.RegisterType((*PrepareBulkLoadRequest)(nil), "hbase.pb.PrepareBulkLoadRequest")
	proto.RegisterType((*PrepareBulkLoadResponse)(nil), "hbase.pb.PrepareBulkLoadResponse")
	proto.RegisterType((*CleanupBulkLoadRequest)(nil), "hbase.pb.CleanupBulkLoadRequest")
	proto.RegisterType((*CleanupBulkLoadResponse)(nil), "hbase.pb.CleanupBulkLoadResponse")
	proto.RegisterType((*CoprocessorServiceCall)(nil), "hbase.pb.CoprocessorServiceCall")
	proto.RegisterType((*CoprocessorServiceResult)(nil), "hbase.pb.CoprocessorServiceResult")
	proto.RegisterType((*CoprocessorServiceRequest)(nil), "hbase.pb.CoprocessorServiceRequest")
	proto.RegisterType((*CoprocessorServiceResponse)(nil), "hbase.pb.CoprocessorServiceResponse")
	proto.RegisterType((*Action)(nil), "hbase.pb.Action")
	proto.RegisterType((*RegionAction)(nil), "hbase.pb.RegionAction")
	proto.RegisterType((*RegionLoadStats)(nil), "hbase.pb.RegionLoadStats")
	proto.RegisterType((*MultiRegionLoadStats)(nil), "hbase.pb.MultiRegionLoadStats")
	proto.RegisterType((*ResultOrException)(nil), "hbase.pb.ResultOrException")
	proto.RegisterType((*RegionActionResult)(nil), "hbase.pb.RegionActionResult")
	proto.RegisterType((*MultiRequest)(nil), "hbase.pb.MultiRequest")
	proto.RegisterType((*MultiResponse)(nil), "hbase.pb.MultiResponse")
}

func init() { proto.RegisterFile("Client.proto", fileDescriptor_6e3cf1cf2c8ad561) }

var fileDescriptor_6e3cf1cf2c8ad561 = []byte{
	// 3009 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x3a, 0xcb, 0x72, 0x1b, 0xc7,
	0xb5, 0x1e, 0x80, 0x00, 0x81, 0x33, 0x00, 0x09, 0xb5, 0xf8, 0x18, 0xd1, 0xbe, 0x12, 0x35, 0x96,
	0x6d, 0xda, 0xd7, 0xa6, 0x25, 0xda, 0xba, 0x57, 0x45, 0xdf, 0xf2, 0x2d, 0x12, 0x02, 0x25, 0x3a,
	0x7c, 0xa5, 0x41, 0xc9, 0x76, 0x65, 0x31, 0x69, 0xce, 0x34, 0xc8, 0x89, 0x06, 0x33, 0xd0, 0x74,
	0x43, 0x24, 0x9d, 0xaa, 0x64, 0x91, 0x2c, 0xbc, 0x4e, 0xa5, 0xbc, 0x4b, 0x55, 0x2a, 0xbf, 0x90,
	0xaa, 0x54, 0xa5, 0xb2, 0xc9, 0x2e, 0x8b, 0xfc, 0x40, 0x36, 0xf9, 0x85, 0x2c, 0x93, 0x6d, 0xaa,
	0x1f, 0xf3, 0xc0, 0x80, 0xa0, 0x28, 0xb9, 0xb2, 0xe2, 0xf4, 0x79, 0x74, 0x9f, 0x3e, 0xef, 0xd3,
	0x04, 0x34, 0xda, 0x81, 0x4f, 0x43, 0xbe, 0x3a, 0x88, 0x23, 0x1e, 0xa1, 0xda, 0xc9, 0x11, 0x61,
	0x74, 0x75, 0x70, 0xb4, 0x64, 0x3e, 0xde, 0x94, 0x5f, 0x02, 0xbc, 0xd4, 0xd8, 0xf2, 0x03, 0x4e,
	0x63, 0xbd, 0x82, 0x36, 0x0d, 0x02, 0xfd, 0xdd, 0x6a, 0x47, 0xfd, 0x01, 0x89, 0x09, 0x8f, 0x12,
	0xec, 0xec, 0x2e, 0x19, 0x60, 0xea, 0x0d, 0x5d, 0xcd, 0x6c, 0xbf, 0x0b, 0x33, 0x1b, 0x43, 0x7e,
	0x12, 0xc5, 0xfe, 0x37, 0x84, 0xfb, 0x51, 0xc8, 0xd0, 0x1c, 0x54, 0x02, 0x72, 0x44, 0x03, 0xcb,
	0x58, 0x2e, 0xaf, 0xd4, 0xb1, 0x5a, 0xd8, 0x77, 0x61, 0x46, 0x6c, 0xfc, 0xd4, 0x67, 0xfe, 0x91,
	0x1f, 0xf8, 0xfc, 0x1c, 0xdd, 0x04, 0xa0, 0x67, 0x83, 0x98, 0x32, 0xe6, 0x47, 0xa1, 0x65, 0x2c,
	0x97, 0x56, 0xea, 0x38, 0x07, 0xb1, 0x3f, 0x87, 0x6a, 0x3b, 0x0a, 0x86, 0xfd, 0x10, 0x2d, 0x40,
	0xb5, 0x47, 0xfa, 0x7e, 0x70, 0x2e, 0xa9, 0x1a, 0x58, 0xaf, 0xd0, 0x5b, 0x50, 0x7f, 0x3e, 0x24,
	0x81, 0xdf, 0xf3, 0x69, 0x6c, 0x95, 0x96, 0xcb, 0x2b, 0x0d, 0x9c, 0x01, 0xec, 0xef, 0x2a, 0x50,
	0x7e, 0x44, 0x39, 0x6a, 0x41, 0x39, 0x8e, 0x4e, 0x35, 0xab, 0xf8, 0x44, 0x2b, 0x50, 0x75, 0xe5,
	0xce, 0x92, 0xc9, 0x5c, 0x6b, 0xad, 0x26, 0x8a, 0x59, 0x55, 0x27, 0x62, 0x8d, 0x47, 0xf7, 0xa1,
	0x4e, 0x38, 0x8f, 0xfd, 0xa3, 0x21, 0xa7, 0x56, 0x59, 0x12, 0x2f, 0x66, 0xc4, 0x7b, 0xa4, 0x4f,
	0x37, 0xcf, 0x39, 0x65, 0x07, 0xc4, 0x8f, 0x71, 0x46, 0x29, 0x0e, 0xe8, 0x49, 0x9d, 0x5a, 0x53,
	0xcb, 0xc6, 0xe8, 0x01, 0x4a, 0xd7, 0x58, 0xe3, 0xd1, 0x1a, 0x00, 0xf7, 0xfb, 0xd4, 0x89, 0x49,
	0x78, 0x4c, 0xad, 0x8a, 0xa4, 0xbe, 0x9e, 0x51, 0x1f, 0xfa, 0x7d, 0x8a, 0x05, 0x0a, 0xd7, 0x79,
	0xf2, 0x89, 0xee, 0x40, 0xa3, 0x4f, 0xce, 0x9c, 0x17, 0x34, 0x16, 0x7a, 0x62, 0x56, 0x75, 0xd9,
	0x58, 0x69, 0xae, 0x1b, 0xf7, 0xb0, 0xd9, 0x27, 0x67, 0x4f, 0x35, 0x14, 0xbd, 0x07, 0x0d, 0x97,
	0xb8, 0x27, 0xd4, 0x39, 0x0a, 0x22, 0xf7, 0x19, 0xb3, 0xa6, 0x97, 0x8d, 0x95, 0xda, 0xfa, 0x14,
	0x8f, 0x87, 0x14, 0x9b, 0x12, 0xb3, 0x29, 0x11, 0xe8, 0x16, 0x98, 0x8c, 0x47, 0x31, 0x75, 0x02,
	0xbf, 0xef, 0x73, 0xab, 0x26, 0x76, 0xc3, 0x20, 0x41, 0x3b, 0x02, 0x82, 0x6e, 0x43, 0x43, 0x11,
	0x44, 0xbd, 0x1e, 0xa3, 0xdc, 0xaa, 0x4b, 0x0a, 0xc5, 0xb4, 0x2f, 0x41, 0xe8, 0x43, 0x98, 0xa1,
	0x67, 0x3e, 0xe3, 0x34, 0x74, 0xa9, 0x13, 0x85, 0xc1, 0xb9, 0x05, 0xf2, 0xb8, 0x4a, 0x8f, 0x04,
	0x8c, 0xe2, 0x66, 0x8a, 0xdc, 0x0f, 0x83, 0x73, 0xf4, 0x09, 0x20, 0x37, 0x88, 0x18, 0x65, 0xdc,
	0x89, 0xa3, 0x53, 0xe7, 0x88, 0xf6, 0xa2, 0x98, 0x5a, 0x66, 0x9e, 0xa3, 0xa5, 0x09, 0x70, 0x74,
	0xba, 0x29, 0xd1, 0xe8, 0xff, 0xc1, 0x74, 0xa3, 0x90, 0xa9, 0x7d, 0xce, 0xad, 0xc6, 0xb2, 0xb1,
	0x32, 0xb3, 0x36, 0x9f, 0xb7, 0x5c, 0x8a, 0x5c, 0xaf, 0x76, 0x0f, 0xf1, 0xfe, 0xde, 0x23, 0x9c,
	0xe7, 0x40, 0x6d, 0x68, 0xba, 0x3d, 0x27, 0xa7, 0xed, 0xa6, 0xb4, 0xe7, 0xad, 0xa2, 0xf1, 0xb7,
	0xa4, 0x73, 0x65, 0x9a, 0x37, 0xdd, 0x5e, 0xba, 0x40, 0x9b, 0x70, 0x33, 0x88, 0x88, 0xe7, 0x28,
	0xff, 0x70, 0xa4, 0x23, 0xfa, 0x94, 0x39, 0x51, 0xe8, 0x78, 0xb4, 0x4f, 0x42, 0xcf, 0x9a, 0x11,
	0xd7, 0xc0, 0x4b, 0x82, 0x2a, 0xb7, 0x9f, 0x4f, 0xd9, 0x7e, 0xf8, 0x50, 0x52, 0xd8, 0x7f, 0x30,
	0xa0, 0x8a, 0x29, 0x1b, 0x06, 0x1c, 0xd9, 0x30, 0xe5, 0xd2, 0x40, 0x85, 0x8a, 0xb9, 0x36, 0x93,
	0x13, 0x85, 0x06, 0x01, 0x96, 0x38, 0xb4, 0x06, 0xf3, 0x84, 0xb1, 0xc8, 0xf5, 0x09, 0xa7, 0x9e,
	0x23, 0x40, 0x8e, 0x1b, 0x0d, 0x43, 0x6e, 0x95, 0x96, 0x8d, 0x95, 0x0a, 0xbe, 0x9e, 0x21, 0x05,
	0x53, 0x5b, 0xa0, 0x44, 0xc4, 0x48, 0x95, 0x33, 0xab, 0x2c, 0xc5, 0xd1, 0x2b, 0xf4, 0x26, 0x54,
	0x18, 0x27, 0x01, 0x95, 0x7e, 0x99, 0x2a, 0x5b, 0xc1, 0xd0, 0x2d, 0x98, 0x1e, 0x90, 0x98, 0xfb,
	0x24, 0x90, 0x8e, 0x98, 0xa2, 0x13, 0xa8, 0xfd, 0x63, 0x80, 0x47, 0x94, 0x63, 0xfa, 0x7c, 0x48,
	0x19, 0x47, 0xf7, 0xa0, 0x1a, 0xd3, 0xe3, 0x24, 0x76, 0xcd, 0xb5, 0x1b, 0x99, 0xf4, 0x58, 0xc2,
	0xbb, 0x03, 0xea, 0xca, 0x50, 0xc4, 0x9a, 0x10, 0xdd, 0x82, 0xf2, 0x31, 0x15, 0x82, 0x0b, 0xfa,
	0x66, 0x46, 0x2f, 0x76, 0x15, 0x18, 0xfb, 0x7f, 0xc1, 0x94, 0x27, 0xb0, 0x41, 0x14, 0x32, 0x19,
	0x47, 0xb1, 0x54, 0x94, 0x65, 0x14, 0xe3, 0x48, 0x29, 0x10, 0x6b, 0xbc, 0xfd, 0x2f, 0x03, 0xea,
	0xed, 0x28, 0xf4, 0x7c, 0x91, 0x83, 0x2e, 0x08, 0xf9, 0x2c, 0x85, 0x94, 0x26, 0xa7, 0x90, 0xb2,
	0x44, 0x65, 0x00, 0xf4, 0x00, 0x1a, 0xae, 0xcc, 0x80, 0xd4, 0xe1, 0xe7, 0x03, 0xa1, 0xb5, 0x52,
	0xd1, 0xe9, 0x24, 0xf6, 0xf0, 0x7c, 0x20, 0xfc, 0x24, 0x5b, 0xa0, 0x4f, 0x01, 0xdc, 0x34, 0x77,
	0x5a, 0x15, 0x79, 0xe1, 0xb9, 0x22, 0x9f, 0xc0, 0xe1, 0x1c, 0x5d, 0x21, 0x1b, 0x54, 0xaf, 0x92,
	0x0d, 0xec, 0xdf, 0xd5, 0xa0, 0xb9, 0x3b, 0xe4, 0x32, 0xf9, 0x1e, 0xc8, 0x34, 0x9f, 0xde, 0xde,
	0x48, 0x6e, 0xdf, 0x01, 0xb3, 0x2f, 0x48, 0xf4, 0x35, 0x4a, 0x32, 0x76, 0xee, 0x64, 0x1b, 0x8f,
	0xf0, 0xa7, 0x2b, 0x79, 0x2b, 0x50, 0x8c, 0xf2, 0x52, 0x5b, 0x42, 0x1d, 0xd2, 0xef, 0x5f, 0x90,
	0x60, 0x98, 0x24, 0xc4, 0xb7, 0x27, 0xed, 0xa3, 0xdc, 0xff, 0xa9, 0x20, 0x15, 0xca, 0x49, 0x17,
	0x42, 0xe9, 0x42, 0x7e, 0xc6, 0x49, 0x7f, 0x20, 0x3d, 0x71, 0x0a, 0x67, 0x80, 0xd1, 0x9c, 0x5b,
	0xb9, 0x72, 0xce, 0xdd, 0x07, 0xf0, 0x86, 0x31, 0x51, 0xc5, 0x45, 0xea, 0x6e, 0x66, 0xcd, 0x9e,
	0x24, 0xda, 0xc3, 0x94, 0x72, 0xdd, 0x7c, 0xd2, 0xed, 0x38, 0x0f, 0x3b, 0x5b, 0x1b, 0x4f, 0x76,
	0x0e, 0x71, 0x6e, 0x8b, 0x82, 0x31, 0xa6, 0xaf, 0x94, 0x9a, 0x27, 0xc6, 0x6a, 0x6d, 0x72, 0xac,
	0xce, 0x41, 0x25, 0x8c, 0x42, 0x97, 0xca, 0xbc, 0x3a, 0x85, 0xd5, 0x62, 0xe9, 0xcf, 0x25, 0x30,
	0x73, 0x0a, 0x9c, 0x58, 0x03, 0x7f, 0x04, 0xb3, 0xa9, 0xbf, 0x6a, 0xb3, 0xa8, 0xa2, 0xb6, 0x76,
	0x05, 0xb3, 0xac, 0xfe, 0x30, 0x61, 0x55, 0x56, 0x9a, 0x79, 0x3e, 0xb2, 0x5e, 0xfa, 0x93, 0x01,
	0x33, 0xa3, 0x24, 0xa3, 0x01, 0xa3, 0x5c, 0x2c, 0x17, 0x30, 0x73, 0x50, 0x49, 0x64, 0x10, 0x18,
	0xb5, 0x18, 0xb5, 0x77, 0xb9, 0x68, 0xef, 0x36, 0x98, 0x1e, 0x0d, 0x28, 0x4f, 0x63, 0xec, 0x72,
	0xcb, 0x49, 0x52, 0xe5, 0x9a, 0x5e, 0xfa, 0x8d, 0x10, 0x4c, 0x71, 0x72, 0xcc, 0x64, 0xe2, 0x6a,
	0x60, 0xf9, 0x6d, 0x7f, 0x09, 0x90, 0xd9, 0x19, 0xcd, 0x42, 0xde, 0xd2, 0xad, 0x37, 0x50, 0x03,
	0x6a, 0xdd, 0x1f, 0x6c, 0x1f, 0x38, 0x5f, 0x6e, 0xec, 0xb4, 0x0c, 0xd4, 0x84, 0xfa, 0x46, 0xf7,
	0xeb, 0xbd, 0xb6, 0x5c, 0x96, 0x24, 0x32, 0x59, 0x95, 0x05, 0x72, 0x2b, 0x5d, 0x4e, 0xd9, 0x9f,
	0x43, 0x23, 0x1f, 0x23, 0x08, 0xa0, 0xba, 0x71, 0x70, 0xd0, 0xd9, 0x7b, 0xd8, 0x7a, 0x43, 0x90,
	0x6e, 0xef, 0xb5, 0x71, 0x67, 0xb7, 0xb3, 0x77, 0xd8, 0x32, 0xd0, 0x34, 0x94, 0x0f, 0x9e, 0x1c,
	0xb6, 0x4a, 0x82, 0xe6, 0x61, 0x67, 0xa7, 0x73, 0xd8, 0x69, 0x95, 0xed, 0x01, 0x40, 0x76, 0x0d,
	0xb4, 0x00, 0x48, 0x61, 0x9c, 0xfd, 0xbd, 0x8e, 0xf3, 0xb4, 0x83, 0xbb, 0xdb, 0xfb, 0x7b, 0xad,
	0x37, 0xd0, 0x5b, 0x60, 0x69, 0xf8, 0xee, 0x93, 0x9d, 0xc3, 0xed, 0x83, 0x9d, 0x14, 0xd9, 0x6d,
	0x19, 0xe8, 0x1a, 0x34, 0x35, 0x76, 0x6b, 0x63, 0x77, 0x7b, 0xe7, 0xeb, 0x56, 0x09, 0xdd, 0x80,
	0xf9, 0x11, 0x50, 0xba, 0x57, 0xd9, 0xfe, 0xab, 0xa1, 0x93, 0x04, 0xfd, 0x1e, 0xd9, 0xfb, 0x13,
	0xa8, 0xf5, 0xf5, 0xb5, 0x75, 0x0a, 0x5f, 0x9c, 0x60, 0x25, 0x9c, 0x12, 0xa2, 0x7b, 0x50, 0x77,
	0x93, 0xbc, 0x2c, 0x6d, 0x3f, 0x12, 0x44, 0x69, 0xca, 0xc6, 0x19, 0x95, 0x68, 0x48, 0x64, 0x0c,
	0x38, 0xc7, 0x71, 0x34, 0x4c, 0x12, 0x04, 0x48, 0xd0, 0x23, 0x01, 0xb1, 0xbf, 0x82, 0x99, 0xe4,
	0x32, 0xaf, 0x5a, 0x28, 0x84, 0x2f, 0x0e, 0xe2, 0xc8, 0xa5, 0x8c, 0x51, 0x4f, 0x7a, 0x69, 0x0d,
	0x67, 0x00, 0xfb, 0xef, 0x35, 0x98, 0xea, 0xba, 0x24, 0xcc, 0xb5, 0x88, 0xc6, 0xab, 0xb4, 0x88,
	0xa5, 0x2b, 0xa7, 0xab, 0x37, 0xa1, 0xce, 0x38, 0x89, 0x65, 0x07, 0x24, 0xf5, 0xd2, 0xc0, 0x35,
	0x09, 0xc0, 0xd1, 0x29, 0xba, 0x01, 0x35, 0xc6, 0xa3, 0x81, 0xc4, 0x4d, 0x49, 0xdc, 0xb4, 0x58,
	0x63, 0xd5, 0xbb, 0xea, 0xd6, 0xb2, 0xf2, 0x4a, 0xad, 0x65, 0xf5, 0xb5, 0x5a, 0xcb, 0xe9, 0x2b,
	0xb5, 0x96, 0xb5, 0x49, 0xad, 0xe5, 0x7f, 0x01, 0x1c, 0x11, 0xee, 0x9e, 0x38, 0xcc, 0xff, 0x86,
	0xea, 0xbe, 0xb1, 0x2e, 0x21, 0x5d, 0xff, 0x1b, 0x8a, 0xde, 0x85, 0x59, 0x71, 0x9a, 0xb2, 0x8c,
	0xa2, 0x01, 0x69, 0xec, 0x66, 0x9f, 0x9c, 0x29, 0xbb, 0x49, 0xba, 0x42, 0x87, 0x6a, 0xbe, 0xb4,
	0x43, 0x6d, 0x8c, 0x77, 0xa8, 0x2f, 0x6f, 0xdc, 0x9a, 0x2f, 0x6b, 0xdc, 0x90, 0x05, 0x15, 0xd6,
	0x27, 0x41, 0xa0, 0x7a, 0xbc, 0xcd, 0x92, 0x65, 0x60, 0x05, 0x40, 0xb7, 0xa1, 0x16, 0x53, 0xa1,
	0x35, 0xea, 0x59, 0xb3, 0xf9, 0xde, 0x29, 0x05, 0x17, 0xfb, 0xd7, 0xd6, 0x2b, 0xf7, 0xaf, 0x16,
	0x4c, 0x0b, 0xdd, 0xfa, 0xe1, 0xb1, 0x75, 0x4d, 0xde, 0x2f, 0x59, 0xca, 0xaa, 0x13, 0x04, 0xd1,
	0xa9, 0xa3, 0x1b, 0x35, 0xad, 0x51, 0x66, 0x21, 0x79, 0xa5, 0xeb, 0x12, 0x79, 0xa0, 0x70, 0x4a,
	0xad, 0x6c, 0xbc, 0x1b, 0xbe, 0xfe, 0x1a, 0xdd, 0xf0, 0xfb, 0x30, 0xdb, 0x7f, 0xe1, 0xba, 0x4e,
	0x4c, 0x89, 0xe7, 0x0c, 0x22, 0x3f, 0xe4, 0xd6, 0x9c, 0x30, 0xe0, 0xba, 0x71, 0x17, 0x37, 0x05,
	0x06, 0x53, 0xe2, 0x1d, 0x08, 0x38, 0xba, 0x0b, 0xd7, 0xfc, 0xd0, 0x0d, 0x86, 0x1e, 0x75, 0x32,
	0xbf, 0x9f, 0xcf, 0x39, 0xce, 0xac, 0x46, 0x77, 0x93, 0x20, 0xf8, 0x18, 0x5a, 0x19, 0x87, 0x0e,
	0x86, 0x85, 0xbc, 0x6e, 0x67, 0x52, 0x0e, 0x15, 0x1a, 0xff, 0x27, 0x8c, 0x40, 0x3c, 0x91, 0x54,
	0xad, 0x45, 0xa9, 0xde, 0x5c, 0x20, 0x8a, 0xa8, 0x5e, 0xc5, 0x1a, 0xbd, 0x3e, 0x9d, 0x14, 0xfc,
	0x94, 0x43, 0x0c, 0x25, 0x21, 0x15, 0x45, 0x7b, 0x18, 0xb3, 0x28, 0xd6, 0x2a, 0xb4, 0xac, 0x91,
	0xa1, 0x44, 0x10, 0xb4, 0x25, 0x5e, 0xa9, 0xd1, 0x5e, 0x85, 0x5a, 0xb2, 0x27, 0x32, 0x61, 0x3a,
	0x2b, 0x2e, 0x00, 0xc2, 0x86, 0x9d, 0x8d, 0xdd, 0x96, 0x81, 0xea, 0x50, 0x39, 0xc0, 0x9d, 0x8d,
	0x87, 0xad, 0x92, 0xfd, 0xb7, 0x32, 0x98, 0x42, 0x92, 0x8b, 0xb2, 0xb0, 0x71, 0xb5, 0x2c, 0x6c,
	0xc3, 0x14, 0x73, 0x49, 0x28, 0x73, 0xd7, 0xc8, 0xc8, 0x20, 0xf7, 0x95, 0x38, 0x11, 0x77, 0xe2,
	0x6f, 0x48, 0x63, 0xc7, 0xf7, 0x92, 0x8a, 0xab, 0x21, 0xdb, 0x1e, 0xba, 0x03, 0x33, 0xe1, 0xb0,
	0x7f, 0x44, 0x63, 0x27, 0xea, 0x09, 0xb5, 0x32, 0x99, 0x64, 0x9a, 0xb8, 0xa1, 0xa0, 0xfb, 0x3d,
	0x1c, 0x9d, 0x32, 0xf4, 0x36, 0x34, 0xe5, 0x10, 0xe6, 0x68, 0x46, 0x35, 0x14, 0xe0, 0x86, 0x04,
	0x76, 0x15, 0x0c, 0xd9, 0xd0, 0x0c, 0xe9, 0x19, 0x77, 0x5c, 0x12, 0x04, 0x0e, 0xa3, 0xcf, 0x65,
	0x9e, 0x99, 0xc2, 0xa6, 0x00, 0xb6, 0x49, 0x10, 0x74, 0xe9, 0x73, 0xf4, 0x3f, 0xb0, 0xe8, 0xca,
	0x67, 0x08, 0xe7, 0x84, 0x84, 0x5e, 0x40, 0x59, 0xe2, 0xa7, 0x7a, 0x28, 0xc5, 0xf3, 0x0a, 0xfd,
	0x58, 0x61, 0xb5, 0xa3, 0x32, 0xb4, 0x0e, 0x37, 0x0a, 0x7c, 0x27, 0x94, 0xc4, 0xfc, 0x88, 0x12,
	0xae, 0x73, 0x0e, 0x5e, 0x1c, 0xe1, 0x7c, 0x9c, 0xa2, 0xd1, 0x87, 0x80, 0x78, 0x4c, 0xdc, 0x67,
	0x52, 0x78, 0xa7, 0x4f, 0x79, 0xec, 0xbb, 0x4c, 0x66, 0xa0, 0x1a, 0x6e, 0x49, 0x8c, 0xb8, 0xc1,
	0xae, 0x82, 0x8b, 0xb1, 0x28, 0xa6, 0x21, 0x3d, 0x1d, 0x9d, 0x5a, 0x15, 0x0c, 0xbd, 0x03, 0x4d,
	0x99, 0x77, 0x52, 0x65, 0x99, 0x2a, 0x29, 0xde, 0xc5, 0xa6, 0x84, 0x2b, 0x75, 0xd9, 0x4b, 0x50,
	0x55, 0xae, 0x31, 0xde, 0x7f, 0xdb, 0xff, 0x2c, 0x43, 0x43, 0x99, 0x3d, 0xad, 0x57, 0x2d, 0xd1,
	0x1c, 0x32, 0x67, 0x40, 0x53, 0x57, 0x13, 0x85, 0xa6, 0x89, 0x67, 0x24, 0xfc, 0x80, 0x6a, 0x0f,
	0x2b, 0x98, 0xb2, 0x54, 0x34, 0xe5, 0x6d, 0x68, 0xf4, 0x45, 0xe2, 0x4b, 0x22, 0x5e, 0x8d, 0x7b,
	0xa6, 0x80, 0x25, 0x91, 0xde, 0x82, 0x32, 0xe7, 0x81, 0x36, 0xb1, 0xf8, 0x44, 0x1f, 0xc0, 0x74,
	0x42, 0x5f, 0x29, 0x56, 0x37, 0x5d, 0x2e, 0x13, 0x02, 0xd1, 0xd1, 0xa9, 0x89, 0xb1, 0x2a, 0x77,
	0xd6, 0xa3, 0xe2, 0x7d, 0x58, 0x4c, 0x72, 0x4d, 0x2f, 0x20, 0xc7, 0xf9, 0x6b, 0x4c, 0x2f, 0x97,
	0x57, 0x6a, 0x78, 0x4e, 0xa3, 0xb7, 0x02, 0x72, 0x9c, 0x5d, 0xe6, 0x13, 0x58, 0xc8, 0x4b, 0xeb,
	0xf8, 0xa1, 0xa3, 0xdd, 0x5f, 0x99, 0xf3, 0x7a, 0x4e, 0xee, 0xed, 0x50, 0x45, 0x00, 0xfa, 0x6f,
	0xb8, 0x96, 0xda, 0xdd, 0xe9, 0x53, 0xc6, 0xc8, 0x31, 0x4d, 0x2c, 0x99, 0x22, 0x76, 0x15, 0x5c,
	0x4c, 0x6c, 0x23, 0x16, 0x07, 0x19, 0x25, 0xf3, 0xa3, 0x51, 0xa2, 0xcd, 0x8e, 0x4d, 0x96, 0xf3,
	0x81, 0x0b, 0x72, 0x99, 0x39, 0x21, 0x97, 0x89, 0xe6, 0x40, 0x9a, 0x5a, 0x16, 0x9a, 0xd1, 0xe6,
	0x40, 0x65, 0x07, 0x8d, 0xb7, 0xff, 0x51, 0x82, 0xb9, 0xcd, 0x61, 0xf0, 0x6c, 0x27, 0x22, 0xde,
	0xe3, 0x2d, 0x3f, 0xf8, 0x3e, 0xed, 0xd7, 0x17, 0x60, 0xaa, 0x9e, 0xdf, 0x19, 0x10, 0x7e, 0xa2,
	0x5b, 0x8d, 0xf7, 0x33, 0xbe, 0x8b, 0xce, 0x59, 0x55, 0xe9, 0xfb, 0x80, 0xf0, 0x13, 0x0c, 0xbd,
	0xf4, 0x5b, 0x64, 0x00, 0xc2, 0x98, 0x7f, 0x1c, 0x8a, 0x98, 0x75, 0xc2, 0x61, 0x5f, 0x3b, 0x4e,
	0x43, 0x41, 0xbb, 0xf4, 0xf9, 0xde, 0xb0, 0x8f, 0x3e, 0x85, 0x5a, 0x8f, 0x39, 0x3c, 0x7a, 0x46,
	0x43, 0xfd, 0x90, 0x95, 0x13, 0x53, 0x74, 0xb0, 0xc7, 0xaa, 0x07, 0x16, 0x04, 0x78, 0xba, 0xc7,
	0xe4, 0x87, 0x2c, 0xfa, 0xc3, 0xe0, 0x99, 0xe6, 0x13, 0x49, 0xa3, 0x8e, 0xeb, 0x02, 0xa2, 0xd0,
	0xb6, 0x68, 0x08, 0x07, 0xe7, 0x4e, 0xcf, 0x4f, 0x9c, 0x2a, 0xad, 0x95, 0x02, 0x2e, 0x84, 0x5f,
	0x7a, 0x00, 0x90, 0x09, 0x3e, 0x71, 0xf4, 0x41, 0x30, 0xa5, 0x35, 0x51, 0x5a, 0xa9, 0x63, 0xf9,
	0x6d, 0x7f, 0x0c, 0xf3, 0x05, 0x3d, 0xe8, 0x88, 0x5b, 0x80, 0xaa, 0xa8, 0xec, 0xd4, 0x93, 0x9b,
	0xd4, 0xb0, 0x5e, 0xd9, 0x3f, 0x85, 0xd9, 0xc2, 0x4d, 0xd0, 0x4d, 0x00, 0xdf, 0xa3, 0x21, 0xcf,
	0xcf, 0x38, 0x39, 0x08, 0x5a, 0x82, 0xda, 0x80, 0x30, 0x76, 0x1a, 0xc5, 0x9e, 0x9e, 0x73, 0xd2,
	0xb5, 0x90, 0xe9, 0x99, 0x1f, 0xaa, 0x9c, 0x5b, 0xc7, 0xf2, 0x5b, 0x14, 0x6e, 0x46, 0xe3, 0x17,
	0xbe, 0xab, 0x86, 0x9b, 0x3a, 0x4e, 0x96, 0xf6, 0xcf, 0x61, 0xe1, 0x20, 0xa6, 0x03, 0x12, 0xd3,
	0x44, 0xe8, 0xc4, 0x3f, 0x44, 0xf3, 0x46, 0x8e, 0x02, 0xea, 0x84, 0xa4, 0x4f, 0xb5, 0x8f, 0xe4,
	0x9b, 0x37, 0x81, 0x13, 0xbd, 0x25, 0xae, 0xf3, 0xe4, 0x33, 0xe7, 0x53, 0xa5, 0x2b, 0x16, 0x13,
	0xfb, 0x01, 0x2c, 0x8e, 0x09, 0xa0, 0x15, 0x36, 0x6a, 0x46, 0xf5, 0x3c, 0x9b, 0x99, 0xd1, 0xfe,
	0x09, 0x2c, 0xb4, 0x03, 0x4a, 0xc2, 0xe1, 0xa0, 0x28, 0xfa, 0xe5, 0x8c, 0xaf, 0x23, 0xe5, 0x0d,
	0x58, 0x1c, 0x3b, 0x4b, 0x49, 0x69, 0x7f, 0x6b, 0xc0, 0x42, 0x3b, 0xd2, 0x0d, 0x7c, 0x14, 0x77,
	0x95, 0x62, 0x45, 0xe5, 0xb9, 0xe0, 0x11, 0x48, 0xb4, 0x89, 0x8a, 0x40, 0xa9, 0x55, 0x39, 0x8e,
	0xa9, 0x61, 0x52, 0x87, 0xb7, 0xc0, 0xec, 0x53, 0x7e, 0x12, 0x79, 0x8a, 0xa2, 0xac, 0x5e, 0xa5,
	0x15, 0x48, 0x12, 0x58, 0x22, 0x77, 0xca, 0x8b, 0xca, 0xd7, 0xa0, 0x06, 0x4e, 0x96, 0xf6, 0x36,
	0x58, 0xe3, 0x92, 0xe8, 0xc4, 0xf7, 0x51, 0x32, 0x17, 0xab, 0x32, 0x3f, 0x71, 0x40, 0x50, 0x54,
	0xf6, 0x2f, 0x0d, 0xb8, 0x71, 0xd1, 0x5e, 0xaf, 0x9d, 0x3b, 0x3e, 0x85, 0x29, 0x51, 0xa1, 0xf5,
	0xd8, 0xb6, 0x9c, 0x6f, 0xf2, 0x2e, 0xd2, 0x1d, 0x96, 0xd4, 0xf6, 0xcf, 0x60, 0xe9, 0xc2, 0x1b,
	0x29, 0x07, 0x79, 0x0d, 0x31, 0x3e, 0xca, 0x9e, 0x07, 0x4a, 0x57, 0x50, 0xc3, 0x1f, 0x0d, 0xa8,
	0x6e, 0xb8, 0x72, 0x26, 0x9c, 0x83, 0x8a, 0x1f, 0x7a, 0xf4, 0x4c, 0x2a, 0xb0, 0x89, 0xd5, 0xa2,
	0x30, 0x91, 0x1a, 0x57, 0x9b, 0x48, 0xf5, 0x23, 0xa4, 0x9a, 0x45, 0x2f, 0x78, 0x84, 0x44, 0xed,
	0xcc, 0x4d, 0xa4, 0xd2, 0x54, 0xea, 0x7b, 0xb9, 0xd2, 0x12, 0x47, 0x12, 0x0b, 0xfb, 0x17, 0x06,
	0x34, 0x94, 0x1a, 0xf4, 0x0d, 0x5e, 0x43, 0x5d, 0x0b, 0x50, 0x25, 0x3c, 0xea, 0xfb, 0xae, 0x1e,
	0x54, 0xf5, 0x4a, 0xd4, 0x1f, 0xe2, 0xea, 0x81, 0xba, 0x50, 0xbe, 0xd5, 0x61, 0x58, 0xe3, 0xed,
	0x5f, 0x1b, 0x30, 0xab, 0x76, 0x17, 0x51, 0xd3, 0xe5, 0xa2, 0x35, 0x7a, 0x07, 0x1a, 0x7d, 0xda,
	0xef, 0xca, 0xe9, 0x29, 0x22, 0x9e, 0xd4, 0x68, 0x45, 0x54, 0xb9, 0x11, 0x30, 0x7a, 0x0f, 0x9a,
	0x27, 0x94, 0x0c, 0xf6, 0x5d, 0x77, 0x38, 0x20, 0x62, 0x62, 0x29, 0x25, 0x74, 0xa3, 0x70, 0x74,
	0x0f, 0x90, 0x7c, 0xc2, 0x74, 0x95, 0xb2, 0x29, 0x63, 0xc3, 0x98, 0x4a, 0xf5, 0x4a, 0xea, 0x0b,
	0x90, 0xf6, 0x19, 0xcc, 0xed, 0x0e, 0x03, 0xee, 0x17, 0x45, 0xcb, 0xeb, 0xa8, 0x7c, 0x55, 0x97,
	0x9a, 0x62, 0x9c, 0x70, 0x5d, 0x0e, 0xc7, 0x18, 0xd2, 0xbd, 0xb1, 0x24, 0xb3, 0x7f, 0x55, 0x82,
	0x6b, 0x2a, 0x26, 0xf7, 0xe3, 0xce, 0x99, 0x4b, 0x07, 0x97, 0x78, 0x57, 0xf6, 0xa8, 0x50, 0x7a,
	0xc9, 0xa3, 0xc2, 0x7d, 0xa8, 0xd3, 0x64, 0x33, 0xed, 0x58, 0x93, 0xdf, 0x00, 0x52, 0x4a, 0xb4,
	0x0d, 0x33, 0x89, 0xa3, 0xe9, 0x83, 0x94, 0xab, 0xd9, 0x97, 0xb9, 0x9a, 0x3e, 0xba, 0xc9, 0x46,
	0x12, 0xcc, 0x67, 0x50, 0x0f, 0x92, 0xab, 0xea, 0x97, 0x81, 0xc9, 0xba, 0x90, 0x93, 0x6b, 0x46,
	0x6f, 0x7f, 0x67, 0x00, 0xca, 0xfb, 0xaa, 0xde, 0x73, 0x1b, 0xae, 0xc5, 0x45, 0x55, 0x69, 0xc3,
	0xbc, 0x59, 0x54, 0x45, 0x8e, 0x04, 0x8f, 0x73, 0x8d, 0x2a, 0xa8, 0x74, 0x55, 0x05, 0xd9, 0xbf,
	0x31, 0xa0, 0xa1, 0x1d, 0x45, 0xa5, 0xbe, 0x75, 0x68, 0xc4, 0x39, 0x41, 0xb5, 0x34, 0x0b, 0xc5,
	0x9b, 0xea, 0x6b, 0x8c, 0xd0, 0x8a, 0xb2, 0x9e, 0xbd, 0x21, 0xe9, 0x4e, 0x3a, 0x07, 0x79, 0x8d,
	0x97, 0x2a, 0xfb, 0x2f, 0xf2, 0x59, 0x4d, 0xca, 0xa7, 0x93, 0xe2, 0x0e, 0xa0, 0x78, 0x4c, 0x93,
	0x5a, 0xcc, 0xb7, 0x26, 0x88, 0xa9, 0x0c, 0x7a, 0x01, 0xdf, 0xe5, 0x8f, 0x55, 0xe8, 0x0b, 0x68,
	0x29, 0x1e, 0x61, 0x45, 0x9f, 0x71, 0xd1, 0xef, 0x2a, 0xb9, 0x6f, 0xe6, 0xb3, 0xe0, 0x78, 0x9c,
	0xe1, 0x31, 0xbe, 0x0f, 0xde, 0x03, 0x33, 0xf7, 0x00, 0xa1, 0xc7, 0xd7, 0xfd, 0xbd, 0x47, 0xea,
	0x9d, 0xf4, 0x70, 0x7b, 0xb7, 0xb3, 0xb3, 0xbd, 0xd7, 0x69, 0x19, 0x6b, 0xbf, 0xaf, 0x40, 0x53,
	0xfd, 0x53, 0x59, 0xfb, 0x23, 0x5a, 0x53, 0xff, 0x66, 0x9d, 0x1b, 0xcd, 0xa4, 0xca, 0x60, 0x4b,
	0xf3, 0x05, 0xa8, 0x56, 0xd3, 0x67, 0x50, 0x55, 0x2f, 0x78, 0xa8, 0x98, 0xb0, 0x93, 0x2a, 0xb7,
	0x64, 0x8d, 0x23, 0x34, 0xf3, 0x7d, 0xfd, 0x46, 0x57, 0xe8, 0xea, 0x13, 0xc6, 0x85, 0x22, 0x58,
	0xb3, 0x1d, 0x40, 0x73, 0xa4, 0x35, 0x44, 0x37, 0x2f, 0xef, 0x9d, 0x97, 0x6e, 0x4d, 0xc4, 0xeb,
	0x1d, 0x9f, 0xc2, 0x6c, 0xa1, 0x7b, 0x42, 0xb9, 0x2a, 0x71, 0x71, 0x67, 0xb7, 0x74, 0xfb, 0x12,
	0x8a, 0x6c, 0xdf, 0x42, 0xbf, 0x93, 0xdf, 0xf7, 0xe2, 0xb6, 0x2b, 0xbf, 0xef, 0x84, 0x66, 0x09,
	0x7d, 0x05, 0x66, 0xe7, 0x8c, 0xba, 0x89, 0xe1, 0xde, 0xbe, 0x3c, 0xcd, 0xa8, 0x6d, 0xef, 0xbc,
	0x24, 0x17, 0xa9, 0x9d, 0x3d, 0x58, 0x14, 0x3b, 0xeb, 0x24, 0x4d, 0xe3, 0x17, 0x34, 0xfe, 0x0f,
	0x9c, 0xf2, 0x00, 0x2a, 0xd2, 0x9d, 0xd1, 0xc2, 0x98, 0x7f, 0xab, 0x6d, 0x16, 0xc7, 0xe0, 0x8a,
	0x73, 0x73, 0x1b, 0xee, 0x45, 0xf1, 0xf1, 0x2a, 0x19, 0x10, 0xf7, 0x84, 0xae, 0x9e, 0x10, 0x2f,
	0x8a, 0x06, 0x9a, 0x96, 0x9d, 0x88, 0x39, 0x40, 0xfd, 0x9a, 0xe1, 0x68, 0xd8, 0x5b, 0x3d, 0xa6,
	0x21, 0x8d, 0x09, 0xa7, 0xde, 0xa6, 0xfe, 0xf1, 0x84, 0xec, 0x1f, 0xd8, 0x63, 0xe3, 0x5b, 0xc3,
	0xf8, 0xad, 0x61, 0xfc, 0x3b, 0x00, 0x00, 0xff, 0xff, 0xd4, 0x21, 0x71, 0x94, 0x53, 0x21, 0x00,
	0x00,
}
