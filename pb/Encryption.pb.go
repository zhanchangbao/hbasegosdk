// Code generated by protoc-gen-go. DO NOT EDIT.
// source: Encryption.proto

// This file contains protocol buffers used for encryption

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type WrappedKey struct {
	Algorithm            *string  `protobuf:"bytes,1,req,name=algorithm" json:"algorithm,omitempty"`
	Length               *uint32  `protobuf:"varint,2,req,name=length" json:"length,omitempty"`
	Data                 []byte   `protobuf:"bytes,3,req,name=data" json:"data,omitempty"`
	Iv                   []byte   `protobuf:"bytes,4,opt,name=iv" json:"iv,omitempty"`
	Hash                 []byte   `protobuf:"bytes,5,opt,name=hash" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WrappedKey) Reset()         { *m = WrappedKey{} }
func (m *WrappedKey) String() string { return proto.CompactTextString(m) }
func (*WrappedKey) ProtoMessage()    {}
func (*WrappedKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b311bd3eebacd30, []int{0}
}

func (m *WrappedKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WrappedKey.Unmarshal(m, b)
}
func (m *WrappedKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WrappedKey.Marshal(b, m, deterministic)
}
func (m *WrappedKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WrappedKey.Merge(m, src)
}
func (m *WrappedKey) XXX_Size() int {
	return xxx_messageInfo_WrappedKey.Size(m)
}
func (m *WrappedKey) XXX_DiscardUnknown() {
	xxx_messageInfo_WrappedKey.DiscardUnknown(m)
}

var xxx_messageInfo_WrappedKey proto.InternalMessageInfo

func (m *WrappedKey) GetAlgorithm() string {
	if m != nil && m.Algorithm != nil {
		return *m.Algorithm
	}
	return ""
}

func (m *WrappedKey) GetLength() uint32 {
	if m != nil && m.Length != nil {
		return *m.Length
	}
	return 0
}

func (m *WrappedKey) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *WrappedKey) GetIv() []byte {
	if m != nil {
		return m.Iv
	}
	return nil
}

func (m *WrappedKey) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func init() {
	proto.RegisterType((*WrappedKey)(nil), "hbase.pb.WrappedKey")
}

func init() { proto.RegisterFile("Encryption.proto", fileDescriptor_3b311bd3eebacd30) }

var fileDescriptor_3b311bd3eebacd30 = []byte{
	// 202 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8f, 0xb1, 0x4a, 0x83, 0x31,
	0x10, 0x80, 0x49, 0xac, 0x62, 0x8f, 0x2a, 0x92, 0x41, 0x32, 0x38, 0x04, 0xa7, 0x4c, 0x01, 0x5f,
	0xa1, 0x20, 0x88, 0x2e, 0x92, 0xc5, 0xf9, 0xfe, 0xe6, 0xcc, 0x05, 0x6a, 0x12, 0x92, 0x58, 0xa8,
	0x4f, 0xe3, 0xa3, 0x4a, 0xff, 0x5f, 0xd0, 0xed, 0xbb, 0xef, 0x6e, 0xf8, 0x0e, 0x6e, 0x1e, 0xf3,
	0xae, 0x1d, 0xeb, 0x48, 0x25, 0xbb, 0xda, 0xca, 0x28, 0xea, 0x92, 0x27, 0xec, 0xe4, 0xea, 0x74,
	0xff, 0x05, 0xf0, 0xd6, 0xb0, 0x56, 0x0a, 0x2f, 0x74, 0x54, 0x77, 0xb0, 0xc6, 0x7d, 0x2c, 0x2d,
	0x0d, 0xfe, 0xd0, 0xc2, 0x48, 0xbb, 0xf6, 0x7f, 0x42, 0xdd, 0xc2, 0xc5, 0x9e, 0x72, 0x1c, 0xac,
	0xa5, 0x91, 0xf6, 0xca, 0xff, 0x4e, 0x4a, 0xc1, 0x2a, 0xe0, 0x40, 0x7d, 0x66, 0xa4, 0xdd, 0xf8,
	0x99, 0xd5, 0x35, 0xc8, 0x74, 0xd0, 0x2b, 0x23, 0xec, 0xc6, 0xcb, 0x74, 0x38, 0xdd, 0x30, 0x76,
	0xd6, 0xe7, 0xb3, 0x99, 0x79, 0xfb, 0x0c, 0x0f, 0xa5, 0x45, 0x87, 0x15, 0x77, 0x4c, 0x8e, 0x31,
	0x94, 0x52, 0xdd, 0x52, 0xd6, 0x19, 0x03, 0x85, 0xa5, 0x76, 0xfa, 0x7c, 0x77, 0x91, 0x32, 0x35,
	0x1c, 0x14, 0xb6, 0xff, 0x9e, 0x79, 0x3d, 0x6d, 0xfb, 0x93, 0xf8, 0x16, 0xe2, 0x27, 0x00, 0x00,
	0xff, 0xff, 0x7d, 0x9e, 0xcf, 0x1f, 0xe4, 0x00, 0x00, 0x00,
}
